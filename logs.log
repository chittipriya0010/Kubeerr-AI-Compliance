2024-07-30 00:45:21,550:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 00:45:21,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 00:45:21,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 00:45:21,795:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 00:47:32,830:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\correlations.py:66: UserWarning: There was an attempt to calculate the auto correlation, but this failed.
To hide this warning, disable the calculation
(using `df.profile_report(correlations={"auto": {"calculate": False}})`
If this is problematic for your use case, please report this as an issue:
https://github.com/ydataai/ydata-profiling/issues
(include the error message: 'Function <code object pandas_auto_compute at 0x000001B18D81FC00, file "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\pandas\correlations_pandas.py", line 167>')
  warnings.warn(

2024-07-30 00:50:25,253:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\correlations.py:66: UserWarning: There was an attempt to calculate the auto correlation, but this failed.
To hide this warning, disable the calculation
(using `df.profile_report(correlations={"auto": {"calculate": False}})`
If this is problematic for your use case, please report this as an issue:
https://github.com/ydataai/ydata-profiling/issues
(include the error message: 'Function <code object pandas_auto_compute at 0x000001B18D81FC00, file "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\pandas\correlations_pandas.py", line 167>')
  warnings.warn(

2024-07-30 00:54:47,722:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\correlations.py:66: UserWarning: There was an attempt to calculate the auto correlation, but this failed.
To hide this warning, disable the calculation
(using `df.profile_report(correlations={"auto": {"calculate": False}})`
If this is problematic for your use case, please report this as an issue:
https://github.com/ydataai/ydata-profiling/issues
(include the error message: 'Function <code object pandas_auto_compute at 0x000001B18D81FC00, file "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\pandas\correlations_pandas.py", line 167>')
  warnings.warn(

2024-07-30 01:01:23,029:INFO:PyCaret ClassificationExperiment
2024-07-30 01:01:23,030:INFO:Logging name: clf-default-name
2024-07-30 01:01:23,030:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-30 01:01:23,030:INFO:version 3.3.2
2024-07-30 01:01:23,031:INFO:Initializing setup()
2024-07-30 01:01:23,031:INFO:self.USI: 30c3
2024-07-30 01:01:23,031:INFO:self._variable_keys: {'fold_generator', 'html_param', 'fold_groups_param', 'y', 'fix_imbalance', 'fold_shuffle_param', '_ml_usecase', 'logging_param', 'exp_name_log', 'X', 'y_train', 'gpu_n_jobs_param', 'gpu_param', 'log_plots_param', 'seed', 'is_multiclass', 'X_train', 'memory', 'y_test', 'n_jobs_param', 'exp_id', 'target_param', 'USI', 'pipeline', 'idx', 'X_test', 'data', '_available_plots'}
2024-07-30 01:01:23,031:INFO:Checking environment
2024-07-30 01:01:23,032:INFO:python_version: 3.10.0
2024-07-30 01:01:23,032:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2024-07-30 01:01:23,032:INFO:machine: AMD64
2024-07-30 01:01:24,120:INFO:platform: Windows-10-10.0.19045-SP0
2024-07-30 01:01:24,230:INFO:Memory: svmem(total=3504250880, available=687071232, percent=80.4, used=2817179648, free=687071232)
2024-07-30 01:01:24,279:INFO:Physical Core: 2
2024-07-30 01:01:24,280:INFO:Logical Core: 4
2024-07-30 01:01:24,280:INFO:Checking libraries
2024-07-30 01:01:24,280:INFO:System:
2024-07-30 01:01:24,281:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2024-07-30 01:01:24,281:INFO:executable: D:\Desktop\autoanalysis\autoanalysis\Scripts\python.exe
2024-07-30 01:01:24,282:INFO:   machine: Windows-10-10.0.19045-SP0
2024-07-30 01:01:24,282:INFO:PyCaret required dependencies:
2024-07-30 01:01:28,152:INFO:                 pip: 21.2.3
2024-07-30 01:01:28,152:INFO:          setuptools: 57.4.0
2024-07-30 01:01:28,152:INFO:             pycaret: 3.3.2
2024-07-30 01:01:28,152:INFO:             IPython: 8.26.0
2024-07-30 01:01:28,152:INFO:          ipywidgets: 8.1.3
2024-07-30 01:01:28,152:INFO:                tqdm: 4.66.4
2024-07-30 01:01:28,152:INFO:               numpy: 1.26.4
2024-07-30 01:01:28,152:INFO:              pandas: 2.1.4
2024-07-30 01:01:28,152:INFO:              jinja2: 3.1.4
2024-07-30 01:01:28,152:INFO:               scipy: 1.11.4
2024-07-30 01:01:28,152:INFO:              joblib: 1.3.2
2024-07-30 01:01:28,152:INFO:             sklearn: 1.4.2
2024-07-30 01:01:28,152:INFO:                pyod: 2.0.1
2024-07-30 01:01:28,152:INFO:            imblearn: 0.12.3
2024-07-30 01:01:28,152:INFO:   category_encoders: 2.6.3
2024-07-30 01:01:28,152:INFO:            lightgbm: 4.5.0
2024-07-30 01:01:28,152:INFO:               numba: 0.60.0
2024-07-30 01:01:28,152:INFO:            requests: 2.32.3
2024-07-30 01:01:28,152:INFO:          matplotlib: 3.7.5
2024-07-30 01:01:28,152:INFO:          scikitplot: 0.3.7
2024-07-30 01:01:28,152:INFO:         yellowbrick: 1.5
2024-07-30 01:01:28,152:INFO:              plotly: 5.23.0
2024-07-30 01:01:28,152:INFO:    plotly-resampler: Not installed
2024-07-30 01:01:28,152:INFO:             kaleido: 0.2.1
2024-07-30 01:01:28,152:INFO:           schemdraw: 0.15
2024-07-30 01:01:28,152:INFO:         statsmodels: 0.14.2
2024-07-30 01:01:28,152:INFO:              sktime: 0.26.0
2024-07-30 01:01:28,152:INFO:               tbats: 1.1.3
2024-07-30 01:01:28,152:INFO:            pmdarima: 2.0.4
2024-07-30 01:01:28,152:INFO:              psutil: 6.0.0
2024-07-30 01:01:28,152:INFO:          markupsafe: 2.1.5
2024-07-30 01:01:28,152:INFO:             pickle5: Not installed
2024-07-30 01:01:28,152:INFO:         cloudpickle: 3.0.0
2024-07-30 01:01:28,152:INFO:         deprecation: 2.1.0
2024-07-30 01:01:28,152:INFO:              xxhash: 3.4.1
2024-07-30 01:01:28,152:INFO:           wurlitzer: Not installed
2024-07-30 01:01:28,152:INFO:PyCaret optional dependencies:
2024-07-30 01:01:28,199:INFO:                shap: Not installed
2024-07-30 01:01:28,199:INFO:           interpret: Not installed
2024-07-30 01:01:28,199:INFO:                umap: Not installed
2024-07-30 01:01:28,199:INFO:     ydata_profiling: 4.9.0
2024-07-30 01:01:28,199:INFO:  explainerdashboard: Not installed
2024-07-30 01:01:28,199:INFO:             autoviz: Not installed
2024-07-30 01:01:28,199:INFO:           fairlearn: Not installed
2024-07-30 01:01:28,199:INFO:          deepchecks: Not installed
2024-07-30 01:01:28,199:INFO:             xgboost: Not installed
2024-07-30 01:01:28,199:INFO:            catboost: Not installed
2024-07-30 01:01:28,199:INFO:              kmodes: Not installed
2024-07-30 01:01:28,199:INFO:             mlxtend: Not installed
2024-07-30 01:01:28,199:INFO:       statsforecast: Not installed
2024-07-30 01:01:28,199:INFO:        tune_sklearn: Not installed
2024-07-30 01:01:28,199:INFO:                 ray: Not installed
2024-07-30 01:01:28,199:INFO:            hyperopt: Not installed
2024-07-30 01:01:28,199:INFO:              optuna: Not installed
2024-07-30 01:01:28,199:INFO:               skopt: Not installed
2024-07-30 01:01:28,199:INFO:              mlflow: Not installed
2024-07-30 01:01:28,199:INFO:              gradio: Not installed
2024-07-30 01:01:28,199:INFO:             fastapi: Not installed
2024-07-30 01:01:28,199:INFO:             uvicorn: Not installed
2024-07-30 01:01:28,199:INFO:              m2cgen: Not installed
2024-07-30 01:01:28,199:INFO:           evidently: Not installed
2024-07-30 01:01:28,199:INFO:               fugue: Not installed
2024-07-30 01:01:28,199:INFO:           streamlit: 1.37.0
2024-07-30 01:01:28,199:INFO:             prophet: Not installed
2024-07-30 01:01:28,199:INFO:None
2024-07-30 01:01:28,199:INFO:Set up data.
2024-07-30 01:01:28,304:INFO:Set up folding strategy.
2024-07-30 01:01:28,304:INFO:Set up train/test split.
2024-07-30 01:02:11,985:INFO:PyCaret ClassificationExperiment
2024-07-30 01:02:11,986:INFO:Logging name: clf-default-name
2024-07-30 01:02:11,986:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-30 01:02:11,986:INFO:version 3.3.2
2024-07-30 01:02:11,986:INFO:Initializing setup()
2024-07-30 01:02:11,986:INFO:self.USI: cc36
2024-07-30 01:02:11,986:INFO:self._variable_keys: {'fold_generator', 'html_param', 'fold_groups_param', 'y', 'fix_imbalance', 'fold_shuffle_param', '_ml_usecase', 'logging_param', 'exp_name_log', 'X', 'y_train', 'gpu_n_jobs_param', 'gpu_param', 'log_plots_param', 'seed', 'is_multiclass', 'X_train', 'memory', 'y_test', 'n_jobs_param', 'exp_id', 'target_param', 'USI', 'pipeline', 'idx', 'X_test', 'data', '_available_plots'}
2024-07-30 01:02:11,986:INFO:Checking environment
2024-07-30 01:02:11,987:INFO:python_version: 3.10.0
2024-07-30 01:02:11,987:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2024-07-30 01:02:11,987:INFO:machine: AMD64
2024-07-30 01:02:11,987:INFO:platform: Windows-10-10.0.19045-SP0
2024-07-30 01:02:11,990:INFO:Memory: svmem(total=3504250880, available=623419392, percent=82.2, used=2880831488, free=623419392)
2024-07-30 01:02:11,990:INFO:Physical Core: 2
2024-07-30 01:02:11,990:INFO:Logical Core: 4
2024-07-30 01:02:11,990:INFO:Checking libraries
2024-07-30 01:02:11,990:INFO:System:
2024-07-30 01:02:11,991:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2024-07-30 01:02:11,991:INFO:executable: D:\Desktop\autoanalysis\autoanalysis\Scripts\python.exe
2024-07-30 01:02:11,991:INFO:   machine: Windows-10-10.0.19045-SP0
2024-07-30 01:02:11,991:INFO:PyCaret required dependencies:
2024-07-30 01:02:11,991:INFO:                 pip: 21.2.3
2024-07-30 01:02:11,991:INFO:          setuptools: 57.4.0
2024-07-30 01:02:11,992:INFO:             pycaret: 3.3.2
2024-07-30 01:02:11,992:INFO:             IPython: 8.26.0
2024-07-30 01:02:11,992:INFO:          ipywidgets: 8.1.3
2024-07-30 01:02:11,992:INFO:                tqdm: 4.66.4
2024-07-30 01:02:11,992:INFO:               numpy: 1.26.4
2024-07-30 01:02:11,992:INFO:              pandas: 2.1.4
2024-07-30 01:02:11,992:INFO:              jinja2: 3.1.4
2024-07-30 01:02:11,992:INFO:               scipy: 1.11.4
2024-07-30 01:02:11,992:INFO:              joblib: 1.3.2
2024-07-30 01:02:11,992:INFO:             sklearn: 1.4.2
2024-07-30 01:02:11,992:INFO:                pyod: 2.0.1
2024-07-30 01:02:11,992:INFO:            imblearn: 0.12.3
2024-07-30 01:02:11,992:INFO:   category_encoders: 2.6.3
2024-07-30 01:02:11,992:INFO:            lightgbm: 4.5.0
2024-07-30 01:02:11,992:INFO:               numba: 0.60.0
2024-07-30 01:02:11,992:INFO:            requests: 2.32.3
2024-07-30 01:02:11,993:INFO:          matplotlib: 3.7.5
2024-07-30 01:02:11,993:INFO:          scikitplot: 0.3.7
2024-07-30 01:02:11,993:INFO:         yellowbrick: 1.5
2024-07-30 01:02:11,993:INFO:              plotly: 5.23.0
2024-07-30 01:02:11,993:INFO:    plotly-resampler: Not installed
2024-07-30 01:02:11,993:INFO:             kaleido: 0.2.1
2024-07-30 01:02:11,993:INFO:           schemdraw: 0.15
2024-07-30 01:02:11,993:INFO:         statsmodels: 0.14.2
2024-07-30 01:02:11,993:INFO:              sktime: 0.26.0
2024-07-30 01:02:11,993:INFO:               tbats: 1.1.3
2024-07-30 01:02:11,993:INFO:            pmdarima: 2.0.4
2024-07-30 01:02:11,993:INFO:              psutil: 6.0.0
2024-07-30 01:02:11,993:INFO:          markupsafe: 2.1.5
2024-07-30 01:02:11,993:INFO:             pickle5: Not installed
2024-07-30 01:02:11,993:INFO:         cloudpickle: 3.0.0
2024-07-30 01:02:11,993:INFO:         deprecation: 2.1.0
2024-07-30 01:02:12,052:INFO:              xxhash: 3.4.1
2024-07-30 01:02:12,053:INFO:           wurlitzer: Not installed
2024-07-30 01:02:12,053:INFO:PyCaret optional dependencies:
2024-07-30 01:02:12,053:INFO:                shap: Not installed
2024-07-30 01:02:12,053:INFO:           interpret: Not installed
2024-07-30 01:02:12,053:INFO:                umap: Not installed
2024-07-30 01:02:12,053:INFO:     ydata_profiling: 4.9.0
2024-07-30 01:02:12,053:INFO:  explainerdashboard: Not installed
2024-07-30 01:02:12,053:INFO:             autoviz: Not installed
2024-07-30 01:02:12,053:INFO:           fairlearn: Not installed
2024-07-30 01:02:12,053:INFO:          deepchecks: Not installed
2024-07-30 01:02:12,053:INFO:             xgboost: Not installed
2024-07-30 01:02:12,054:INFO:            catboost: Not installed
2024-07-30 01:02:12,054:INFO:              kmodes: Not installed
2024-07-30 01:02:12,054:INFO:             mlxtend: Not installed
2024-07-30 01:02:12,054:INFO:       statsforecast: Not installed
2024-07-30 01:02:12,054:INFO:        tune_sklearn: Not installed
2024-07-30 01:02:12,054:INFO:                 ray: Not installed
2024-07-30 01:02:12,054:INFO:            hyperopt: Not installed
2024-07-30 01:02:12,054:INFO:              optuna: Not installed
2024-07-30 01:02:12,054:INFO:               skopt: Not installed
2024-07-30 01:02:12,054:INFO:              mlflow: Not installed
2024-07-30 01:02:12,054:INFO:              gradio: Not installed
2024-07-30 01:02:12,054:INFO:             fastapi: Not installed
2024-07-30 01:02:12,054:INFO:             uvicorn: Not installed
2024-07-30 01:02:12,054:INFO:              m2cgen: Not installed
2024-07-30 01:02:12,054:INFO:           evidently: Not installed
2024-07-30 01:02:12,054:INFO:               fugue: Not installed
2024-07-30 01:02:12,055:INFO:           streamlit: 1.37.0
2024-07-30 01:02:12,055:INFO:             prophet: Not installed
2024-07-30 01:02:12,055:INFO:None
2024-07-30 01:02:12,055:INFO:Set up data.
2024-07-30 01:02:12,076:INFO:Set up folding strategy.
2024-07-30 01:02:12,076:INFO:Set up train/test split.
2024-07-30 01:02:42,213:INFO:PyCaret ClassificationExperiment
2024-07-30 01:02:42,213:INFO:Logging name: clf-default-name
2024-07-30 01:02:42,213:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-30 01:02:42,213:INFO:version 3.3.2
2024-07-30 01:02:42,213:INFO:Initializing setup()
2024-07-30 01:02:42,213:INFO:self.USI: b82e
2024-07-30 01:02:42,214:INFO:self._variable_keys: {'fold_generator', 'html_param', 'fold_groups_param', 'y', 'fix_imbalance', 'fold_shuffle_param', '_ml_usecase', 'logging_param', 'exp_name_log', 'X', 'y_train', 'gpu_n_jobs_param', 'gpu_param', 'log_plots_param', 'seed', 'is_multiclass', 'X_train', 'memory', 'y_test', 'n_jobs_param', 'exp_id', 'target_param', 'USI', 'pipeline', 'idx', 'X_test', 'data', '_available_plots'}
2024-07-30 01:02:42,214:INFO:Checking environment
2024-07-30 01:02:42,214:INFO:python_version: 3.10.0
2024-07-30 01:02:42,214:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2024-07-30 01:02:42,214:INFO:machine: AMD64
2024-07-30 01:02:42,215:INFO:platform: Windows-10-10.0.19045-SP0
2024-07-30 01:02:42,218:INFO:Memory: svmem(total=3504250880, available=484302848, percent=86.2, used=3019948032, free=484302848)
2024-07-30 01:02:42,218:INFO:Physical Core: 2
2024-07-30 01:02:42,218:INFO:Logical Core: 4
2024-07-30 01:02:42,218:INFO:Checking libraries
2024-07-30 01:02:42,219:INFO:System:
2024-07-30 01:02:42,219:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2024-07-30 01:02:42,219:INFO:executable: D:\Desktop\autoanalysis\autoanalysis\Scripts\python.exe
2024-07-30 01:02:42,219:INFO:   machine: Windows-10-10.0.19045-SP0
2024-07-30 01:02:42,219:INFO:PyCaret required dependencies:
2024-07-30 01:02:42,219:INFO:                 pip: 21.2.3
2024-07-30 01:02:42,219:INFO:          setuptools: 57.4.0
2024-07-30 01:02:42,220:INFO:             pycaret: 3.3.2
2024-07-30 01:02:42,220:INFO:             IPython: 8.26.0
2024-07-30 01:02:42,220:INFO:          ipywidgets: 8.1.3
2024-07-30 01:02:42,220:INFO:                tqdm: 4.66.4
2024-07-30 01:02:42,220:INFO:               numpy: 1.26.4
2024-07-30 01:02:42,220:INFO:              pandas: 2.1.4
2024-07-30 01:02:42,220:INFO:              jinja2: 3.1.4
2024-07-30 01:02:42,221:INFO:               scipy: 1.11.4
2024-07-30 01:02:42,221:INFO:              joblib: 1.3.2
2024-07-30 01:02:42,221:INFO:             sklearn: 1.4.2
2024-07-30 01:02:42,221:INFO:                pyod: 2.0.1
2024-07-30 01:02:42,221:INFO:            imblearn: 0.12.3
2024-07-30 01:02:42,221:INFO:   category_encoders: 2.6.3
2024-07-30 01:02:42,221:INFO:            lightgbm: 4.5.0
2024-07-30 01:02:42,222:INFO:               numba: 0.60.0
2024-07-30 01:02:42,222:INFO:            requests: 2.32.3
2024-07-30 01:02:42,222:INFO:          matplotlib: 3.7.5
2024-07-30 01:02:42,222:INFO:          scikitplot: 0.3.7
2024-07-30 01:02:42,222:INFO:         yellowbrick: 1.5
2024-07-30 01:02:42,222:INFO:              plotly: 5.23.0
2024-07-30 01:02:42,222:INFO:    plotly-resampler: Not installed
2024-07-30 01:02:42,222:INFO:             kaleido: 0.2.1
2024-07-30 01:02:42,223:INFO:           schemdraw: 0.15
2024-07-30 01:02:42,223:INFO:         statsmodels: 0.14.2
2024-07-30 01:02:42,223:INFO:              sktime: 0.26.0
2024-07-30 01:02:42,223:INFO:               tbats: 1.1.3
2024-07-30 01:02:42,223:INFO:            pmdarima: 2.0.4
2024-07-30 01:02:42,223:INFO:              psutil: 6.0.0
2024-07-30 01:02:42,223:INFO:          markupsafe: 2.1.5
2024-07-30 01:02:42,223:INFO:             pickle5: Not installed
2024-07-30 01:02:42,223:INFO:         cloudpickle: 3.0.0
2024-07-30 01:02:42,224:INFO:         deprecation: 2.1.0
2024-07-30 01:02:42,224:INFO:              xxhash: 3.4.1
2024-07-30 01:02:42,224:INFO:           wurlitzer: Not installed
2024-07-30 01:02:42,224:INFO:PyCaret optional dependencies:
2024-07-30 01:02:42,224:INFO:                shap: Not installed
2024-07-30 01:02:42,224:INFO:           interpret: Not installed
2024-07-30 01:02:42,224:INFO:                umap: Not installed
2024-07-30 01:02:42,225:INFO:     ydata_profiling: 4.9.0
2024-07-30 01:02:42,225:INFO:  explainerdashboard: Not installed
2024-07-30 01:02:42,225:INFO:             autoviz: Not installed
2024-07-30 01:02:42,225:INFO:           fairlearn: Not installed
2024-07-30 01:02:42,225:INFO:          deepchecks: Not installed
2024-07-30 01:02:42,225:INFO:             xgboost: Not installed
2024-07-30 01:02:42,225:INFO:            catboost: Not installed
2024-07-30 01:02:42,225:INFO:              kmodes: Not installed
2024-07-30 01:02:42,226:INFO:             mlxtend: Not installed
2024-07-30 01:02:42,226:INFO:       statsforecast: Not installed
2024-07-30 01:02:42,226:INFO:        tune_sklearn: Not installed
2024-07-30 01:02:42,226:INFO:                 ray: Not installed
2024-07-30 01:02:42,226:INFO:            hyperopt: Not installed
2024-07-30 01:02:42,226:INFO:              optuna: Not installed
2024-07-30 01:02:42,226:INFO:               skopt: Not installed
2024-07-30 01:02:42,226:INFO:              mlflow: Not installed
2024-07-30 01:02:42,227:INFO:              gradio: Not installed
2024-07-30 01:02:42,227:INFO:             fastapi: Not installed
2024-07-30 01:02:42,227:INFO:             uvicorn: Not installed
2024-07-30 01:02:42,227:INFO:              m2cgen: Not installed
2024-07-30 01:02:42,227:INFO:           evidently: Not installed
2024-07-30 01:02:42,227:INFO:               fugue: Not installed
2024-07-30 01:02:42,227:INFO:           streamlit: 1.37.0
2024-07-30 01:02:42,227:INFO:             prophet: Not installed
2024-07-30 01:02:42,228:INFO:None
2024-07-30 01:02:42,228:INFO:Set up data.
2024-07-30 01:02:42,250:INFO:Set up folding strategy.
2024-07-30 01:02:42,250:INFO:Set up train/test split.
2024-07-30 01:02:42,528:INFO:Set up index.
2024-07-30 01:02:42,528:INFO:Assigning column types.
2024-07-30 01:02:42,543:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-30 01:02:42,688:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-30 01:02:42,824:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-30 01:02:43,151:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:43,152:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:43,239:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-30 01:02:43,240:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-30 01:02:43,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:43,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:43,316:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-30 01:02:43,406:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-30 01:02:43,452:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:43,453:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:43,532:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-30 01:02:43,592:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:43,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:43,593:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-30 01:02:43,783:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:43,783:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:43,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:43,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:44,062:INFO:Preparing preprocessing pipeline...
2024-07-30 01:02:44,068:INFO:Set up label encoding.
2024-07-30 01:02:44,068:INFO:Set up simple imputation.
2024-07-30 01:02:44,073:INFO:Set up encoding of categorical features.
2024-07-30 01:02:44,074:INFO:Set up column name cleaning.
2024-07-30 01:02:44,375:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:02:44,440:INFO:Finished creating preprocessing pipeline.
2024-07-30 01:02:44,570:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Lenovo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Strike Price', 'Call-Price',
                                             'Call-Change in Price (%)',
                                             'Call-Open Interest',
                                             'Call-Volume',
                                             'Call-Implied V...
                 TransformerWrapper(exclude=None, include=['Underlying Name'],
                                    transformer=OneHotEncoder(cols=['Underlying '
                                                                    'Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-30 01:02:44,581:INFO:Creating final display dataframe.
2024-07-30 01:02:44,641:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:02:44,813:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:02:45,316:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:02:45,788:INFO:Setup _display_container:                     Description             Value
0                    Session id              4113
1                        Target   Expiration Date
2                   Target type        Multiclass
3                Target mapping     29-08-2024: 0
4           Original data shape          (16, 24)
5        Transformed data shape          (16, 22)
6   Transformed train set shape          (11, 22)
7    Transformed test set shape           (5, 22)
8              Numeric features                22
9          Categorical features                 1
10     Rows with missing values            100.0%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              b82e
2024-07-30 01:02:45,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:45,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:46,148:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:46,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 01:02:46,153:INFO:setup() successfully completed in 3.94s...............
2024-07-30 01:02:50,693:INFO:Initializing compare_models()
2024-07-30 01:02:50,693:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-30 01:02:50,693:INFO:Checking exceptions
2024-07-30 01:02:50,693:INFO:Preparing display monitor
2024-07-30 01:02:50,693:INFO:Initializing Logistic Regression
2024-07-30 01:02:50,693:INFO:Total runtime is 0.0 minutes
2024-07-30 01:02:50,708:INFO:SubProcess create_model() called ==================================
2024-07-30 01:02:50,708:INFO:Initializing create_model()
2024-07-30 01:02:50,708:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:02:50,708:INFO:Checking exceptions
2024-07-30 01:02:50,708:INFO:Importing libraries
2024-07-30 01:02:50,708:INFO:Copying training dataset
2024-07-30 01:02:50,720:INFO:Defining folds
2024-07-30 01:02:50,720:INFO:Declaring metric variables
2024-07-30 01:02:50,720:INFO:Importing untrained model
2024-07-30 01:02:50,721:INFO:Logistic Regression Imported successfully
2024-07-30 01:02:50,721:INFO:Starting cross validation
2024-07-30 01:02:50,724:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:05:51,075:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:51,076:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:51,077:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:51,599:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:51,600:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:51,620:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:51,624:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:51,720:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:51,725:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:51,840:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-30 01:05:51,946:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_logistic.py", line 1246, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


2024-07-30 01:05:51,947:INFO:Initializing create_model()
2024-07-30 01:05:51,948:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:05:51,948:INFO:Checking exceptions
2024-07-30 01:05:51,948:INFO:Importing libraries
2024-07-30 01:05:51,961:INFO:Copying training dataset
2024-07-30 01:05:52,036:INFO:Defining folds
2024-07-30 01:05:52,036:INFO:Declaring metric variables
2024-07-30 01:05:52,038:INFO:Importing untrained model
2024-07-30 01:05:52,038:INFO:Logistic Regression Imported successfully
2024-07-30 01:05:52,039:INFO:Starting cross validation
2024-07-30 01:05:52,042:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:05:52,094:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,171:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,175:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,200:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,286:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,323:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,367:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,399:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,456:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,481:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,609:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-07-30 01:05:52,610:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_logistic.py", line 1246, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_logistic.py", line 1246, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


2024-07-30 01:05:52,619:INFO:Initializing K Neighbors Classifier
2024-07-30 01:05:52,619:INFO:Total runtime is 3.0321041146914163 minutes
2024-07-30 01:05:52,620:INFO:SubProcess create_model() called ==================================
2024-07-30 01:05:52,620:INFO:Initializing create_model()
2024-07-30 01:05:52,620:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:05:52,620:INFO:Checking exceptions
2024-07-30 01:05:52,620:INFO:Importing libraries
2024-07-30 01:05:52,620:INFO:Copying training dataset
2024-07-30 01:05:52,638:INFO:Defining folds
2024-07-30 01:05:52,638:INFO:Declaring metric variables
2024-07-30 01:05:52,639:INFO:Importing untrained model
2024-07-30 01:05:52,640:INFO:K Neighbors Classifier Imported successfully
2024-07-30 01:05:52,641:INFO:Starting cross validation
2024-07-30 01:05:52,645:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:05:52,710:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,734:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,743:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,748:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,833:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,838:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,842:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:52,847:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:55,057:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:55,057:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:55,057:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:55,058:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:55,075:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,076:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,075:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,087:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,161:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,161:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,162:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,162:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,173:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,173:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,174:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,212:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,212:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,213:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:55,213:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,214:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,214:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:55,214:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:55,214:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:55,221:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,221:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,222:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,224:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,287:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:55,288:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:55,292:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:55,301:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:55,371:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:55,377:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:55,383:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:55,393:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:55,428:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:55,432:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,434:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:55,438:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,439:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,441:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:55,445:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,445:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,447:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,447:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:55,451:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,452:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,453:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,453:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,453:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:55,458:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

arn(

2024-07-30 01:05:55,460:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,461:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,462:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:55,465:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,466:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,467:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,467:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:55,471:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,471:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,472:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:55,476:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,482:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:55,487:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:55,539:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:55,543:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:55,576:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:55,580:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,582:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:55,585:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,587:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,592:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,593:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,596:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:55,597:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,597:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:55,601:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,602:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,603:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:55,607:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:55,674:INFO:Calculating mean and std
2024-07-30 01:05:55,870:INFO:Creating metrics dataframe
2024-07-30 01:05:55,915:INFO:Uploading results into container
2024-07-30 01:05:55,968:INFO:Uploading model into container now
2024-07-30 01:05:55,971:INFO:_master_model_container: 1
2024-07-30 01:05:55,971:INFO:_display_container: 2
2024-07-30 01:05:55,974:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-30 01:05:55,975:INFO:create_model() successfully completed......................................
2024-07-30 01:05:57,267:INFO:SubProcess create_model() end ==================================
2024-07-30 01:05:57,268:INFO:Creating metrics dataframe
2024-07-30 01:05:57,294:INFO:Initializing Naive Bayes
2024-07-30 01:05:57,294:INFO:Total runtime is 3.110028044382731 minutes
2024-07-30 01:05:57,294:INFO:SubProcess create_model() called ==================================
2024-07-30 01:05:57,295:INFO:Initializing create_model()
2024-07-30 01:05:57,295:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:05:57,295:INFO:Checking exceptions
2024-07-30 01:05:57,295:INFO:Importing libraries
2024-07-30 01:05:57,295:INFO:Copying training dataset
2024-07-30 01:05:57,304:INFO:Defining folds
2024-07-30 01:05:57,304:INFO:Declaring metric variables
2024-07-30 01:05:57,304:INFO:Importing untrained model
2024-07-30 01:05:57,305:INFO:Naive Bayes Imported successfully
2024-07-30 01:05:57,305:INFO:Starting cross validation
2024-07-30 01:05:57,309:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:05:57,398:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,406:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,489:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,493:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,503:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,510:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,544:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:57,548:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:57,552:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,555:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,557:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:57,559:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,562:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:57,563:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,566:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,566:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,570:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,570:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,572:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,573:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:57,575:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,576:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,576:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,577:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,577:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:57,581:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,583:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,583:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:57,586:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,587:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,592:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,593:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:57,597:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,601:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,609:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,626:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,630:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,692:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,701:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,716:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,731:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:57,735:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,736:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:57,742:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,745:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,749:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,751:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:57,751:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,755:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,758:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,762:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,766:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,766:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:57,768:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:57,769:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,771:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,772:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,776:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,776:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:57,777:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,778:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:57,781:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,782:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,782:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,788:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,794:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,795:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,795:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:57,799:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,799:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,872:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,875:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:57,948:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:57,952:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,953:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:57,961:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,966:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,969:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,971:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,982:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:57,983:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,984:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:57,986:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,986:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:57,987:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:57,993:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:58,004:INFO:Calculating mean and std
2024-07-30 01:05:58,012:INFO:Creating metrics dataframe
2024-07-30 01:05:58,023:INFO:Uploading results into container
2024-07-30 01:05:58,029:INFO:Uploading model into container now
2024-07-30 01:05:58,031:INFO:_master_model_container: 2
2024-07-30 01:05:58,031:INFO:_display_container: 2
2024-07-30 01:05:58,032:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-30 01:05:58,032:INFO:create_model() successfully completed......................................
2024-07-30 01:05:58,209:INFO:SubProcess create_model() end ==================================
2024-07-30 01:05:58,209:INFO:Creating metrics dataframe
2024-07-30 01:05:58,216:INFO:Initializing Decision Tree Classifier
2024-07-30 01:05:58,216:INFO:Total runtime is 3.1253920992215476 minutes
2024-07-30 01:05:58,217:INFO:SubProcess create_model() called ==================================
2024-07-30 01:05:58,217:INFO:Initializing create_model()
2024-07-30 01:05:58,217:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:05:58,217:INFO:Checking exceptions
2024-07-30 01:05:58,217:INFO:Importing libraries
2024-07-30 01:05:58,217:INFO:Copying training dataset
2024-07-30 01:05:58,232:INFO:Defining folds
2024-07-30 01:05:58,233:INFO:Declaring metric variables
2024-07-30 01:05:58,233:INFO:Importing untrained model
2024-07-30 01:05:58,234:INFO:Decision Tree Classifier Imported successfully
2024-07-30 01:05:58,234:INFO:Starting cross validation
2024-07-30 01:05:58,236:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:05:58,367:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:58,370:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:58,375:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:58,395:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,235:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,245:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,249:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,250:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,337:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:59,337:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:59,342:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:59,345:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,346:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,346:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,352:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,354:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,354:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,355:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:59,361:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,362:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,363:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,364:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,370:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,370:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:59,370:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,371:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:59,371:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,371:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:59,379:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,382:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,388:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,388:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,401:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,423:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,449:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,452:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,452:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:59,459:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,464:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,501:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,553:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,595:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,622:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:59,629:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,632:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,637:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,648:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,659:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,663:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:59,667:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,666:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,668:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:59,672:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,677:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,685:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,695:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,695:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:59,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,701:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,704:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:59,706:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:59,711:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,718:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,719:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,728:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,728:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,733:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,734:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,735:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:59,735:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,739:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,742:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,743:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:59,747:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,786:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,803:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:05:59,836:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:59,838:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,844:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,850:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,853:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:05:59,856:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,857:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,858:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:59,862:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,863:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,867:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:05:59,871:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,871:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:05:59,875:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:05:59,884:INFO:Calculating mean and std
2024-07-30 01:05:59,887:INFO:Creating metrics dataframe
2024-07-30 01:05:59,892:INFO:Uploading results into container
2024-07-30 01:05:59,893:INFO:Uploading model into container now
2024-07-30 01:05:59,894:INFO:_master_model_container: 3
2024-07-30 01:05:59,894:INFO:_display_container: 2
2024-07-30 01:05:59,895:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4113, splitter='best')
2024-07-30 01:05:59,895:INFO:create_model() successfully completed......................................
2024-07-30 01:06:00,050:INFO:SubProcess create_model() end ==================================
2024-07-30 01:06:00,050:INFO:Creating metrics dataframe
2024-07-30 01:06:00,054:INFO:Initializing SVM - Linear Kernel
2024-07-30 01:06:00,054:INFO:Total runtime is 3.1560171643892927 minutes
2024-07-30 01:06:00,054:INFO:SubProcess create_model() called ==================================
2024-07-30 01:06:00,055:INFO:Initializing create_model()
2024-07-30 01:06:00,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:06:00,055:INFO:Checking exceptions
2024-07-30 01:06:00,055:INFO:Importing libraries
2024-07-30 01:06:00,055:INFO:Copying training dataset
2024-07-30 01:06:00,065:INFO:Defining folds
2024-07-30 01:06:00,065:INFO:Declaring metric variables
2024-07-30 01:06:00,065:INFO:Importing untrained model
2024-07-30 01:06:00,066:INFO:SVM - Linear Kernel Imported successfully
2024-07-30 01:06:00,066:INFO:Starting cross validation
2024-07-30 01:06:00,069:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:06:00,149:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,154:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,157:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,180:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,440:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,446:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,450:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,455:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,534:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,539:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,620:WARNING:create_model() for svm raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-30 01:06:00,621:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 658, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-30 01:06:00,631:INFO:Initializing create_model()
2024-07-30 01:06:00,631:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:06:00,631:INFO:Checking exceptions
2024-07-30 01:06:00,631:INFO:Importing libraries
2024-07-30 01:06:00,632:INFO:Copying training dataset
2024-07-30 01:06:00,683:INFO:Defining folds
2024-07-30 01:06:00,683:INFO:Declaring metric variables
2024-07-30 01:06:00,684:INFO:Importing untrained model
2024-07-30 01:06:00,686:INFO:SVM - Linear Kernel Imported successfully
2024-07-30 01:06:00,687:INFO:Starting cross validation
2024-07-30 01:06:00,694:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:06:00,786:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,790:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,793:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,803:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,888:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,895:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,899:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:00,964:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:01,005:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:01,023:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:01,098:ERROR:create_model() for svm raised an exception or returned all 0.0:
2024-07-30 01:06:01,099:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 658, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 658, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-30 01:06:01,099:INFO:Initializing Ridge Classifier
2024-07-30 01:06:01,099:INFO:Total runtime is 3.173438958326976 minutes
2024-07-30 01:06:01,100:INFO:SubProcess create_model() called ==================================
2024-07-30 01:06:01,100:INFO:Initializing create_model()
2024-07-30 01:06:01,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:06:01,100:INFO:Checking exceptions
2024-07-30 01:06:01,100:INFO:Importing libraries
2024-07-30 01:06:01,100:INFO:Copying training dataset
2024-07-30 01:06:01,110:INFO:Defining folds
2024-07-30 01:06:01,110:INFO:Declaring metric variables
2024-07-30 01:06:01,110:INFO:Importing untrained model
2024-07-30 01:06:01,111:INFO:Ridge Classifier Imported successfully
2024-07-30 01:06:01,111:INFO:Starting cross validation
2024-07-30 01:06:01,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:06:01,154:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:01,159:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:01,163:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:01,175:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:02,366:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:02,367:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:02,369:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:02,370:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:02,612:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:02,612:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:02,613:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:02,623:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,624:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,625:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:02,637:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,670:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,672:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,676:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,681:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,683:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,685:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,688:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:02,690:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:02,690:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:02,692:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:02,693:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:02,696:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:02,697:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:02,697:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,708:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,714:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:02,717:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:02,718:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:02,724:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:02,728:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:02,753:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:02,754:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:02,760:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:02,790:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:02,869:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:02,869:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:02,884:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:02,919:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:02,955:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:02,960:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,965:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:02,967:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,969:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,971:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:02,975:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,976:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,978:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,981:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:02,982:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:02,984:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,986:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:02,991:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,993:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:02,999:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:02,999:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:03,000:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:03,003:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:03,005:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:03,008:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:03,011:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:03,024:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:03,030:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:03,038:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:03,040:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:03,047:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:03,048:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:03,054:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:03,123:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:03,129:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:03,174:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:03,177:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:03,177:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:03,180:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:03,182:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:03,184:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:03,185:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:03,188:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:03,191:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:03,191:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:03,192:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:03,193:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:03,193:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:03,195:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:03,201:INFO:Calculating mean and std
2024-07-30 01:06:03,202:INFO:Creating metrics dataframe
2024-07-30 01:06:03,205:INFO:Uploading results into container
2024-07-30 01:06:03,206:INFO:Uploading model into container now
2024-07-30 01:06:03,207:INFO:_master_model_container: 4
2024-07-30 01:06:03,207:INFO:_display_container: 2
2024-07-30 01:06:03,208:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4113, solver='auto',
                tol=0.0001)
2024-07-30 01:06:03,208:INFO:create_model() successfully completed......................................
2024-07-30 01:06:03,333:INFO:SubProcess create_model() end ==================================
2024-07-30 01:06:03,333:INFO:Creating metrics dataframe
2024-07-30 01:06:03,337:INFO:Initializing Random Forest Classifier
2024-07-30 01:06:03,340:INFO:Total runtime is 3.2107939004898074 minutes
2024-07-30 01:06:03,341:INFO:SubProcess create_model() called ==================================
2024-07-30 01:06:03,341:INFO:Initializing create_model()
2024-07-30 01:06:03,341:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:06:03,341:INFO:Checking exceptions
2024-07-30 01:06:03,342:INFO:Importing libraries
2024-07-30 01:06:03,342:INFO:Copying training dataset
2024-07-30 01:06:03,353:INFO:Defining folds
2024-07-30 01:06:03,354:INFO:Declaring metric variables
2024-07-30 01:06:03,354:INFO:Importing untrained model
2024-07-30 01:06:03,355:INFO:Random Forest Classifier Imported successfully
2024-07-30 01:06:03,357:INFO:Starting cross validation
2024-07-30 01:06:03,359:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:06:03,408:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:03,411:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:03,413:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:03,423:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:04,037:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:04,068:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:04,068:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:04,115:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:04,221:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:04,221:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,221:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,237:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,237:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:04,237:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:04,237:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:04,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:04,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:04,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,268:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,268:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,268:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:04,268:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:04,268:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:04,268:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:04,268:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:04,268:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:04,284:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:04,299:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:04,299:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:04,404:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:04,409:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,416:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,422:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,429:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:04,429:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:04,434:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:04,455:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:04,791:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:04,948:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:04,953:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,965:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,968:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:04,973:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,974:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,974:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,974:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:04,974:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:04,974:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:04,974:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:04,989:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:04,989:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:04,989:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:05,005:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:05,021:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:05,036:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:05,067:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:05,067:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:05,067:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:05,083:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:05,095:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:05,096:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:05,103:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:05,356:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:05,361:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:05,368:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:05,377:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:05,383:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:05,384:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:05,392:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:05,536:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:05,658:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:05,664:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:05,670:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:05,670:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:05,676:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:05,680:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:05,680:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:05,680:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:05,681:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:05,683:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:05,683:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:05,687:INFO:Calculating mean and std
2024-07-30 01:06:05,689:INFO:Creating metrics dataframe
2024-07-30 01:06:05,700:INFO:Uploading results into container
2024-07-30 01:06:05,701:INFO:Uploading model into container now
2024-07-30 01:06:05,702:INFO:_master_model_container: 5
2024-07-30 01:06:05,703:INFO:_display_container: 2
2024-07-30 01:06:05,704:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=4113, verbose=0,
                       warm_start=False)
2024-07-30 01:06:05,704:INFO:create_model() successfully completed......................................
2024-07-30 01:06:05,837:INFO:SubProcess create_model() end ==================================
2024-07-30 01:06:05,838:INFO:Creating metrics dataframe
2024-07-30 01:06:05,842:INFO:Initializing Quadratic Discriminant Analysis
2024-07-30 01:06:05,842:INFO:Total runtime is 3.252486582597097 minutes
2024-07-30 01:06:05,843:INFO:SubProcess create_model() called ==================================
2024-07-30 01:06:05,843:INFO:Initializing create_model()
2024-07-30 01:06:05,843:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:06:05,843:INFO:Checking exceptions
2024-07-30 01:06:05,843:INFO:Importing libraries
2024-07-30 01:06:05,843:INFO:Copying training dataset
2024-07-30 01:06:05,851:INFO:Defining folds
2024-07-30 01:06:05,852:INFO:Declaring metric variables
2024-07-30 01:06:05,852:INFO:Importing untrained model
2024-07-30 01:06:05,852:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-30 01:06:05,853:INFO:Starting cross validation
2024-07-30 01:06:05,854:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:06:05,996:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,002:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,191:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,199:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,207:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,208:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,308:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,310:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,386:WARNING:create_model() for qda raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-30 01:06:06,387:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\discriminant_analysis.py", line 905, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-30 01:06:06,387:INFO:Initializing create_model()
2024-07-30 01:06:06,388:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:06:06,388:INFO:Checking exceptions
2024-07-30 01:06:06,388:INFO:Importing libraries
2024-07-30 01:06:06,388:INFO:Copying training dataset
2024-07-30 01:06:06,397:INFO:Defining folds
2024-07-30 01:06:06,398:INFO:Declaring metric variables
2024-07-30 01:06:06,398:INFO:Importing untrained model
2024-07-30 01:06:06,398:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-30 01:06:06,399:INFO:Starting cross validation
2024-07-30 01:06:06,401:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:06:06,440:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,442:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,447:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,454:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,536:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,541:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,544:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,564:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,628:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,632:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,687:ERROR:create_model() for qda raised an exception or returned all 0.0:
2024-07-30 01:06:06,689:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\discriminant_analysis.py", line 905, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\discriminant_analysis.py", line 905, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-30 01:06:06,690:INFO:Initializing Ada Boost Classifier
2024-07-30 01:06:06,690:INFO:Total runtime is 3.2666246891021733 minutes
2024-07-30 01:06:06,691:INFO:SubProcess create_model() called ==================================
2024-07-30 01:06:06,692:INFO:Initializing create_model()
2024-07-30 01:06:06,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:06:06,692:INFO:Checking exceptions
2024-07-30 01:06:06,692:INFO:Importing libraries
2024-07-30 01:06:06,692:INFO:Copying training dataset
2024-07-30 01:06:06,707:INFO:Defining folds
2024-07-30 01:06:06,707:INFO:Declaring metric variables
2024-07-30 01:06:06,707:INFO:Importing untrained model
2024-07-30 01:06:06,708:INFO:Ada Boost Classifier Imported successfully
2024-07-30 01:06:06,708:INFO:Starting cross validation
2024-07-30 01:06:06,710:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:06:06,748:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,750:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,756:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,767:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:06,986:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-30 01:06:06,986:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-30 01:06:06,986:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-30 01:06:06,987:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-30 01:06:07,048:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,048:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,050:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,057:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,101:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:07,105:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,105:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,106:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:07,110:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,111:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,112:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,117:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,118:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,118:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,119:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,125:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,126:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:07,126:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,126:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,126:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:07,126:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,127:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:07,130:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,130:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,131:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,132:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,133:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:07,137:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,161:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,162:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,165:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,169:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,229:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-30 01:06:07,257:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,260:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-30 01:06:07,276:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,277:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-30 01:06:07,287:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-30 01:06:07,290:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,302:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,365:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:07,370:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,371:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:07,377:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:07,377:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,381:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,384:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,386:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,389:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,394:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,395:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,396:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:07,397:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,400:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,400:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,401:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,401:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:07,401:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:07,403:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,404:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:07,405:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,405:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,407:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,408:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,414:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,421:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,423:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:07,428:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,428:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,431:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,476:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-30 01:06:07,477:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-30 01:06:07,483:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,485:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,524:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:07,526:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:07,527:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,529:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,531:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,533:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,535:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,538:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:07,540:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,541:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:07,544:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,544:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:07,545:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,547:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:07,552:INFO:Calculating mean and std
2024-07-30 01:06:07,555:INFO:Creating metrics dataframe
2024-07-30 01:06:07,558:INFO:Uploading results into container
2024-07-30 01:06:07,559:INFO:Uploading model into container now
2024-07-30 01:06:07,560:INFO:_master_model_container: 6
2024-07-30 01:06:07,560:INFO:_display_container: 2
2024-07-30 01:06:07,560:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4113)
2024-07-30 01:06:07,561:INFO:create_model() successfully completed......................................
2024-07-30 01:06:07,692:INFO:SubProcess create_model() end ==================================
2024-07-30 01:06:07,693:INFO:Creating metrics dataframe
2024-07-30 01:06:07,697:INFO:Initializing Gradient Boosting Classifier
2024-07-30 01:06:07,697:INFO:Total runtime is 3.2834127187728885 minutes
2024-07-30 01:06:07,697:INFO:SubProcess create_model() called ==================================
2024-07-30 01:06:07,697:INFO:Initializing create_model()
2024-07-30 01:06:07,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:06:07,698:INFO:Checking exceptions
2024-07-30 01:06:07,698:INFO:Importing libraries
2024-07-30 01:06:07,698:INFO:Copying training dataset
2024-07-30 01:06:07,707:INFO:Defining folds
2024-07-30 01:06:07,707:INFO:Declaring metric variables
2024-07-30 01:06:07,707:INFO:Importing untrained model
2024-07-30 01:06:07,708:INFO:Gradient Boosting Classifier Imported successfully
2024-07-30 01:06:07,708:INFO:Starting cross validation
2024-07-30 01:06:07,710:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:06:07,755:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,757:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,762:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:07,772:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,022:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,027:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,030:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,035:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,114:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,118:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,170:WARNING:create_model() for gbc raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-30 01:06:08,171:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 665, in fit
    y = self._encode_y(y=y, sample_weight=None)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 1520, in _encode_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


2024-07-30 01:06:08,171:INFO:Initializing create_model()
2024-07-30 01:06:08,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:06:08,171:INFO:Checking exceptions
2024-07-30 01:06:08,171:INFO:Importing libraries
2024-07-30 01:06:08,171:INFO:Copying training dataset
2024-07-30 01:06:08,286:INFO:Defining folds
2024-07-30 01:06:08,286:INFO:Declaring metric variables
2024-07-30 01:06:08,287:INFO:Importing untrained model
2024-07-30 01:06:08,288:INFO:Gradient Boosting Classifier Imported successfully
2024-07-30 01:06:08,290:INFO:Starting cross validation
2024-07-30 01:06:08,293:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:06:08,381:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,387:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,390:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,408:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,488:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,488:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,493:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,512:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,579:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,583:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,639:ERROR:create_model() for gbc raised an exception or returned all 0.0:
2024-07-30 01:06:08,664:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 665, in fit
    y = self._encode_y(y=y, sample_weight=None)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 1520, in _encode_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 665, in fit
    y = self._encode_y(y=y, sample_weight=None)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 1520, in _encode_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


2024-07-30 01:06:08,664:INFO:Initializing Linear Discriminant Analysis
2024-07-30 01:06:08,664:INFO:Total runtime is 3.299531670411428 minutes
2024-07-30 01:06:08,665:INFO:SubProcess create_model() called ==================================
2024-07-30 01:06:08,665:INFO:Initializing create_model()
2024-07-30 01:06:08,665:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:06:08,666:INFO:Checking exceptions
2024-07-30 01:06:08,666:INFO:Importing libraries
2024-07-30 01:06:08,666:INFO:Copying training dataset
2024-07-30 01:06:08,678:INFO:Defining folds
2024-07-30 01:06:08,679:INFO:Declaring metric variables
2024-07-30 01:06:08,679:INFO:Importing untrained model
2024-07-30 01:06:08,680:INFO:Linear Discriminant Analysis Imported successfully
2024-07-30 01:06:08,680:INFO:Starting cross validation
2024-07-30 01:06:08,683:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:06:08,728:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,731:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,734:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:08,743:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:09,606:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:09,606:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:09,606:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:09,675:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:09,676:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:09,678:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:09,679:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,679:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:09,680:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,682:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,683:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,687:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,692:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,693:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,695:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,699:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,699:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,701:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,701:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:09,704:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,705:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,705:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:09,707:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,707:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,707:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:09,711:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,711:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,716:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,718:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,718:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:09,725:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,734:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:09,741:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:09,752:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:09,753:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:09,820:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:09,821:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:09,835:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:09,836:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:09,875:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:09,876:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:09,879:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,879:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,886:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,886:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:09,888:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:09,892:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,892:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,893:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,900:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,900:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,900:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:09,901:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,905:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,905:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,906:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:09,909:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,910:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,917:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:09,920:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,920:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:09,925:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,926:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:09,926:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,931:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:09,932:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:09,938:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:09,990:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:09,995:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:10,020:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:10,024:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,028:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:10,029:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,030:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,032:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,034:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,036:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:10,036:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:10,038:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,040:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:10,043:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:10,043:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:10,045:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:10,054:INFO:Calculating mean and std
2024-07-30 01:06:10,060:INFO:Creating metrics dataframe
2024-07-30 01:06:10,065:INFO:Uploading results into container
2024-07-30 01:06:10,066:INFO:Uploading model into container now
2024-07-30 01:06:10,067:INFO:_master_model_container: 7
2024-07-30 01:06:10,067:INFO:_display_container: 2
2024-07-30 01:06:10,067:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-30 01:06:10,068:INFO:create_model() successfully completed......................................
2024-07-30 01:06:10,196:INFO:SubProcess create_model() end ==================================
2024-07-30 01:06:10,196:INFO:Creating metrics dataframe
2024-07-30 01:06:10,248:INFO:Initializing Extra Trees Classifier
2024-07-30 01:06:10,248:INFO:Total runtime is 3.325918598969778 minutes
2024-07-30 01:06:10,249:INFO:SubProcess create_model() called ==================================
2024-07-30 01:06:10,249:INFO:Initializing create_model()
2024-07-30 01:06:10,249:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:06:10,250:INFO:Checking exceptions
2024-07-30 01:06:10,250:INFO:Importing libraries
2024-07-30 01:06:10,250:INFO:Copying training dataset
2024-07-30 01:06:10,261:INFO:Defining folds
2024-07-30 01:06:10,261:INFO:Declaring metric variables
2024-07-30 01:06:10,261:INFO:Importing untrained model
2024-07-30 01:06:10,262:INFO:Extra Trees Classifier Imported successfully
2024-07-30 01:06:10,262:INFO:Starting cross validation
2024-07-30 01:06:10,264:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:06:10,304:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:10,311:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:10,316:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:10,328:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:10,749:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:10,764:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:10,765:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:10,766:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:10,910:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:10,910:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:10,911:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:10,914:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,914:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,915:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,921:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,921:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,922:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,928:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:10,929:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,932:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,936:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:10,942:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,937:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:10,943:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,947:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:10,947:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:10,948:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:10,948:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:10,949:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:10,950:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:10,952:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:10,953:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:10,958:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:10,958:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:10,963:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:10,982:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:10,985:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:10,995:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:10,996:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:11,353:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:11,365:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:11,382:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:11,545:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:11,545:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:11,546:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:11,549:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:11,549:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:11,550:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:11,555:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:11,555:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:11,560:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:11,564:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:11,565:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:11,567:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:11,570:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:11,571:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:11,571:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:11,571:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:11,575:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:11,575:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:11,576:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:11,577:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:11,578:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:11,579:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:11,582:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:11,588:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:11,596:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:11,597:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:11,603:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:11,604:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:11,604:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:11,608:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:11,876:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:11,896:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:11,993:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:11,997:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:12,003:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:12,011:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:12,016:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:12,016:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:12,020:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:12,041:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:12,046:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:12,053:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:12,059:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:12,063:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:12,063:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:12,066:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:12,072:INFO:Calculating mean and std
2024-07-30 01:06:12,074:INFO:Creating metrics dataframe
2024-07-30 01:06:12,074:INFO:Uploading results into container
2024-07-30 01:06:12,074:INFO:Uploading model into container now
2024-07-30 01:06:12,074:INFO:_master_model_container: 8
2024-07-30 01:06:12,074:INFO:_display_container: 2
2024-07-30 01:06:12,074:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4113, verbose=0,
                     warm_start=False)
2024-07-30 01:06:12,074:INFO:create_model() successfully completed......................................
2024-07-30 01:06:12,208:INFO:SubProcess create_model() end ==================================
2024-07-30 01:06:12,209:INFO:Creating metrics dataframe
2024-07-30 01:06:12,213:INFO:Initializing Light Gradient Boosting Machine
2024-07-30 01:06:12,213:INFO:Total runtime is 3.358681495984396 minutes
2024-07-30 01:06:12,213:INFO:SubProcess create_model() called ==================================
2024-07-30 01:06:12,213:INFO:Initializing create_model()
2024-07-30 01:06:12,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:06:12,214:INFO:Checking exceptions
2024-07-30 01:06:12,214:INFO:Importing libraries
2024-07-30 01:06:12,214:INFO:Copying training dataset
2024-07-30 01:06:12,224:INFO:Defining folds
2024-07-30 01:06:12,224:INFO:Declaring metric variables
2024-07-30 01:06:12,225:INFO:Importing untrained model
2024-07-30 01:06:12,226:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-30 01:06:12,226:INFO:Starting cross validation
2024-07-30 01:06:12,228:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:06:12,270:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:12,276:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:12,279:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:12,292:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:14,133:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:14,134:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:14,134:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:14,184:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:14,184:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:14,186:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:14,187:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:14,188:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:14,190:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:14,191:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:14,194:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:14,194:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:14,197:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:14,200:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:14,201:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:14,201:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:14,203:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:14,208:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:14,208:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:14,208:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:14,209:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:14,209:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:14,211:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:14,211:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:14,212:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:14,213:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:14,214:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:14,214:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:14,215:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:14,218:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:14,244:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:14,246:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:14,251:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:14,255:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:15,554:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:15,581:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:15,587:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:15,606:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:15,637:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:15,637:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:15,653:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:15,653:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:15,653:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:15,653:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:15,668:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:15,668:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:15,668:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:15,668:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:15,668:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:15,668:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:15,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:15,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:15,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:15,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:15,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:15,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:15,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:15,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:15,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:15,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:15,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:15,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:15,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:15,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:15,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:15,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:15,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:15,715:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,176:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,185:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,225:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:19,228:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,234:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-30 01:06:19,236:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,239:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,244:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,245:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,249:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,250:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:19,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,253:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,259:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,260:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:19,264:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,270:INFO:Calculating mean and std
2024-07-30 01:06:19,272:INFO:Creating metrics dataframe
2024-07-30 01:06:19,278:INFO:Uploading results into container
2024-07-30 01:06:19,279:INFO:Uploading model into container now
2024-07-30 01:06:19,280:INFO:_master_model_container: 9
2024-07-30 01:06:19,280:INFO:_display_container: 2
2024-07-30 01:06:19,282:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4113, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-30 01:06:19,282:INFO:create_model() successfully completed......................................
2024-07-30 01:06:19,429:INFO:SubProcess create_model() end ==================================
2024-07-30 01:06:19,429:INFO:Creating metrics dataframe
2024-07-30 01:06:19,433:INFO:Initializing Dummy Classifier
2024-07-30 01:06:19,433:INFO:Total runtime is 3.479015489419302 minutes
2024-07-30 01:06:19,433:INFO:SubProcess create_model() called ==================================
2024-07-30 01:06:19,434:INFO:Initializing create_model()
2024-07-30 01:06:19,434:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B19E82FDC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:06:19,434:INFO:Checking exceptions
2024-07-30 01:06:19,434:INFO:Importing libraries
2024-07-30 01:06:19,434:INFO:Copying training dataset
2024-07-30 01:06:19,444:INFO:Defining folds
2024-07-30 01:06:19,444:INFO:Declaring metric variables
2024-07-30 01:06:19,444:INFO:Importing untrained model
2024-07-30 01:06:19,445:INFO:Dummy Classifier Imported successfully
2024-07-30 01:06:19,445:INFO:Starting cross validation
2024-07-30 01:06:19,446:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-30 01:06:19,489:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,492:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,506:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,510:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,581:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,581:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,586:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,590:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,626:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:19,627:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:19,629:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:19,631:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,632:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,634:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,637:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,640:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:19,640:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,641:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,644:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,645:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,647:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,649:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,650:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,651:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,651:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:19,653:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,654:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:19,655:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,656:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,656:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:19,658:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,662:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,663:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,664:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,665:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:19,669:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,678:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,694:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,712:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,788:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,805:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,826:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,828:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,846:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:19,849:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:19,849:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,853:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,858:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,865:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,869:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,874:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,874:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:19,875:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:19,876:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,878:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,878:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,887:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,887:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:19,889:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,890:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:19,892:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,894:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,894:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,898:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,900:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,900:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:19,901:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,904:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,905:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:19,910:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,910:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:19,913:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:19,917:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,962:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,979:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:19,994:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:19,996:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:20,000:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:20,005:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:20,006:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-30 01:06:20,010:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:20,011:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:20,011:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:20,013:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:20,015:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:20,019:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-30 01:06:20,022:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:20,023:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-30 01:06:20,025:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-30 01:06:20,038:INFO:Calculating mean and std
2024-07-30 01:06:20,042:INFO:Creating metrics dataframe
2024-07-30 01:06:20,045:INFO:Uploading results into container
2024-07-30 01:06:20,046:INFO:Uploading model into container now
2024-07-30 01:06:20,046:INFO:_master_model_container: 10
2024-07-30 01:06:20,046:INFO:_display_container: 2
2024-07-30 01:06:20,046:INFO:DummyClassifier(constant=None, random_state=4113, strategy='prior')
2024-07-30 01:06:20,046:INFO:create_model() successfully completed......................................
2024-07-30 01:06:20,176:INFO:SubProcess create_model() end ==================================
2024-07-30 01:06:20,176:INFO:Creating metrics dataframe
2024-07-30 01:06:20,206:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-07-30 01:06:20,206:INFO:Initializing create_model()
2024-07-30 01:06:20,206:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B1A30AAA70>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-30 01:06:20,206:INFO:Checking exceptions
2024-07-30 01:06:20,222:INFO:Importing libraries
2024-07-30 01:06:20,222:INFO:Copying training dataset
2024-07-30 01:06:20,238:INFO:Defining folds
2024-07-30 01:06:20,238:INFO:Declaring metric variables
2024-07-30 01:06:20,238:INFO:Importing untrained model
2024-07-30 01:06:20,238:INFO:Declaring custom model
2024-07-30 01:06:20,239:INFO:K Neighbors Classifier Imported successfully
2024-07-30 01:06:20,241:INFO:Cross validation set to False
2024-07-30 01:06:20,241:INFO:Fitting Model
2024-07-30 01:06:20,416:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-30 01:06:20,542:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-30 01:06:20,542:INFO:create_model() successfully completed......................................
2024-07-30 01:06:20,916:INFO:_master_model_container: 10
2024-07-30 01:06:20,916:INFO:_display_container: 2
2024-07-30 01:06:20,917:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-30 01:06:20,917:INFO:compare_models() successfully completed......................................
2024-07-30 01:06:23,566:INFO:Initializing save_model()
2024-07-30 01:06:23,567:INFO:save_model(model=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), model_name=trained_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Lenovo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Strike Price', 'Call-Price',
                                             'Call-Change in Price (%)',
                                             'Call-Open Interest',
                                             'Call-Volume',
                                             'Call-Implied V...
                 TransformerWrapper(exclude=None, include=['Underlying Name'],
                                    transformer=OneHotEncoder(cols=['Underlying '
                                                                    'Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-30 01:06:23,567:INFO:Adding model into prep_pipe
2024-07-30 01:06:23,701:INFO:trained_model.pkl saved in current working directory
2024-07-30 01:06:23,777:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Strike Price', 'Call-Price',
                                             'Call-Change in Price (%)',
                                             'Call-Open Interest',
                                             'Call-Volume',
                                             'Call-Implied Volatility',
                                             'Greeks: Call Delta',
                                             'Greeks: Cal...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2024-07-30 01:06:23,777:INFO:save_model() successfully completed......................................
2024-07-30 01:08:53,278:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\correlations.py:66: UserWarning: There was an attempt to calculate the auto correlation, but this failed.
To hide this warning, disable the calculation
(using `df.profile_report(correlations={"auto": {"calculate": False}})`
If this is problematic for your use case, please report this as an issue:
https://github.com/ydataai/ydata-profiling/issues
(include the error message: 'Function <code object pandas_auto_compute at 0x000001B18D81FC00, file "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\pandas\correlations_pandas.py", line 167>')
  warnings.warn(

2024-07-30 01:09:07,235:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\correlations.py:66: UserWarning: There was an attempt to calculate the auto correlation, but this failed.
To hide this warning, disable the calculation
(using `df.profile_report(correlations={"auto": {"calculate": False}})`
If this is problematic for your use case, please report this as an issue:
https://github.com/ydataai/ydata-profiling/issues
(include the error message: 'Function <code object pandas_auto_compute at 0x000001B18D81FC00, file "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\pandas\correlations_pandas.py", line 167>')
  warnings.warn(

2024-07-30 13:02:02,806:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 13:02:02,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 13:02:02,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 13:02:02,854:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 13:58:18,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 13:58:18,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 13:58:18,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 13:58:18,204:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 17:23:23,260:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 17:23:23,326:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 17:23:23,326:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 17:23:23,326:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 18:32:37,253:INFO:PyCaret ClassificationExperiment
2024-07-30 18:32:37,307:INFO:Logging name: clf-default-name
2024-07-30 18:32:37,307:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-30 18:32:37,308:INFO:version 3.3.2
2024-07-30 18:32:37,308:INFO:Initializing setup()
2024-07-30 18:32:37,308:INFO:self.USI: 77b8
2024-07-30 18:32:37,308:INFO:self._variable_keys: {'seed', 'logging_param', 'exp_name_log', 'X_train', 'n_jobs_param', 'gpu_param', 'fold_generator', 'y_test', 'USI', 'gpu_n_jobs_param', 'fold_groups_param', 'fix_imbalance', 'data', 'log_plots_param', 'y_train', 'X', 'exp_id', 'idx', 'X_test', '_ml_usecase', '_available_plots', 'html_param', 'is_multiclass', 'memory', 'y', 'target_param', 'pipeline', 'fold_shuffle_param'}
2024-07-30 18:32:37,308:INFO:Checking environment
2024-07-30 18:32:37,308:INFO:python_version: 3.10.0
2024-07-30 18:32:37,308:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2024-07-30 18:32:37,309:INFO:machine: AMD64
2024-07-30 18:32:37,309:INFO:platform: Windows-10-10.0.19045-SP0
2024-07-30 18:32:37,374:INFO:Memory: svmem(total=3504250880, available=441999360, percent=87.4, used=3062251520, free=441999360)
2024-07-30 18:32:37,384:INFO:Physical Core: 2
2024-07-30 18:32:37,415:INFO:Logical Core: 4
2024-07-30 18:32:37,415:INFO:Checking libraries
2024-07-30 18:32:37,416:INFO:System:
2024-07-30 18:32:37,416:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2024-07-30 18:32:37,416:INFO:executable: D:\Desktop\autoanalysis\autoanalysis\Scripts\python.exe
2024-07-30 18:32:37,416:INFO:   machine: Windows-10-10.0.19045-SP0
2024-07-30 18:32:37,416:INFO:PyCaret required dependencies:
2024-07-30 18:32:39,803:INFO:                 pip: 21.2.3
2024-07-30 18:32:39,803:INFO:          setuptools: 57.4.0
2024-07-30 18:32:39,804:INFO:             pycaret: 3.3.2
2024-07-30 18:32:39,804:INFO:             IPython: 8.26.0
2024-07-30 18:32:39,804:INFO:          ipywidgets: 8.1.3
2024-07-30 18:32:39,804:INFO:                tqdm: 4.66.4
2024-07-30 18:32:39,804:INFO:               numpy: 1.26.4
2024-07-30 18:32:39,804:INFO:              pandas: 1.5.3
2024-07-30 18:32:39,804:INFO:              jinja2: 3.1.4
2024-07-30 18:32:39,805:INFO:               scipy: 1.11.4
2024-07-30 18:32:39,805:INFO:              joblib: 1.3.2
2024-07-30 18:32:39,805:INFO:             sklearn: 1.4.2
2024-07-30 18:32:39,805:INFO:                pyod: 2.0.1
2024-07-30 18:32:39,805:INFO:            imblearn: 0.12.3
2024-07-30 18:32:39,805:INFO:   category_encoders: 2.6.3
2024-07-30 18:32:39,805:INFO:            lightgbm: 4.5.0
2024-07-30 18:32:39,806:INFO:               numba: 0.60.0
2024-07-30 18:32:39,806:INFO:            requests: 2.32.3
2024-07-30 18:32:39,806:INFO:          matplotlib: 3.7.5
2024-07-30 18:32:39,806:INFO:          scikitplot: 0.3.7
2024-07-30 18:32:39,806:INFO:         yellowbrick: 1.5
2024-07-30 18:32:39,806:INFO:              plotly: 5.23.0
2024-07-30 18:32:39,806:INFO:    plotly-resampler: Not installed
2024-07-30 18:32:39,807:INFO:             kaleido: 0.2.1
2024-07-30 18:32:39,807:INFO:           schemdraw: 0.15
2024-07-30 18:32:39,807:INFO:         statsmodels: 0.14.2
2024-07-30 18:32:39,807:INFO:              sktime: 0.26.0
2024-07-30 18:32:39,807:INFO:               tbats: 1.1.3
2024-07-30 18:32:39,807:INFO:            pmdarima: 2.0.4
2024-07-30 18:32:39,807:INFO:              psutil: 6.0.0
2024-07-30 18:32:39,808:INFO:          markupsafe: 2.1.5
2024-07-30 18:32:39,808:INFO:             pickle5: Not installed
2024-07-30 18:32:39,808:INFO:         cloudpickle: 3.0.0
2024-07-30 18:32:39,808:INFO:         deprecation: 2.1.0
2024-07-30 18:32:39,808:INFO:              xxhash: 3.4.1
2024-07-30 18:32:39,808:INFO:           wurlitzer: Not installed
2024-07-30 18:32:39,808:INFO:PyCaret optional dependencies:
2024-07-30 18:32:39,844:INFO:                shap: Not installed
2024-07-30 18:32:39,844:INFO:           interpret: Not installed
2024-07-30 18:32:39,845:INFO:                umap: Not installed
2024-07-30 18:32:39,845:INFO:     ydata_profiling: 4.9.0
2024-07-30 18:32:39,845:INFO:  explainerdashboard: Not installed
2024-07-30 18:32:39,845:INFO:             autoviz: Not installed
2024-07-30 18:32:39,845:INFO:           fairlearn: Not installed
2024-07-30 18:32:39,845:INFO:          deepchecks: Not installed
2024-07-30 18:32:39,845:INFO:             xgboost: Not installed
2024-07-30 18:32:39,845:INFO:            catboost: Not installed
2024-07-30 18:32:39,845:INFO:              kmodes: Not installed
2024-07-30 18:32:39,845:INFO:             mlxtend: Not installed
2024-07-30 18:32:39,845:INFO:       statsforecast: Not installed
2024-07-30 18:32:39,845:INFO:        tune_sklearn: Not installed
2024-07-30 18:32:39,845:INFO:                 ray: Not installed
2024-07-30 18:32:39,845:INFO:            hyperopt: Not installed
2024-07-30 18:32:39,845:INFO:              optuna: Not installed
2024-07-30 18:32:39,846:INFO:               skopt: Not installed
2024-07-30 18:32:39,846:INFO:              mlflow: Not installed
2024-07-30 18:32:39,846:INFO:              gradio: Not installed
2024-07-30 18:32:39,846:INFO:             fastapi: Not installed
2024-07-30 18:32:39,846:INFO:             uvicorn: Not installed
2024-07-30 18:32:39,846:INFO:              m2cgen: Not installed
2024-07-30 18:32:39,846:INFO:           evidently: Not installed
2024-07-30 18:32:39,846:INFO:               fugue: Not installed
2024-07-30 18:32:39,846:INFO:           streamlit: 1.37.0
2024-07-30 18:32:39,846:INFO:             prophet: Not installed
2024-07-30 18:32:39,846:INFO:None
2024-07-30 18:32:39,846:INFO:Set up data.
2024-07-30 18:32:53,103:INFO:PyCaret ClassificationExperiment
2024-07-30 18:32:53,104:INFO:Logging name: clf-default-name
2024-07-30 18:32:53,104:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-30 18:32:53,104:INFO:version 3.3.2
2024-07-30 18:32:53,104:INFO:Initializing setup()
2024-07-30 18:32:53,104:INFO:self.USI: af7f
2024-07-30 18:32:53,104:INFO:self._variable_keys: {'seed', 'logging_param', 'exp_name_log', 'X_train', 'n_jobs_param', 'gpu_param', 'fold_generator', 'y_test', 'USI', 'gpu_n_jobs_param', 'fold_groups_param', 'fix_imbalance', 'data', 'log_plots_param', 'y_train', 'X', 'exp_id', 'idx', 'X_test', '_ml_usecase', '_available_plots', 'html_param', 'is_multiclass', 'memory', 'y', 'target_param', 'pipeline', 'fold_shuffle_param'}
2024-07-30 18:32:53,104:INFO:Checking environment
2024-07-30 18:32:53,105:INFO:python_version: 3.10.0
2024-07-30 18:32:53,105:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2024-07-30 18:32:53,105:INFO:machine: AMD64
2024-07-30 18:32:53,105:INFO:platform: Windows-10-10.0.19045-SP0
2024-07-30 18:32:53,108:INFO:Memory: svmem(total=3504250880, available=486776832, percent=86.1, used=3017474048, free=486776832)
2024-07-30 18:32:53,108:INFO:Physical Core: 2
2024-07-30 18:32:53,108:INFO:Logical Core: 4
2024-07-30 18:32:53,108:INFO:Checking libraries
2024-07-30 18:32:53,109:INFO:System:
2024-07-30 18:32:53,109:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2024-07-30 18:32:53,109:INFO:executable: D:\Desktop\autoanalysis\autoanalysis\Scripts\python.exe
2024-07-30 18:32:53,109:INFO:   machine: Windows-10-10.0.19045-SP0
2024-07-30 18:32:53,109:INFO:PyCaret required dependencies:
2024-07-30 18:32:53,110:INFO:                 pip: 21.2.3
2024-07-30 18:32:53,110:INFO:          setuptools: 57.4.0
2024-07-30 18:32:53,110:INFO:             pycaret: 3.3.2
2024-07-30 18:32:53,110:INFO:             IPython: 8.26.0
2024-07-30 18:32:53,110:INFO:          ipywidgets: 8.1.3
2024-07-30 18:32:53,110:INFO:                tqdm: 4.66.4
2024-07-30 18:32:53,110:INFO:               numpy: 1.26.4
2024-07-30 18:32:53,110:INFO:              pandas: 1.5.3
2024-07-30 18:32:53,111:INFO:              jinja2: 3.1.4
2024-07-30 18:32:53,111:INFO:               scipy: 1.11.4
2024-07-30 18:32:53,111:INFO:              joblib: 1.3.2
2024-07-30 18:32:53,111:INFO:             sklearn: 1.4.2
2024-07-30 18:32:53,111:INFO:                pyod: 2.0.1
2024-07-30 18:32:53,111:INFO:            imblearn: 0.12.3
2024-07-30 18:32:53,112:INFO:   category_encoders: 2.6.3
2024-07-30 18:32:53,112:INFO:            lightgbm: 4.5.0
2024-07-30 18:32:53,112:INFO:               numba: 0.60.0
2024-07-30 18:32:53,112:INFO:            requests: 2.32.3
2024-07-30 18:32:53,112:INFO:          matplotlib: 3.7.5
2024-07-30 18:32:53,113:INFO:          scikitplot: 0.3.7
2024-07-30 18:32:53,113:INFO:         yellowbrick: 1.5
2024-07-30 18:32:53,113:INFO:              plotly: 5.23.0
2024-07-30 18:32:53,113:INFO:    plotly-resampler: Not installed
2024-07-30 18:32:53,113:INFO:             kaleido: 0.2.1
2024-07-30 18:32:53,113:INFO:           schemdraw: 0.15
2024-07-30 18:32:53,113:INFO:         statsmodels: 0.14.2
2024-07-30 18:32:53,114:INFO:              sktime: 0.26.0
2024-07-30 18:32:53,114:INFO:               tbats: 1.1.3
2024-07-30 18:32:53,114:INFO:            pmdarima: 2.0.4
2024-07-30 18:32:53,114:INFO:              psutil: 6.0.0
2024-07-30 18:32:53,114:INFO:          markupsafe: 2.1.5
2024-07-30 18:32:53,114:INFO:             pickle5: Not installed
2024-07-30 18:32:53,114:INFO:         cloudpickle: 3.0.0
2024-07-30 18:32:53,115:INFO:         deprecation: 2.1.0
2024-07-30 18:32:53,115:INFO:              xxhash: 3.4.1
2024-07-30 18:32:53,115:INFO:           wurlitzer: Not installed
2024-07-30 18:32:53,115:INFO:PyCaret optional dependencies:
2024-07-30 18:32:53,115:INFO:                shap: Not installed
2024-07-30 18:32:53,116:INFO:           interpret: Not installed
2024-07-30 18:32:53,116:INFO:                umap: Not installed
2024-07-30 18:32:53,116:INFO:     ydata_profiling: 4.9.0
2024-07-30 18:32:53,116:INFO:  explainerdashboard: Not installed
2024-07-30 18:32:53,116:INFO:             autoviz: Not installed
2024-07-30 18:32:53,116:INFO:           fairlearn: Not installed
2024-07-30 18:32:53,116:INFO:          deepchecks: Not installed
2024-07-30 18:32:53,117:INFO:             xgboost: Not installed
2024-07-30 18:32:53,117:INFO:            catboost: Not installed
2024-07-30 18:32:53,117:INFO:              kmodes: Not installed
2024-07-30 18:32:53,117:INFO:             mlxtend: Not installed
2024-07-30 18:32:53,117:INFO:       statsforecast: Not installed
2024-07-30 18:32:53,117:INFO:        tune_sklearn: Not installed
2024-07-30 18:32:53,117:INFO:                 ray: Not installed
2024-07-30 18:32:53,118:INFO:            hyperopt: Not installed
2024-07-30 18:32:53,118:INFO:              optuna: Not installed
2024-07-30 18:32:53,118:INFO:               skopt: Not installed
2024-07-30 18:32:53,118:INFO:              mlflow: Not installed
2024-07-30 18:32:53,118:INFO:              gradio: Not installed
2024-07-30 18:32:53,118:INFO:             fastapi: Not installed
2024-07-30 18:32:53,118:INFO:             uvicorn: Not installed
2024-07-30 18:32:53,119:INFO:              m2cgen: Not installed
2024-07-30 18:32:53,119:INFO:           evidently: Not installed
2024-07-30 18:32:53,119:INFO:               fugue: Not installed
2024-07-30 18:32:53,120:INFO:           streamlit: 1.37.0
2024-07-30 18:32:53,120:INFO:             prophet: Not installed
2024-07-30 18:32:53,120:INFO:None
2024-07-30 18:32:53,120:INFO:Set up data.
2024-07-30 18:32:58,959:INFO:PyCaret ClassificationExperiment
2024-07-30 18:32:58,959:INFO:Logging name: clf-default-name
2024-07-30 18:32:58,959:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-30 18:32:58,959:INFO:version 3.3.2
2024-07-30 18:32:58,959:INFO:Initializing setup()
2024-07-30 18:32:58,960:INFO:self.USI: 801f
2024-07-30 18:32:58,960:INFO:self._variable_keys: {'seed', 'logging_param', 'exp_name_log', 'X_train', 'n_jobs_param', 'gpu_param', 'fold_generator', 'y_test', 'USI', 'gpu_n_jobs_param', 'fold_groups_param', 'fix_imbalance', 'data', 'log_plots_param', 'y_train', 'X', 'exp_id', 'idx', 'X_test', '_ml_usecase', '_available_plots', 'html_param', 'is_multiclass', 'memory', 'y', 'target_param', 'pipeline', 'fold_shuffle_param'}
2024-07-30 18:32:58,960:INFO:Checking environment
2024-07-30 18:32:58,960:INFO:python_version: 3.10.0
2024-07-30 18:32:58,960:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2024-07-30 18:32:58,960:INFO:machine: AMD64
2024-07-30 18:32:58,961:INFO:platform: Windows-10-10.0.19045-SP0
2024-07-30 18:32:58,964:INFO:Memory: svmem(total=3504250880, available=486592512, percent=86.1, used=3017658368, free=486592512)
2024-07-30 18:32:58,964:INFO:Physical Core: 2
2024-07-30 18:32:58,964:INFO:Logical Core: 4
2024-07-30 18:32:58,964:INFO:Checking libraries
2024-07-30 18:32:58,965:INFO:System:
2024-07-30 18:32:58,965:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2024-07-30 18:32:58,965:INFO:executable: D:\Desktop\autoanalysis\autoanalysis\Scripts\python.exe
2024-07-30 18:32:58,965:INFO:   machine: Windows-10-10.0.19045-SP0
2024-07-30 18:32:58,965:INFO:PyCaret required dependencies:
2024-07-30 18:32:58,965:INFO:                 pip: 21.2.3
2024-07-30 18:32:58,966:INFO:          setuptools: 57.4.0
2024-07-30 18:32:58,966:INFO:             pycaret: 3.3.2
2024-07-30 18:32:58,966:INFO:             IPython: 8.26.0
2024-07-30 18:32:58,966:INFO:          ipywidgets: 8.1.3
2024-07-30 18:32:58,966:INFO:                tqdm: 4.66.4
2024-07-30 18:32:58,966:INFO:               numpy: 1.26.4
2024-07-30 18:32:58,966:INFO:              pandas: 1.5.3
2024-07-30 18:32:58,967:INFO:              jinja2: 3.1.4
2024-07-30 18:32:58,967:INFO:               scipy: 1.11.4
2024-07-30 18:32:58,967:INFO:              joblib: 1.3.2
2024-07-30 18:32:58,968:INFO:             sklearn: 1.4.2
2024-07-30 18:32:58,968:INFO:                pyod: 2.0.1
2024-07-30 18:32:58,968:INFO:            imblearn: 0.12.3
2024-07-30 18:32:58,968:INFO:   category_encoders: 2.6.3
2024-07-30 18:32:58,968:INFO:            lightgbm: 4.5.0
2024-07-30 18:32:58,968:INFO:               numba: 0.60.0
2024-07-30 18:32:58,968:INFO:            requests: 2.32.3
2024-07-30 18:32:58,968:INFO:          matplotlib: 3.7.5
2024-07-30 18:32:58,969:INFO:          scikitplot: 0.3.7
2024-07-30 18:32:58,969:INFO:         yellowbrick: 1.5
2024-07-30 18:32:58,969:INFO:              plotly: 5.23.0
2024-07-30 18:32:58,969:INFO:    plotly-resampler: Not installed
2024-07-30 18:32:58,969:INFO:             kaleido: 0.2.1
2024-07-30 18:32:58,969:INFO:           schemdraw: 0.15
2024-07-30 18:32:58,969:INFO:         statsmodels: 0.14.2
2024-07-30 18:32:58,970:INFO:              sktime: 0.26.0
2024-07-30 18:32:58,970:INFO:               tbats: 1.1.3
2024-07-30 18:32:58,970:INFO:            pmdarima: 2.0.4
2024-07-30 18:32:58,970:INFO:              psutil: 6.0.0
2024-07-30 18:32:58,970:INFO:          markupsafe: 2.1.5
2024-07-30 18:32:58,970:INFO:             pickle5: Not installed
2024-07-30 18:32:58,970:INFO:         cloudpickle: 3.0.0
2024-07-30 18:32:58,970:INFO:         deprecation: 2.1.0
2024-07-30 18:32:58,971:INFO:              xxhash: 3.4.1
2024-07-30 18:32:58,971:INFO:           wurlitzer: Not installed
2024-07-30 18:32:58,971:INFO:PyCaret optional dependencies:
2024-07-30 18:32:58,971:INFO:                shap: Not installed
2024-07-30 18:32:58,972:INFO:           interpret: Not installed
2024-07-30 18:32:58,972:INFO:                umap: Not installed
2024-07-30 18:32:58,972:INFO:     ydata_profiling: 4.9.0
2024-07-30 18:32:58,972:INFO:  explainerdashboard: Not installed
2024-07-30 18:32:58,972:INFO:             autoviz: Not installed
2024-07-30 18:32:58,972:INFO:           fairlearn: Not installed
2024-07-30 18:32:58,972:INFO:          deepchecks: Not installed
2024-07-30 18:32:58,973:INFO:             xgboost: Not installed
2024-07-30 18:32:58,973:INFO:            catboost: Not installed
2024-07-30 18:32:58,973:INFO:              kmodes: Not installed
2024-07-30 18:32:58,973:INFO:             mlxtend: Not installed
2024-07-30 18:32:58,973:INFO:       statsforecast: Not installed
2024-07-30 18:32:58,973:INFO:        tune_sklearn: Not installed
2024-07-30 18:32:58,974:INFO:                 ray: Not installed
2024-07-30 18:32:58,974:INFO:            hyperopt: Not installed
2024-07-30 18:32:58,974:INFO:              optuna: Not installed
2024-07-30 18:32:58,974:INFO:               skopt: Not installed
2024-07-30 18:32:58,974:INFO:              mlflow: Not installed
2024-07-30 18:32:58,974:INFO:              gradio: Not installed
2024-07-30 18:32:58,974:INFO:             fastapi: Not installed
2024-07-30 18:32:58,975:INFO:             uvicorn: Not installed
2024-07-30 18:32:58,975:INFO:              m2cgen: Not installed
2024-07-30 18:32:58,975:INFO:           evidently: Not installed
2024-07-30 18:32:58,975:INFO:               fugue: Not installed
2024-07-30 18:32:58,975:INFO:           streamlit: 1.37.0
2024-07-30 18:32:58,975:INFO:             prophet: Not installed
2024-07-30 18:32:58,975:INFO:None
2024-07-30 18:32:58,975:INFO:Set up data.
2024-07-30 18:32:59,414:INFO:Set up folding strategy.
2024-07-30 18:32:59,415:INFO:Set up train/test split.
2024-07-30 18:33:01,563:INFO:Set up index.
2024-07-30 18:33:01,761:INFO:Assigning column types.
2024-07-30 18:33:01,816:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-30 18:33:02,039:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-30 18:33:03,010:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-30 18:33:03,645:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:03,647:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:03,818:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-30 18:33:03,821:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-30 18:33:03,943:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:03,943:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:03,943:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-30 18:33:04,179:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-30 18:33:04,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:04,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:04,524:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-30 18:33:04,659:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:04,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:04,661:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-30 18:33:04,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:04,935:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:05,159:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:05,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:05,451:INFO:Preparing preprocessing pipeline...
2024-07-30 18:33:05,517:INFO:Set up label encoding.
2024-07-30 18:33:05,517:INFO:Set up simple imputation.
2024-07-30 18:33:05,588:INFO:Set up encoding of categorical features.
2024-07-30 18:33:07,509:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py:256: UserWarning: Persisting input arguments took 0.70s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_transform(

2024-07-30 18:33:09,180:INFO:Finished creating preprocessing pipeline.
2024-07-30 18:33:09,190:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Lenovo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['open', 'high', 'low', 'close',
                                             'volume'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_...
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['time'],
                                    transformer=TargetEncoder(cols=['time'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-07-30 18:33:09,190:INFO:Creating final display dataframe.
2024-07-30 18:33:11,364:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py:289: UserWarning: Persisting input arguments took 0.63s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_full_transform(

2024-07-30 18:33:14,005:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               1524
1                        Target                                               date
2                   Target type                                         Multiclass
3                Target mapping  2017-01-02: 0, 2017-01-03: 1, 2017-01-04: 2, 2...
4           Original data shape                                        (370546, 7)
5        Transformed data shape                                        (370546, 7)
6   Transformed train set shape                                        (259382, 7)
7    Transformed test set shape                                        (111164, 7)
8              Numeric features                                                  5
9          Categorical features                                                  1
10     Rows with missing values                                               0.0%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               801f
2024-07-30 18:33:15,046:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:15,048:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:15,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:15,367:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-30 18:33:15,369:INFO:setup() successfully completed in 16.41s...............
2024-07-30 22:36:07,076:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 22:36:07,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 22:36:07,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 22:36:07,103:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 22:45:04,146:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 22:45:04,173:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 22:45:04,173:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-30 22:45:04,173:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 00:08:22,527:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 00:08:22,572:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 00:08:22,572:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 00:08:22,572:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 01:40:47,637:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 01:40:47,684:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 01:40:47,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 01:40:47,685:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 02:22:15,525:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 02:22:15,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 02:22:15,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 02:22:15,556:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 02:36:53,463:INFO:PyCaret ClassificationExperiment
2024-07-31 02:36:53,606:INFO:Logging name: clf-default-name
2024-07-31 02:36:53,659:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-31 02:36:53,660:INFO:version 3.3.2
2024-07-31 02:36:53,660:INFO:Initializing setup()
2024-07-31 02:36:53,660:INFO:self.USI: c6c6
2024-07-31 02:36:53,661:INFO:self._variable_keys: {'X_test', 'gpu_param', 'idx', 'gpu_n_jobs_param', 'memory', 'pipeline', 'X_train', 'is_multiclass', 'fold_generator', 'fold_shuffle_param', 'html_param', 'n_jobs_param', 'exp_id', 'seed', 'USI', 'fix_imbalance', 'y_test', 'fold_groups_param', 'data', 'y', 'logging_param', 'X', 'y_train', 'target_param', '_available_plots', 'exp_name_log', 'log_plots_param', '_ml_usecase'}
2024-07-31 02:36:53,661:INFO:Checking environment
2024-07-31 02:36:53,661:INFO:python_version: 3.10.0
2024-07-31 02:36:53,662:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2024-07-31 02:36:53,671:INFO:machine: AMD64
2024-07-31 02:36:53,671:INFO:platform: Windows-10-10.0.19045-SP0
2024-07-31 02:36:53,753:INFO:Memory: svmem(total=3504250880, available=595443712, percent=83.0, used=2908807168, free=595443712)
2024-07-31 02:36:53,791:INFO:Physical Core: 2
2024-07-31 02:36:53,791:INFO:Logical Core: 4
2024-07-31 02:36:53,791:INFO:Checking libraries
2024-07-31 02:36:53,791:INFO:System:
2024-07-31 02:36:53,791:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2024-07-31 02:36:53,791:INFO:executable: D:\Desktop\autoanalysis\autoanalysis\Scripts\python.exe
2024-07-31 02:36:53,791:INFO:   machine: Windows-10-10.0.19045-SP0
2024-07-31 02:36:53,791:INFO:PyCaret required dependencies:
2024-07-31 02:37:02,906:INFO:                 pip: 21.2.3
2024-07-31 02:37:02,906:INFO:          setuptools: 57.4.0
2024-07-31 02:37:02,906:INFO:             pycaret: 3.3.2
2024-07-31 02:37:02,906:INFO:             IPython: 8.12.3
2024-07-31 02:37:02,906:INFO:          ipywidgets: 8.1.3
2024-07-31 02:37:02,906:INFO:                tqdm: 4.66.4
2024-07-31 02:37:02,906:INFO:               numpy: 1.26.4
2024-07-31 02:37:02,915:INFO:              pandas: 1.5.3
2024-07-31 02:37:02,915:INFO:              jinja2: 3.1.4
2024-07-31 02:37:02,915:INFO:               scipy: 1.11.4
2024-07-31 02:37:02,915:INFO:              joblib: 1.3.2
2024-07-31 02:37:02,915:INFO:             sklearn: 1.4.2
2024-07-31 02:37:02,915:INFO:                pyod: 2.0.1
2024-07-31 02:37:02,915:INFO:            imblearn: 0.12.3
2024-07-31 02:37:02,915:INFO:   category_encoders: 2.6.3
2024-07-31 02:37:02,915:INFO:            lightgbm: 4.5.0
2024-07-31 02:37:02,915:INFO:               numba: 0.60.0
2024-07-31 02:37:02,915:INFO:            requests: 2.32.3
2024-07-31 02:37:02,915:INFO:          matplotlib: 3.7.5
2024-07-31 02:37:02,915:INFO:          scikitplot: 0.3.7
2024-07-31 02:37:02,915:INFO:         yellowbrick: 1.5
2024-07-31 02:37:02,915:INFO:              plotly: 5.23.0
2024-07-31 02:37:02,915:INFO:    plotly-resampler: Not installed
2024-07-31 02:37:02,915:INFO:             kaleido: 0.2.1
2024-07-31 02:37:02,915:INFO:           schemdraw: 0.15
2024-07-31 02:37:02,915:INFO:         statsmodels: 0.14.2
2024-07-31 02:37:02,915:INFO:              sktime: 0.26.0
2024-07-31 02:37:02,915:INFO:               tbats: 1.1.3
2024-07-31 02:37:02,915:INFO:            pmdarima: 2.0.4
2024-07-31 02:37:03,105:INFO:              psutil: 6.0.0
2024-07-31 02:37:03,105:INFO:          markupsafe: 2.1.5
2024-07-31 02:37:03,105:INFO:             pickle5: Not installed
2024-07-31 02:37:03,105:INFO:         cloudpickle: 3.0.0
2024-07-31 02:37:03,105:INFO:         deprecation: 2.1.0
2024-07-31 02:37:03,105:INFO:              xxhash: 3.4.1
2024-07-31 02:37:03,105:INFO:           wurlitzer: Not installed
2024-07-31 02:37:03,105:INFO:PyCaret optional dependencies:
2024-07-31 02:37:03,162:INFO:                shap: Not installed
2024-07-31 02:37:03,162:INFO:           interpret: Not installed
2024-07-31 02:37:03,162:INFO:                umap: Not installed
2024-07-31 02:37:03,162:INFO:     ydata_profiling: 4.9.0
2024-07-31 02:37:03,162:INFO:  explainerdashboard: Not installed
2024-07-31 02:37:03,162:INFO:             autoviz: Not installed
2024-07-31 02:37:03,162:INFO:           fairlearn: Not installed
2024-07-31 02:37:03,162:INFO:          deepchecks: Not installed
2024-07-31 02:37:03,162:INFO:             xgboost: Not installed
2024-07-31 02:37:03,162:INFO:            catboost: Not installed
2024-07-31 02:37:03,162:INFO:              kmodes: Not installed
2024-07-31 02:37:03,162:INFO:             mlxtend: Not installed
2024-07-31 02:37:03,162:INFO:       statsforecast: Not installed
2024-07-31 02:37:03,162:INFO:        tune_sklearn: Not installed
2024-07-31 02:37:03,162:INFO:                 ray: Not installed
2024-07-31 02:37:03,162:INFO:            hyperopt: Not installed
2024-07-31 02:37:03,162:INFO:              optuna: Not installed
2024-07-31 02:37:03,162:INFO:               skopt: Not installed
2024-07-31 02:37:03,162:INFO:              mlflow: Not installed
2024-07-31 02:37:03,162:INFO:              gradio: Not installed
2024-07-31 02:37:03,178:INFO:             fastapi: Not installed
2024-07-31 02:37:03,178:INFO:             uvicorn: Not installed
2024-07-31 02:37:03,178:INFO:              m2cgen: Not installed
2024-07-31 02:37:03,178:INFO:           evidently: Not installed
2024-07-31 02:37:03,178:INFO:               fugue: Not installed
2024-07-31 02:37:03,178:INFO:           streamlit: 1.37.0
2024-07-31 02:37:03,178:INFO:             prophet: Not installed
2024-07-31 02:37:03,178:INFO:None
2024-07-31 02:37:03,178:INFO:Set up data.
2024-07-31 02:37:05,549:INFO:Set up folding strategy.
2024-07-31 02:37:05,549:INFO:Set up train/test split.
2024-07-31 02:37:35,343:INFO:PyCaret ClassificationExperiment
2024-07-31 02:37:35,343:INFO:Logging name: clf-default-name
2024-07-31 02:37:35,343:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-31 02:37:35,344:INFO:version 3.3.2
2024-07-31 02:37:35,345:INFO:Initializing setup()
2024-07-31 02:37:35,345:INFO:self.USI: 8b22
2024-07-31 02:37:35,346:INFO:self._variable_keys: {'X_test', 'gpu_param', 'idx', 'gpu_n_jobs_param', 'memory', 'pipeline', 'X_train', 'is_multiclass', 'fold_generator', 'fold_shuffle_param', 'html_param', 'n_jobs_param', 'exp_id', 'seed', 'USI', 'fix_imbalance', 'y_test', 'fold_groups_param', 'data', 'y', 'logging_param', 'X', 'y_train', 'target_param', '_available_plots', 'exp_name_log', 'log_plots_param', '_ml_usecase'}
2024-07-31 02:37:35,346:INFO:Checking environment
2024-07-31 02:37:35,347:INFO:python_version: 3.10.0
2024-07-31 02:37:35,347:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2024-07-31 02:37:35,347:INFO:machine: AMD64
2024-07-31 02:37:35,348:INFO:platform: Windows-10-10.0.19045-SP0
2024-07-31 02:37:35,354:INFO:Memory: svmem(total=3504250880, available=467775488, percent=86.7, used=3036475392, free=467775488)
2024-07-31 02:37:35,356:INFO:Physical Core: 2
2024-07-31 02:37:35,357:INFO:Logical Core: 4
2024-07-31 02:37:35,359:INFO:Checking libraries
2024-07-31 02:37:35,359:INFO:System:
2024-07-31 02:37:35,359:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2024-07-31 02:37:35,360:INFO:executable: D:\Desktop\autoanalysis\autoanalysis\Scripts\python.exe
2024-07-31 02:37:35,360:INFO:   machine: Windows-10-10.0.19045-SP0
2024-07-31 02:37:35,360:INFO:PyCaret required dependencies:
2024-07-31 02:37:35,361:INFO:                 pip: 21.2.3
2024-07-31 02:37:35,417:INFO:          setuptools: 57.4.0
2024-07-31 02:37:35,419:INFO:             pycaret: 3.3.2
2024-07-31 02:37:35,420:INFO:             IPython: 8.12.3
2024-07-31 02:37:35,420:INFO:          ipywidgets: 8.1.3
2024-07-31 02:37:35,420:INFO:                tqdm: 4.66.4
2024-07-31 02:37:35,421:INFO:               numpy: 1.26.4
2024-07-31 02:37:35,422:INFO:              pandas: 1.5.3
2024-07-31 02:37:35,422:INFO:              jinja2: 3.1.4
2024-07-31 02:37:35,422:INFO:               scipy: 1.11.4
2024-07-31 02:37:35,423:INFO:              joblib: 1.3.2
2024-07-31 02:37:35,424:INFO:             sklearn: 1.4.2
2024-07-31 02:37:35,424:INFO:                pyod: 2.0.1
2024-07-31 02:37:35,424:INFO:            imblearn: 0.12.3
2024-07-31 02:37:35,426:INFO:   category_encoders: 2.6.3
2024-07-31 02:37:35,427:INFO:            lightgbm: 4.5.0
2024-07-31 02:37:35,427:INFO:               numba: 0.60.0
2024-07-31 02:37:35,427:INFO:            requests: 2.32.3
2024-07-31 02:37:35,427:INFO:          matplotlib: 3.7.5
2024-07-31 02:37:35,427:INFO:          scikitplot: 0.3.7
2024-07-31 02:37:35,428:INFO:         yellowbrick: 1.5
2024-07-31 02:37:35,428:INFO:              plotly: 5.23.0
2024-07-31 02:37:35,428:INFO:    plotly-resampler: Not installed
2024-07-31 02:37:35,428:INFO:             kaleido: 0.2.1
2024-07-31 02:37:35,428:INFO:           schemdraw: 0.15
2024-07-31 02:37:35,429:INFO:         statsmodels: 0.14.2
2024-07-31 02:37:35,429:INFO:              sktime: 0.26.0
2024-07-31 02:37:35,429:INFO:               tbats: 1.1.3
2024-07-31 02:37:35,429:INFO:            pmdarima: 2.0.4
2024-07-31 02:37:35,429:INFO:              psutil: 6.0.0
2024-07-31 02:37:35,430:INFO:          markupsafe: 2.1.5
2024-07-31 02:37:35,430:INFO:             pickle5: Not installed
2024-07-31 02:37:35,430:INFO:         cloudpickle: 3.0.0
2024-07-31 02:37:35,430:INFO:         deprecation: 2.1.0
2024-07-31 02:37:35,430:INFO:              xxhash: 3.4.1
2024-07-31 02:37:35,431:INFO:           wurlitzer: Not installed
2024-07-31 02:37:35,431:INFO:PyCaret optional dependencies:
2024-07-31 02:37:35,431:INFO:                shap: Not installed
2024-07-31 02:37:35,431:INFO:           interpret: Not installed
2024-07-31 02:37:35,431:INFO:                umap: Not installed
2024-07-31 02:37:35,431:INFO:     ydata_profiling: 4.9.0
2024-07-31 02:37:35,431:INFO:  explainerdashboard: Not installed
2024-07-31 02:37:35,432:INFO:             autoviz: Not installed
2024-07-31 02:37:35,432:INFO:           fairlearn: Not installed
2024-07-31 02:37:35,432:INFO:          deepchecks: Not installed
2024-07-31 02:37:35,432:INFO:             xgboost: Not installed
2024-07-31 02:37:35,432:INFO:            catboost: Not installed
2024-07-31 02:37:35,432:INFO:              kmodes: Not installed
2024-07-31 02:37:35,432:INFO:             mlxtend: Not installed
2024-07-31 02:37:35,432:INFO:       statsforecast: Not installed
2024-07-31 02:37:35,432:INFO:        tune_sklearn: Not installed
2024-07-31 02:37:35,432:INFO:                 ray: Not installed
2024-07-31 02:37:35,432:INFO:            hyperopt: Not installed
2024-07-31 02:37:35,432:INFO:              optuna: Not installed
2024-07-31 02:37:35,433:INFO:               skopt: Not installed
2024-07-31 02:37:35,433:INFO:              mlflow: Not installed
2024-07-31 02:37:35,433:INFO:              gradio: Not installed
2024-07-31 02:37:35,433:INFO:             fastapi: Not installed
2024-07-31 02:37:35,433:INFO:             uvicorn: Not installed
2024-07-31 02:37:35,433:INFO:              m2cgen: Not installed
2024-07-31 02:37:35,433:INFO:           evidently: Not installed
2024-07-31 02:37:35,433:INFO:               fugue: Not installed
2024-07-31 02:37:35,434:INFO:           streamlit: 1.37.0
2024-07-31 02:37:35,434:INFO:             prophet: Not installed
2024-07-31 02:37:35,434:INFO:None
2024-07-31 02:37:35,451:INFO:Set up data.
2024-07-31 02:37:35,484:INFO:Set up folding strategy.
2024-07-31 02:37:35,484:INFO:Set up train/test split.
2024-07-31 02:37:36,274:INFO:Set up index.
2024-07-31 02:37:36,391:INFO:Assigning column types.
2024-07-31 02:37:36,429:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-31 02:37:36,591:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-31 02:37:37,072:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 02:37:37,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:38,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:38,262:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-31 02:37:38,263:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 02:37:38,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:38,364:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:38,364:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-31 02:37:38,626:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 02:37:38,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:38,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:39,088:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 02:37:39,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:39,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:39,134:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-31 02:37:39,565:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:39,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:39,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:39,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:39,843:INFO:Preparing preprocessing pipeline...
2024-07-31 02:37:39,874:INFO:Set up label encoding.
2024-07-31 02:37:39,874:INFO:Set up simple imputation.
2024-07-31 02:37:39,919:INFO:Set up encoding of categorical features.
2024-07-31 02:37:39,919:INFO:Set up column name cleaning.
2024-07-31 02:37:41,787:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py:249: UserWarning: Persisting input arguments took 0.99s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2024-07-31 02:37:41,903:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:37:42,287:INFO:Finished creating preprocessing pipeline.
2024-07-31 02:37:42,326:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Lenovo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Strike Price', 'Call-Price',
                                             'Call-Change in Price (%)',
                                             'Call-Open Interest',
                                             'Call-Volume',
                                             'Call-Implied V...
                 TransformerWrapper(exclude=None, include=['Underlying Name'],
                                    transformer=OneHotEncoder(cols=['Underlying '
                                                                    'Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-31 02:37:42,326:INFO:Creating final display dataframe.
2024-07-31 02:37:43,121:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:37:43,236:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:37:43,288:INFO:Setup _display_container:                     Description             Value
0                    Session id              8048
1                        Target   Expiration Date
2                   Target type        Multiclass
3                Target mapping     29-08-2024: 0
4           Original data shape          (16, 24)
5        Transformed data shape          (16, 22)
6   Transformed train set shape          (11, 22)
7    Transformed test set shape           (5, 22)
8              Numeric features                22
9          Categorical features                 1
10     Rows with missing values            100.0%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              8b22
2024-07-31 02:37:43,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:43,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:43,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:43,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 02:37:43,688:INFO:setup() successfully completed in 8.36s...............
2024-07-31 02:37:45,634:INFO:Initializing compare_models()
2024-07-31 02:37:45,634:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-31 02:37:45,635:INFO:Checking exceptions
2024-07-31 02:37:45,651:INFO:Preparing display monitor
2024-07-31 02:37:45,875:INFO:Initializing Logistic Regression
2024-07-31 02:37:45,875:INFO:Total runtime is 0.0 minutes
2024-07-31 02:37:45,876:INFO:SubProcess create_model() called ==================================
2024-07-31 02:37:45,876:INFO:Initializing create_model()
2024-07-31 02:37:45,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:37:45,876:INFO:Checking exceptions
2024-07-31 02:37:45,876:INFO:Importing libraries
2024-07-31 02:37:45,876:INFO:Copying training dataset
2024-07-31 02:37:45,882:INFO:Defining folds
2024-07-31 02:37:45,882:INFO:Declaring metric variables
2024-07-31 02:37:45,883:INFO:Importing untrained model
2024-07-31 02:37:45,883:INFO:Logistic Regression Imported successfully
2024-07-31 02:37:45,883:INFO:Starting cross validation
2024-07-31 02:37:45,885:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:38:58,269:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:58,269:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:58,285:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:58,313:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:58,696:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:58,696:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:58,696:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:58,717:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:58,833:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:58,855:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,223:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 02:38:59,249:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_logistic.py", line 1246, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


2024-07-31 02:38:59,249:INFO:Initializing create_model()
2024-07-31 02:38:59,250:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:38:59,250:INFO:Checking exceptions
2024-07-31 02:38:59,250:INFO:Importing libraries
2024-07-31 02:38:59,250:INFO:Copying training dataset
2024-07-31 02:38:59,285:INFO:Defining folds
2024-07-31 02:38:59,285:INFO:Declaring metric variables
2024-07-31 02:38:59,285:INFO:Importing untrained model
2024-07-31 02:38:59,285:INFO:Logistic Regression Imported successfully
2024-07-31 02:38:59,285:INFO:Starting cross validation
2024-07-31 02:38:59,285:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:38:59,348:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,349:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,350:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,366:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,503:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,508:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,511:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,667:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,668:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,777:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-07-31 02:38:59,777:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_logistic.py", line 1246, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_logistic.py", line 1246, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


2024-07-31 02:38:59,779:INFO:Initializing K Neighbors Classifier
2024-07-31 02:38:59,779:INFO:Total runtime is 1.2317252238591512 minutes
2024-07-31 02:38:59,779:INFO:SubProcess create_model() called ==================================
2024-07-31 02:38:59,779:INFO:Initializing create_model()
2024-07-31 02:38:59,779:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:38:59,779:INFO:Checking exceptions
2024-07-31 02:38:59,779:INFO:Importing libraries
2024-07-31 02:38:59,779:INFO:Copying training dataset
2024-07-31 02:38:59,779:INFO:Defining folds
2024-07-31 02:38:59,779:INFO:Declaring metric variables
2024-07-31 02:38:59,779:INFO:Importing untrained model
2024-07-31 02:38:59,787:INFO:K Neighbors Classifier Imported successfully
2024-07-31 02:38:59,787:INFO:Starting cross validation
2024-07-31 02:38:59,789:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:38:59,841:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,845:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,850:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,856:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,961:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,972:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:38:59,982:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:00,012:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:01,728:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:01,728:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:01,728:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:01,728:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:01,744:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:01,744:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:01,759:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:01,759:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:01,775:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:01,775:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:01,775:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:01,775:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:01,791:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:01,791:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:01,811:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:01,812:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:01,812:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:01,816:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:01,816:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:01,816:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:01,817:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:01,817:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:01,822:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:01,822:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:01,853:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:01,853:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:01,868:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:01,868:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:01,985:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:01,996:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,025:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,025:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,066:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:02,074:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,084:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,086:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,096:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,096:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:02,096:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:02,096:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,104:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,106:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,117:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:02,117:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,117:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:02,117:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,117:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,125:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,125:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:02,127:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,127:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,137:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,137:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,147:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,147:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,155:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,155:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:02,157:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,157:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:02,165:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,167:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,175:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,254:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,267:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,298:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:02,308:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,308:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,318:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,318:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:02,328:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,328:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:02,328:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,336:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,338:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,348:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,356:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,356:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:02,358:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,367:INFO:Calculating mean and std
2024-07-31 02:39:02,369:INFO:Creating metrics dataframe
2024-07-31 02:39:02,369:INFO:Uploading results into container
2024-07-31 02:39:02,369:INFO:Uploading model into container now
2024-07-31 02:39:02,369:INFO:_master_model_container: 1
2024-07-31 02:39:02,369:INFO:_display_container: 2
2024-07-31 02:39:02,377:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-31 02:39:02,377:INFO:create_model() successfully completed......................................
2024-07-31 02:39:02,581:INFO:SubProcess create_model() end ==================================
2024-07-31 02:39:02,581:INFO:Creating metrics dataframe
2024-07-31 02:39:02,591:INFO:Initializing Naive Bayes
2024-07-31 02:39:02,591:INFO:Total runtime is 1.2785963694254556 minutes
2024-07-31 02:39:02,599:INFO:SubProcess create_model() called ==================================
2024-07-31 02:39:02,599:INFO:Initializing create_model()
2024-07-31 02:39:02,599:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:02,599:INFO:Checking exceptions
2024-07-31 02:39:02,599:INFO:Importing libraries
2024-07-31 02:39:02,599:INFO:Copying training dataset
2024-07-31 02:39:02,601:INFO:Defining folds
2024-07-31 02:39:02,601:INFO:Declaring metric variables
2024-07-31 02:39:02,601:INFO:Importing untrained model
2024-07-31 02:39:02,601:INFO:Naive Bayes Imported successfully
2024-07-31 02:39:02,601:INFO:Starting cross validation
2024-07-31 02:39:02,611:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:39:02,669:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,671:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,673:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,683:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,784:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,809:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,810:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,814:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,855:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:02,860:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,883:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,887:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,897:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,897:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:02,897:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,917:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:02,917:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:02,917:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,917:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,927:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,927:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,935:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:02,937:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,937:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,937:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,945:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,947:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,947:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:02,947:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,947:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,955:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:02,957:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,957:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:02,967:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,967:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,967:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:02,977:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:02,997:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:02,997:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:03,010:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:03,088:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:03,138:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:03,146:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:03,169:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:03,177:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,179:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,213:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,221:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:03,221:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:03,226:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:03,235:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:03,239:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,241:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:03,244:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,247:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,248:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:03,251:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:03,258:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,270:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,278:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,280:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,280:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,280:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:03,280:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:03,280:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:03,280:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:03,290:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:03,290:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:03,290:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:03,290:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:03,290:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:03,310:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:03,430:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:03,482:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:03,492:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:03,492:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,510:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,513:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:03,513:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:03,523:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:03,543:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:03,543:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,553:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,561:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:03,563:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:03,563:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:03,563:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:03,571:INFO:Calculating mean and std
2024-07-31 02:39:03,571:INFO:Creating metrics dataframe
2024-07-31 02:39:03,573:INFO:Uploading results into container
2024-07-31 02:39:03,573:INFO:Uploading model into container now
2024-07-31 02:39:03,573:INFO:_master_model_container: 2
2024-07-31 02:39:03,573:INFO:_display_container: 2
2024-07-31 02:39:03,573:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-31 02:39:03,573:INFO:create_model() successfully completed......................................
2024-07-31 02:39:03,774:INFO:SubProcess create_model() end ==================================
2024-07-31 02:39:03,774:INFO:Creating metrics dataframe
2024-07-31 02:39:03,784:INFO:Initializing Decision Tree Classifier
2024-07-31 02:39:03,784:INFO:Total runtime is 1.2984834194183348 minutes
2024-07-31 02:39:03,784:INFO:SubProcess create_model() called ==================================
2024-07-31 02:39:03,784:INFO:Initializing create_model()
2024-07-31 02:39:03,784:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:03,784:INFO:Checking exceptions
2024-07-31 02:39:03,784:INFO:Importing libraries
2024-07-31 02:39:03,784:INFO:Copying training dataset
2024-07-31 02:39:03,792:INFO:Defining folds
2024-07-31 02:39:03,792:INFO:Declaring metric variables
2024-07-31 02:39:03,792:INFO:Importing untrained model
2024-07-31 02:39:03,795:INFO:Decision Tree Classifier Imported successfully
2024-07-31 02:39:03,795:INFO:Starting cross validation
2024-07-31 02:39:03,795:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:39:03,839:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:03,883:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:03,885:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:03,893:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,031:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,040:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,046:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,058:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,097:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:04,097:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,107:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,115:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,117:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:04,117:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,117:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:04,117:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:04,117:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,128:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,128:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:04,128:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,138:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,138:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,148:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,148:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,148:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,148:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,158:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,158:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:04,158:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,158:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:04,158:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,158:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,158:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,168:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,188:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,196:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,196:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:04,196:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,198:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,237:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,319:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,329:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,348:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,360:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,400:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:04,400:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,414:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,416:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:04,437:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,439:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,444:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,445:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:04,448:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,453:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,453:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:04,459:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,461:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,461:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,461:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:04,472:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,480:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:04,480:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,482:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,482:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,482:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,482:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:04,461:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,492:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,492:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:04,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,510:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,512:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,603:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,603:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:04,674:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:04,674:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,674:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:04,682:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,694:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:04,694:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:04,694:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,694:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:04,702:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,704:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:04,712:INFO:Calculating mean and std
2024-07-31 02:39:04,712:INFO:Creating metrics dataframe
2024-07-31 02:39:04,722:INFO:Uploading results into container
2024-07-31 02:39:04,724:INFO:Uploading model into container now
2024-07-31 02:39:04,724:INFO:_master_model_container: 3
2024-07-31 02:39:04,724:INFO:_display_container: 2
2024-07-31 02:39:04,724:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8048, splitter='best')
2024-07-31 02:39:04,724:INFO:create_model() successfully completed......................................
2024-07-31 02:39:04,903:INFO:SubProcess create_model() end ==================================
2024-07-31 02:39:04,903:INFO:Creating metrics dataframe
2024-07-31 02:39:04,919:INFO:Initializing SVM - Linear Kernel
2024-07-31 02:39:04,919:INFO:Total runtime is 1.3173922618230183 minutes
2024-07-31 02:39:04,919:INFO:SubProcess create_model() called ==================================
2024-07-31 02:39:04,919:INFO:Initializing create_model()
2024-07-31 02:39:04,919:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:04,919:INFO:Checking exceptions
2024-07-31 02:39:04,919:INFO:Importing libraries
2024-07-31 02:39:04,919:INFO:Copying training dataset
2024-07-31 02:39:04,935:INFO:Defining folds
2024-07-31 02:39:04,935:INFO:Declaring metric variables
2024-07-31 02:39:04,935:INFO:Importing untrained model
2024-07-31 02:39:04,935:INFO:SVM - Linear Kernel Imported successfully
2024-07-31 02:39:04,935:INFO:Starting cross validation
2024-07-31 02:39:04,935:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:39:05,006:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,012:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,013:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,020:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,205:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,207:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,207:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,224:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,347:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,369:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,480:WARNING:create_model() for svm raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 02:39:05,480:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 658, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 02:39:05,488:INFO:Initializing create_model()
2024-07-31 02:39:05,488:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:05,488:INFO:Checking exceptions
2024-07-31 02:39:05,488:INFO:Importing libraries
2024-07-31 02:39:05,488:INFO:Copying training dataset
2024-07-31 02:39:05,500:INFO:Defining folds
2024-07-31 02:39:05,500:INFO:Declaring metric variables
2024-07-31 02:39:05,500:INFO:Importing untrained model
2024-07-31 02:39:05,500:INFO:SVM - Linear Kernel Imported successfully
2024-07-31 02:39:05,500:INFO:Starting cross validation
2024-07-31 02:39:05,510:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:39:05,585:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,586:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,589:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,601:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,733:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,754:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,772:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,774:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,905:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:05,923:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:06,019:ERROR:create_model() for svm raised an exception or returned all 0.0:
2024-07-31 02:39:06,021:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 658, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 658, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 02:39:06,021:INFO:Initializing Ridge Classifier
2024-07-31 02:39:06,022:INFO:Total runtime is 1.335778772830963 minutes
2024-07-31 02:39:06,022:INFO:SubProcess create_model() called ==================================
2024-07-31 02:39:06,023:INFO:Initializing create_model()
2024-07-31 02:39:06,023:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:06,023:INFO:Checking exceptions
2024-07-31 02:39:06,023:INFO:Importing libraries
2024-07-31 02:39:06,024:INFO:Copying training dataset
2024-07-31 02:39:06,038:INFO:Defining folds
2024-07-31 02:39:06,038:INFO:Declaring metric variables
2024-07-31 02:39:06,039:INFO:Importing untrained model
2024-07-31 02:39:06,040:INFO:Ridge Classifier Imported successfully
2024-07-31 02:39:06,041:INFO:Starting cross validation
2024-07-31 02:39:06,045:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:39:06,094:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:06,098:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:06,100:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:06,120:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,085:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,085:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,085:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,216:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:08,216:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:08,216:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:08,220:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,221:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,222:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,232:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,232:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,234:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,240:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,242:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,243:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,247:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,249:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:08,249:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:08,249:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,249:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:08,253:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,253:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,253:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,259:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,259:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,259:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,275:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:08,275:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,275:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,275:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:08,275:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,275:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,275:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,306:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,322:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,415:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,420:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,473:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,491:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,493:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:08,504:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,504:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:08,514:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,514:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,524:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,524:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,524:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:08,532:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,542:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,524:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,544:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:08,552:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,554:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:08,554:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,562:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:08,564:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,574:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,574:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,574:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,584:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,584:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,584:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:08,584:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,595:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,595:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,595:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,595:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:08,603:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,605:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,685:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,715:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:08,746:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:08,756:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,764:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,766:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,766:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,766:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:08,774:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,784:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:08,786:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,786:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,795:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:08,797:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,797:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:08,797:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:08,805:INFO:Calculating mean and std
2024-07-31 02:39:08,806:INFO:Creating metrics dataframe
2024-07-31 02:39:08,812:INFO:Uploading results into container
2024-07-31 02:39:08,813:INFO:Uploading model into container now
2024-07-31 02:39:08,813:INFO:_master_model_container: 4
2024-07-31 02:39:08,813:INFO:_display_container: 2
2024-07-31 02:39:08,814:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8048, solver='auto',
                tol=0.0001)
2024-07-31 02:39:08,814:INFO:create_model() successfully completed......................................
2024-07-31 02:39:09,013:INFO:SubProcess create_model() end ==================================
2024-07-31 02:39:09,013:INFO:Creating metrics dataframe
2024-07-31 02:39:09,027:INFO:Initializing Random Forest Classifier
2024-07-31 02:39:09,028:INFO:Total runtime is 1.385879051685333 minutes
2024-07-31 02:39:09,030:INFO:SubProcess create_model() called ==================================
2024-07-31 02:39:09,031:INFO:Initializing create_model()
2024-07-31 02:39:09,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:09,032:INFO:Checking exceptions
2024-07-31 02:39:09,032:INFO:Importing libraries
2024-07-31 02:39:09,032:INFO:Copying training dataset
2024-07-31 02:39:09,050:INFO:Defining folds
2024-07-31 02:39:09,051:INFO:Declaring metric variables
2024-07-31 02:39:09,051:INFO:Importing untrained model
2024-07-31 02:39:09,052:INFO:Random Forest Classifier Imported successfully
2024-07-31 02:39:09,053:INFO:Starting cross validation
2024-07-31 02:39:09,056:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:39:09,107:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:09,111:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:09,111:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:09,133:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:09,954:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:09,982:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:10,027:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:10,038:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:10,196:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:10,196:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:10,206:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:10,216:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:10,230:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:10,231:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:10,245:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:10,256:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:10,261:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:10,269:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:10,269:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:10,274:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:10,276:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:10,276:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:10,284:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:10,284:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:10,286:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:10,294:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:10,296:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:10,307:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:10,307:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:10,315:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:10,317:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:10,317:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:10,325:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:10,327:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:10,337:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:10,347:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:10,347:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:10,347:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:10,357:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:10,398:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:10,963:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:10,973:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:11,043:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:11,246:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:11,250:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:11,261:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:11,269:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:11,276:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:11,284:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:11,284:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:11,286:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:11,286:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:11,286:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:11,286:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:11,294:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:11,296:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:11,296:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:11,296:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:11,304:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:11,304:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:11,306:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:11,306:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:11,314:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:11,316:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:11,326:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:11,334:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:11,346:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:11,508:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:11,516:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:11,518:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:11,528:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:11,536:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:11,536:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:11,538:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:11,877:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:12,091:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:12,091:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:12,091:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:12,101:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:12,101:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:12,109:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:12,111:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:12,111:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

e 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:12,111:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:12,119:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:12,119:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:12,129:INFO:Calculating mean and std
2024-07-31 02:39:12,131:INFO:Creating metrics dataframe
2024-07-31 02:39:12,141:INFO:Uploading results into container
2024-07-31 02:39:12,141:INFO:Uploading model into container now
2024-07-31 02:39:12,141:INFO:_master_model_container: 5
2024-07-31 02:39:12,141:INFO:_display_container: 2
2024-07-31 02:39:12,141:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8048, verbose=0,
                       warm_start=False)
2024-07-31 02:39:12,149:INFO:create_model() successfully completed......................................
2024-07-31 02:39:12,343:INFO:SubProcess create_model() end ==================================
2024-07-31 02:39:12,343:INFO:Creating metrics dataframe
2024-07-31 02:39:12,353:INFO:Initializing Quadratic Discriminant Analysis
2024-07-31 02:39:12,353:INFO:Total runtime is 1.4412936051686602 minutes
2024-07-31 02:39:12,353:INFO:SubProcess create_model() called ==================================
2024-07-31 02:39:12,361:INFO:Initializing create_model()
2024-07-31 02:39:12,361:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:12,361:INFO:Checking exceptions
2024-07-31 02:39:12,361:INFO:Importing libraries
2024-07-31 02:39:12,361:INFO:Copying training dataset
2024-07-31 02:39:12,363:INFO:Defining folds
2024-07-31 02:39:12,363:INFO:Declaring metric variables
2024-07-31 02:39:12,363:INFO:Importing untrained model
2024-07-31 02:39:12,363:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-31 02:39:12,363:INFO:Starting cross validation
2024-07-31 02:39:12,363:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:39:12,436:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:12,437:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:12,440:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:12,462:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:12,586:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:12,594:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:12,596:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:12,596:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:12,707:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:12,717:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:12,837:WARNING:create_model() for qda raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 02:39:12,838:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\discriminant_analysis.py", line 905, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 02:39:12,840:INFO:Initializing create_model()
2024-07-31 02:39:12,840:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:12,840:INFO:Checking exceptions
2024-07-31 02:39:12,840:INFO:Importing libraries
2024-07-31 02:39:12,840:INFO:Copying training dataset
2024-07-31 02:39:12,849:INFO:Defining folds
2024-07-31 02:39:12,849:INFO:Declaring metric variables
2024-07-31 02:39:12,850:INFO:Importing untrained model
2024-07-31 02:39:12,851:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-31 02:39:12,851:INFO:Starting cross validation
2024-07-31 02:39:12,853:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:39:12,891:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:12,896:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:12,898:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:12,908:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:13,008:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:13,020:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:13,026:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:13,106:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:13,193:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:13,198:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:13,309:ERROR:create_model() for qda raised an exception or returned all 0.0:
2024-07-31 02:39:13,309:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\discriminant_analysis.py", line 905, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\discriminant_analysis.py", line 905, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 02:39:13,311:INFO:Initializing Ada Boost Classifier
2024-07-31 02:39:13,311:INFO:Total runtime is 1.4572627703348793 minutes
2024-07-31 02:39:13,311:INFO:SubProcess create_model() called ==================================
2024-07-31 02:39:13,311:INFO:Initializing create_model()
2024-07-31 02:39:13,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:13,311:INFO:Checking exceptions
2024-07-31 02:39:13,311:INFO:Importing libraries
2024-07-31 02:39:13,311:INFO:Copying training dataset
2024-07-31 02:39:13,311:INFO:Defining folds
2024-07-31 02:39:13,319:INFO:Declaring metric variables
2024-07-31 02:39:13,319:INFO:Importing untrained model
2024-07-31 02:39:13,319:INFO:Ada Boost Classifier Imported successfully
2024-07-31 02:39:13,321:INFO:Starting cross validation
2024-07-31 02:39:13,321:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:39:13,385:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:13,388:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:13,390:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:13,400:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:14,355:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 02:39:14,355:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 02:39:14,355:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 02:39:14,355:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 02:39:14,371:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:14,386:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:14,386:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:14,386:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:14,490:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:14,492:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:14,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,512:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,522:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:14,522:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:14,522:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:14,522:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:14,522:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,532:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:14,532:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,540:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,542:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,542:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:14,542:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:14,532:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,550:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:14,552:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,552:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:14,552:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,562:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:14,562:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:14,562:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:14,582:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:14,582:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:14,582:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:14,601:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:14,617:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:14,654:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:14,673:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 02:39:14,683:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:14,714:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 02:39:14,744:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 02:39:14,744:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:14,764:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 02:39:14,775:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:14,775:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:14,783:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:14,785:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,793:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,795:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,820:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:14,821:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:14,825:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:14,837:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:14,842:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,849:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:14,851:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,856:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,865:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:14,865:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:14,865:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:14,867:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,867:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:14,877:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,887:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,897:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

arn(

2024-07-31 02:39:14,907:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,907:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:14,907:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:14,917:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:14,917:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:14,917:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:14,917:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:14,925:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:14,948:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:14,988:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 02:39:14,998:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:15,019:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 02:39:15,041:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:15,066:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:15,069:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:15,078:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:15,078:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:15,088:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:15,088:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:15,088:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:15,098:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:15,098:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:15,109:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:15,119:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:15,129:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:15,129:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:15,137:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:15,147:INFO:Calculating mean and std
2024-07-31 02:39:15,149:INFO:Creating metrics dataframe
2024-07-31 02:39:15,159:INFO:Uploading results into container
2024-07-31 02:39:15,159:INFO:Uploading model into container now
2024-07-31 02:39:15,159:INFO:_master_model_container: 6
2024-07-31 02:39:15,159:INFO:_display_container: 2
2024-07-31 02:39:15,159:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8048)
2024-07-31 02:39:15,159:INFO:create_model() successfully completed......................................
2024-07-31 02:39:15,361:INFO:SubProcess create_model() end ==================================
2024-07-31 02:39:15,361:INFO:Creating metrics dataframe
2024-07-31 02:39:15,371:INFO:Initializing Gradient Boosting Classifier
2024-07-31 02:39:15,371:INFO:Total runtime is 1.4915893514951066 minutes
2024-07-31 02:39:15,371:INFO:SubProcess create_model() called ==================================
2024-07-31 02:39:15,371:INFO:Initializing create_model()
2024-07-31 02:39:15,371:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:15,371:INFO:Checking exceptions
2024-07-31 02:39:15,371:INFO:Importing libraries
2024-07-31 02:39:15,371:INFO:Copying training dataset
2024-07-31 02:39:15,379:INFO:Defining folds
2024-07-31 02:39:15,379:INFO:Declaring metric variables
2024-07-31 02:39:15,379:INFO:Importing untrained model
2024-07-31 02:39:15,381:INFO:Gradient Boosting Classifier Imported successfully
2024-07-31 02:39:15,381:INFO:Starting cross validation
2024-07-31 02:39:15,381:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:39:15,439:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:15,442:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:15,445:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:15,453:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:15,737:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:15,737:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:15,752:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:15,768:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:15,883:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:15,892:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,001:WARNING:create_model() for gbc raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 02:39:16,003:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 665, in fit
    y = self._encode_y(y=y, sample_weight=None)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 1520, in _encode_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


2024-07-31 02:39:16,134:INFO:Initializing create_model()
2024-07-31 02:39:16,134:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:16,134:INFO:Checking exceptions
2024-07-31 02:39:16,134:INFO:Importing libraries
2024-07-31 02:39:16,142:INFO:Copying training dataset
2024-07-31 02:39:16,144:INFO:Defining folds
2024-07-31 02:39:16,144:INFO:Declaring metric variables
2024-07-31 02:39:16,144:INFO:Importing untrained model
2024-07-31 02:39:16,152:INFO:Gradient Boosting Classifier Imported successfully
2024-07-31 02:39:16,152:INFO:Starting cross validation
2024-07-31 02:39:16,152:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:39:16,200:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,205:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,206:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,219:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,335:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,365:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,376:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,386:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,527:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,527:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,688:ERROR:create_model() for gbc raised an exception or returned all 0.0:
2024-07-31 02:39:16,690:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 665, in fit
    y = self._encode_y(y=y, sample_weight=None)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 1520, in _encode_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 665, in fit
    y = self._encode_y(y=y, sample_weight=None)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 1520, in _encode_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


2024-07-31 02:39:16,690:INFO:Initializing Linear Discriminant Analysis
2024-07-31 02:39:16,690:INFO:Total runtime is 1.5135693232218421 minutes
2024-07-31 02:39:16,690:INFO:SubProcess create_model() called ==================================
2024-07-31 02:39:16,690:INFO:Initializing create_model()
2024-07-31 02:39:16,690:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:16,690:INFO:Checking exceptions
2024-07-31 02:39:16,690:INFO:Importing libraries
2024-07-31 02:39:16,690:INFO:Copying training dataset
2024-07-31 02:39:16,700:INFO:Defining folds
2024-07-31 02:39:16,700:INFO:Declaring metric variables
2024-07-31 02:39:16,700:INFO:Importing untrained model
2024-07-31 02:39:16,700:INFO:Linear Discriminant Analysis Imported successfully
2024-07-31 02:39:16,700:INFO:Starting cross validation
2024-07-31 02:39:16,700:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:39:16,761:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,764:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,768:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,789:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,922:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,922:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,940:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:16,942:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:17,013:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:17,018:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,021:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:17,026:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,026:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,028:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:17,032:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,033:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,034:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:17,035:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,038:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,047:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,048:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,050:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,054:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,054:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,061:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,061:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:17,063:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,063:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:17,063:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,071:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,073:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,073:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:17,073:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,091:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:17,093:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,093:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:17,093:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:17,093:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,124:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:17,222:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:17,255:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:17,265:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:17,275:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:17,303:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:17,305:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,314:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,316:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,336:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,336:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:17,344:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:17,346:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,346:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,356:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:17,356:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,356:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,366:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,366:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:17,366:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:17,366:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,376:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,376:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,384:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,384:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:17,386:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,386:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,397:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,397:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:17,405:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,407:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,423:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,423:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:17,428:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,429:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:17,498:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:17,528:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:17,569:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:17,569:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,579:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,579:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,589:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,589:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:17,589:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,597:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:17,599:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,609:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,617:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:17,628:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,629:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:17,634:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:17,639:INFO:Calculating mean and std
2024-07-31 02:39:17,641:INFO:Creating metrics dataframe
2024-07-31 02:39:17,649:INFO:Uploading results into container
2024-07-31 02:39:17,651:INFO:Uploading model into container now
2024-07-31 02:39:17,652:INFO:_master_model_container: 7
2024-07-31 02:39:17,652:INFO:_display_container: 2
2024-07-31 02:39:17,653:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-31 02:39:17,653:INFO:create_model() successfully completed......................................
2024-07-31 02:39:17,872:INFO:SubProcess create_model() end ==================================
2024-07-31 02:39:17,872:INFO:Creating metrics dataframe
2024-07-31 02:39:17,882:INFO:Initializing Extra Trees Classifier
2024-07-31 02:39:17,882:INFO:Total runtime is 1.5334366758664446 minutes
2024-07-31 02:39:17,882:INFO:SubProcess create_model() called ==================================
2024-07-31 02:39:17,882:INFO:Initializing create_model()
2024-07-31 02:39:17,882:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:17,882:INFO:Checking exceptions
2024-07-31 02:39:17,882:INFO:Importing libraries
2024-07-31 02:39:17,882:INFO:Copying training dataset
2024-07-31 02:39:17,892:INFO:Defining folds
2024-07-31 02:39:17,892:INFO:Declaring metric variables
2024-07-31 02:39:17,892:INFO:Importing untrained model
2024-07-31 02:39:17,900:INFO:Extra Trees Classifier Imported successfully
2024-07-31 02:39:17,900:INFO:Starting cross validation
2024-07-31 02:39:17,902:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:39:17,968:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:17,970:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:17,973:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:17,982:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:18,497:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:18,517:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:18,517:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:18,548:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:18,812:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:18,813:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:18,817:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:18,817:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:18,824:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:18,825:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:18,831:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:18,833:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:18,838:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:18,839:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:18,839:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:18,840:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:18,842:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:18,846:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:18,846:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:18,847:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:18,850:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:18,853:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:18,853:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:18,861:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:18,861:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:18,871:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:18,871:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:18,871:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:18,881:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:18,881:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:18,871:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:18,891:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:18,891:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:18,901:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:18,921:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:18,950:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:19,404:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:19,435:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:19,437:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:19,637:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:19,646:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:19,647:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:19,651:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:19,651:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:19,658:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:19,658:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:19,658:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:19,669:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:19,669:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:19,669:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:19,679:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:19,679:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:19,679:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:19,689:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:19,710:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:19,718:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:19,811:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:19,815:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:19,823:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:19,831:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:19,837:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:19,838:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:19,846:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:19,950:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:19,952:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:19,962:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:19,972:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:19,980:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:19,982:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:19,982:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:20,181:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:20,328:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:20,328:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:20,328:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:20,328:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:20,328:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:20,344:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:20,344:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:20,344:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:20,344:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:20,359:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:20,359:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:20,359:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:20,359:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:20,375:INFO:Calculating mean and std
2024-07-31 02:39:20,375:INFO:Creating metrics dataframe
2024-07-31 02:39:20,381:INFO:Uploading results into container
2024-07-31 02:39:20,381:INFO:Uploading model into container now
2024-07-31 02:39:20,381:INFO:_master_model_container: 8
2024-07-31 02:39:20,381:INFO:_display_container: 2
2024-07-31 02:39:20,381:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=8048, verbose=0,
                     warm_start=False)
2024-07-31 02:39:20,381:INFO:create_model() successfully completed......................................
2024-07-31 02:39:20,582:INFO:SubProcess create_model() end ==================================
2024-07-31 02:39:20,582:INFO:Creating metrics dataframe
2024-07-31 02:39:20,582:INFO:Initializing Light Gradient Boosting Machine
2024-07-31 02:39:20,582:INFO:Total runtime is 1.5784411748250322 minutes
2024-07-31 02:39:20,582:INFO:SubProcess create_model() called ==================================
2024-07-31 02:39:20,582:INFO:Initializing create_model()
2024-07-31 02:39:20,582:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:20,582:INFO:Checking exceptions
2024-07-31 02:39:20,582:INFO:Importing libraries
2024-07-31 02:39:20,582:INFO:Copying training dataset
2024-07-31 02:39:20,598:INFO:Defining folds
2024-07-31 02:39:20,598:INFO:Declaring metric variables
2024-07-31 02:39:20,598:INFO:Importing untrained model
2024-07-31 02:39:20,598:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-31 02:39:20,598:INFO:Starting cross validation
2024-07-31 02:39:20,598:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:39:20,652:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:20,652:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:20,685:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:20,689:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:21,981:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:21,982:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:21,983:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:21,991:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:22,100:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:22,103:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:22,103:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:22,107:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:22,110:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:22,115:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:22,115:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:22,118:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:22,121:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:22,123:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:22,124:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:22,124:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:22,128:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:22,129:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:22,129:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:22,130:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:22,132:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:22,137:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:22,144:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:22,144:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:22,145:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:22,150:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:22,151:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:22,163:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:22,181:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:22,160:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:22,182:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:22,182:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:22,188:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:22,188:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:22,211:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:22,872:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:22,879:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:23,011:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:23,018:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,034:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,039:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:23,044:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,053:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,061:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,063:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,070:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:23,071:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:23,072:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:23,073:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:23,077:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:23,081:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:23,091:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:23,098:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:23,112:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:23,210:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:23,215:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,230:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,246:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:23,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,259:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:23,260:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:23,267:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:23,317:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:23,335:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,348:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,348:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,358:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:23,358:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:23,368:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:23,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:23,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:23,565:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:23,580:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,580:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 02:39:23,587:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,587:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,587:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,587:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,605:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:23,609:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:23,609:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:23,612:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:23,612:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:23,613:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:23,616:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:23,619:INFO:Calculating mean and std
2024-07-31 02:39:23,621:INFO:Creating metrics dataframe
2024-07-31 02:39:23,636:INFO:Uploading results into container
2024-07-31 02:39:23,638:INFO:Uploading model into container now
2024-07-31 02:39:23,639:INFO:_master_model_container: 9
2024-07-31 02:39:23,640:INFO:_display_container: 2
2024-07-31 02:39:23,641:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8048, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-31 02:39:23,642:INFO:create_model() successfully completed......................................
2024-07-31 02:39:23,842:INFO:SubProcess create_model() end ==================================
2024-07-31 02:39:23,843:INFO:Creating metrics dataframe
2024-07-31 02:39:23,855:INFO:Initializing Dummy Classifier
2024-07-31 02:39:23,855:INFO:Total runtime is 1.6329948306083675 minutes
2024-07-31 02:39:23,856:INFO:SubProcess create_model() called ==================================
2024-07-31 02:39:23,856:INFO:Initializing create_model()
2024-07-31 02:39:23,856:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002894780B2E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:23,856:INFO:Checking exceptions
2024-07-31 02:39:23,856:INFO:Importing libraries
2024-07-31 02:39:23,856:INFO:Copying training dataset
2024-07-31 02:39:23,863:INFO:Defining folds
2024-07-31 02:39:23,863:INFO:Declaring metric variables
2024-07-31 02:39:23,864:INFO:Importing untrained model
2024-07-31 02:39:23,865:INFO:Dummy Classifier Imported successfully
2024-07-31 02:39:23,865:INFO:Starting cross validation
2024-07-31 02:39:23,868:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 02:39:23,903:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:23,903:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:23,903:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:23,919:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:23,988:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:23,990:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:24,018:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:24,070:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:24,080:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,088:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,091:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,091:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:24,101:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,101:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:24,101:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,111:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,121:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:24,121:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,129:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:24,131:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,131:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,131:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,131:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:24,139:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,141:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,141:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,161:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:24,179:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:24,181:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,181:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:24,191:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,200:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:24,200:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,210:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,216:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,223:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,224:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:24,231:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,237:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:24,271:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:24,312:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:24,312:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:24,353:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:24,393:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:24,403:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,403:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,421:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,432:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:24,441:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,448:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,452:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,452:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:24,454:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:24,454:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,472:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:24,474:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,474:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,474:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:24,484:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,484:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,484:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:24,484:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,484:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,494:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,494:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:24,504:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,504:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:24,530:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:24,534:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,561:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,571:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,583:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,584:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:24,589:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,596:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:24,656:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:24,676:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:24,676:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,691:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,695:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,699:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:24,706:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,714:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 02:39:24,718:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,729:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,736:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 02:39:24,743:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,743:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 02:39:24,748:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 02:39:24,751:INFO:Calculating mean and std
2024-07-31 02:39:24,753:INFO:Creating metrics dataframe
2024-07-31 02:39:24,758:INFO:Uploading results into container
2024-07-31 02:39:24,759:INFO:Uploading model into container now
2024-07-31 02:39:24,760:INFO:_master_model_container: 10
2024-07-31 02:39:24,760:INFO:_display_container: 2
2024-07-31 02:39:24,760:INFO:DummyClassifier(constant=None, random_state=8048, strategy='prior')
2024-07-31 02:39:24,760:INFO:create_model() successfully completed......................................
2024-07-31 02:39:24,960:INFO:SubProcess create_model() end ==================================
2024-07-31 02:39:24,960:INFO:Creating metrics dataframe
2024-07-31 02:39:24,982:INFO:Initializing create_model()
2024-07-31 02:39:24,983:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000028940506C50>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 02:39:24,984:INFO:Checking exceptions
2024-07-31 02:39:24,986:INFO:Importing libraries
2024-07-31 02:39:24,987:INFO:Copying training dataset
2024-07-31 02:39:24,997:INFO:Defining folds
2024-07-31 02:39:24,998:INFO:Declaring metric variables
2024-07-31 02:39:24,998:INFO:Importing untrained model
2024-07-31 02:39:24,998:INFO:Declaring custom model
2024-07-31 02:39:25,001:INFO:K Neighbors Classifier Imported successfully
2024-07-31 02:39:25,005:INFO:Cross validation set to False
2024-07-31 02:39:25,006:INFO:Fitting Model
2024-07-31 02:39:25,031:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 02:39:25,233:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-31 02:39:25,233:INFO:create_model() successfully completed......................................
2024-07-31 02:39:25,479:INFO:_master_model_container: 10
2024-07-31 02:39:25,480:INFO:_display_container: 2
2024-07-31 02:39:25,480:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-31 02:39:25,480:INFO:compare_models() successfully completed......................................
2024-07-31 02:39:25,879:INFO:Initializing save_model()
2024-07-31 02:39:25,879:INFO:save_model(model=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), model_name=trained_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Lenovo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Strike Price', 'Call-Price',
                                             'Call-Change in Price (%)',
                                             'Call-Open Interest',
                                             'Call-Volume',
                                             'Call-Implied V...
                 TransformerWrapper(exclude=None, include=['Underlying Name'],
                                    transformer=OneHotEncoder(cols=['Underlying '
                                                                    'Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-31 02:39:25,880:INFO:Adding model into prep_pipe
2024-07-31 02:39:25,914:INFO:trained_model.pkl saved in current working directory
2024-07-31 02:39:25,954:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Strike Price', 'Call-Price',
                                             'Call-Change in Price (%)',
                                             'Call-Open Interest',
                                             'Call-Volume',
                                             'Call-Implied Volatility',
                                             'Greeks: Call Delta',
                                             'Greeks: Cal...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2024-07-31 02:39:25,954:INFO:save_model() successfully completed......................................
2024-07-31 03:48:46,780:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 03:48:46,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 03:48:46,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 03:48:46,823:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 03:54:11,201:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\typeset_relations.py:117: UserWarning: Parsing dates in DD/MM/YYYY format when dayfirst=False (the default) was specified. This may lead to inconsistently parsed dates! Specify a format to ensure consistent parsing.
  return pd.to_datetime(series)

2024-07-31 03:54:11,296:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\typeset_relations.py:117: UserWarning: Parsing dates in DD/MM/YYYY format when dayfirst=False (the default) was specified. This may lead to inconsistently parsed dates! Specify a format to ensure consistent parsing.
  return pd.to_datetime(series)

2024-07-31 03:54:11,310:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\typeset_relations.py:117: UserWarning: Parsing dates in DD/MM/YYYY format when dayfirst=False (the default) was specified. This may lead to inconsistently parsed dates! Specify a format to ensure consistent parsing.
  return pd.to_datetime(series)

2024-07-31 03:54:11,831:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\typeset_relations.py:117: UserWarning: Parsing dates in DD/MM/YYYY format when dayfirst=False (the default) was specified. This may lead to inconsistently parsed dates! Specify a format to ensure consistent parsing.
  return pd.to_datetime(series)

2024-07-31 03:54:12,088:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\typeset_relations.py:117: UserWarning: Parsing dates in DD/MM/YYYY format when dayfirst=False (the default) was specified. This may lead to inconsistently parsed dates! Specify a format to ensure consistent parsing.
  return pd.to_datetime(series)

2024-07-31 03:54:12,098:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\typeset_relations.py:117: UserWarning: Parsing dates in DD/MM/YYYY format when dayfirst=False (the default) was specified. This may lead to inconsistently parsed dates! Specify a format to ensure consistent parsing.
  return pd.to_datetime(series)

2024-07-31 03:57:33,741:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\typeset_relations.py:117: UserWarning: Parsing dates in DD/MM/YYYY format when dayfirst=False (the default) was specified. This may lead to inconsistently parsed dates! Specify a format to ensure consistent parsing.
  return pd.to_datetime(series)

2024-07-31 03:57:33,894:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\typeset_relations.py:117: UserWarning: Parsing dates in DD/MM/YYYY format when dayfirst=False (the default) was specified. This may lead to inconsistently parsed dates! Specify a format to ensure consistent parsing.
  return pd.to_datetime(series)

2024-07-31 03:57:33,905:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\typeset_relations.py:117: UserWarning: Parsing dates in DD/MM/YYYY format when dayfirst=False (the default) was specified. This may lead to inconsistently parsed dates! Specify a format to ensure consistent parsing.
  return pd.to_datetime(series)

2024-07-31 03:57:33,935:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\typeset_relations.py:117: UserWarning: Parsing dates in DD/MM/YYYY format when dayfirst=False (the default) was specified. This may lead to inconsistently parsed dates! Specify a format to ensure consistent parsing.
  return pd.to_datetime(series)

2024-07-31 03:57:34,014:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\typeset_relations.py:117: UserWarning: Parsing dates in DD/MM/YYYY format when dayfirst=False (the default) was specified. This may lead to inconsistently parsed dates! Specify a format to ensure consistent parsing.
  return pd.to_datetime(series)

2024-07-31 03:57:34,016:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\typeset_relations.py:117: UserWarning: Parsing dates in DD/MM/YYYY format when dayfirst=False (the default) was specified. This may lead to inconsistently parsed dates! Specify a format to ensure consistent parsing.
  return pd.to_datetime(series)

2024-07-31 03:57:34,135:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\ydata_profiling\model\typeset_relations.py:117: UserWarning: Parsing dates in DD/MM/YYYY format when dayfirst=False (the default) was specified. This may lead to inconsistently parsed dates! Specify a format to ensure consistent parsing.
  return pd.to_datetime(series)

2024-07-31 04:07:02,880:INFO:PyCaret ClassificationExperiment
2024-07-31 04:07:02,888:INFO:Logging name: clf-default-name
2024-07-31 04:07:02,888:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-31 04:07:02,888:INFO:version 3.3.2
2024-07-31 04:07:02,888:INFO:Initializing setup()
2024-07-31 04:07:02,888:INFO:self.USI: 7673
2024-07-31 04:07:02,888:INFO:self._variable_keys: {'pipeline', 'seed', 'logging_param', 'gpu_n_jobs_param', 'n_jobs_param', 'fold_generator', 'y', 'X_train', 'target_param', 'X_test', 'y_train', 'exp_id', 'idx', 'html_param', 'fold_shuffle_param', 'is_multiclass', 'fix_imbalance', 'gpu_param', '_available_plots', 'X', 'USI', 'fold_groups_param', 'memory', '_ml_usecase', 'log_plots_param', 'exp_name_log', 'data', 'y_test'}
2024-07-31 04:07:02,971:INFO:Checking environment
2024-07-31 04:07:03,020:INFO:python_version: 3.10.0
2024-07-31 04:07:03,021:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2024-07-31 04:07:03,051:INFO:machine: AMD64
2024-07-31 04:07:03,060:INFO:platform: Windows-10-10.0.19045-SP0
2024-07-31 04:07:03,150:INFO:Memory: svmem(total=3504250880, available=637059072, percent=81.8, used=2867191808, free=637059072)
2024-07-31 04:07:03,150:INFO:Physical Core: 2
2024-07-31 04:07:03,150:INFO:Logical Core: 4
2024-07-31 04:07:03,150:INFO:Checking libraries
2024-07-31 04:07:03,153:INFO:System:
2024-07-31 04:07:03,154:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2024-07-31 04:07:03,154:INFO:executable: D:\Desktop\autoanalysis\autoanalysis\Scripts\python.exe
2024-07-31 04:07:03,154:INFO:   machine: Windows-10-10.0.19045-SP0
2024-07-31 04:07:03,154:INFO:PyCaret required dependencies:
2024-07-31 04:07:06,310:INFO:                 pip: 21.2.3
2024-07-31 04:07:06,310:INFO:          setuptools: 57.4.0
2024-07-31 04:07:06,310:INFO:             pycaret: 3.3.2
2024-07-31 04:07:06,310:INFO:             IPython: 8.12.3
2024-07-31 04:07:06,310:INFO:          ipywidgets: 8.1.3
2024-07-31 04:07:06,310:INFO:                tqdm: 4.66.4
2024-07-31 04:07:06,310:INFO:               numpy: 1.26.4
2024-07-31 04:07:06,310:INFO:              pandas: 1.5.3
2024-07-31 04:07:06,310:INFO:              jinja2: 3.1.4
2024-07-31 04:07:06,310:INFO:               scipy: 1.11.4
2024-07-31 04:07:06,310:INFO:              joblib: 1.3.2
2024-07-31 04:07:06,310:INFO:             sklearn: 1.4.2
2024-07-31 04:07:06,310:INFO:                pyod: 2.0.1
2024-07-31 04:07:06,310:INFO:            imblearn: 0.12.3
2024-07-31 04:07:06,310:INFO:   category_encoders: 2.6.3
2024-07-31 04:07:06,310:INFO:            lightgbm: 4.5.0
2024-07-31 04:07:06,310:INFO:               numba: 0.60.0
2024-07-31 04:07:06,310:INFO:            requests: 2.32.3
2024-07-31 04:07:06,310:INFO:          matplotlib: 3.7.5
2024-07-31 04:07:06,310:INFO:          scikitplot: 0.3.7
2024-07-31 04:07:06,310:INFO:         yellowbrick: 1.5
2024-07-31 04:07:06,310:INFO:              plotly: 5.23.0
2024-07-31 04:07:06,310:INFO:    plotly-resampler: Not installed
2024-07-31 04:07:06,310:INFO:             kaleido: 0.2.1
2024-07-31 04:07:06,310:INFO:           schemdraw: 0.15
2024-07-31 04:07:06,310:INFO:         statsmodels: 0.14.2
2024-07-31 04:07:06,310:INFO:              sktime: 0.26.0
2024-07-31 04:07:06,310:INFO:               tbats: 1.1.3
2024-07-31 04:07:06,310:INFO:            pmdarima: 2.0.4
2024-07-31 04:07:06,319:INFO:              psutil: 6.0.0
2024-07-31 04:07:06,319:INFO:          markupsafe: 2.1.5
2024-07-31 04:07:06,320:INFO:             pickle5: Not installed
2024-07-31 04:07:06,320:INFO:         cloudpickle: 3.0.0
2024-07-31 04:07:06,321:INFO:         deprecation: 2.1.0
2024-07-31 04:07:06,322:INFO:              xxhash: 3.4.1
2024-07-31 04:07:06,323:INFO:           wurlitzer: Not installed
2024-07-31 04:07:06,323:INFO:PyCaret optional dependencies:
2024-07-31 04:07:06,451:INFO:                shap: Not installed
2024-07-31 04:07:06,451:INFO:           interpret: Not installed
2024-07-31 04:07:06,451:INFO:                umap: Not installed
2024-07-31 04:07:06,451:INFO:     ydata_profiling: 4.9.0
2024-07-31 04:07:06,451:INFO:  explainerdashboard: Not installed
2024-07-31 04:07:06,451:INFO:             autoviz: Not installed
2024-07-31 04:07:06,451:INFO:           fairlearn: Not installed
2024-07-31 04:07:06,451:INFO:          deepchecks: Not installed
2024-07-31 04:07:06,451:INFO:             xgboost: Not installed
2024-07-31 04:07:06,451:INFO:            catboost: Not installed
2024-07-31 04:07:06,451:INFO:              kmodes: Not installed
2024-07-31 04:07:06,451:INFO:             mlxtend: Not installed
2024-07-31 04:07:06,451:INFO:       statsforecast: Not installed
2024-07-31 04:07:06,451:INFO:        tune_sklearn: Not installed
2024-07-31 04:07:06,451:INFO:                 ray: Not installed
2024-07-31 04:07:06,451:INFO:            hyperopt: Not installed
2024-07-31 04:07:06,451:INFO:              optuna: Not installed
2024-07-31 04:07:06,451:INFO:               skopt: Not installed
2024-07-31 04:07:06,451:INFO:              mlflow: Not installed
2024-07-31 04:07:06,451:INFO:              gradio: Not installed
2024-07-31 04:07:06,451:INFO:             fastapi: Not installed
2024-07-31 04:07:06,451:INFO:             uvicorn: Not installed
2024-07-31 04:07:06,451:INFO:              m2cgen: Not installed
2024-07-31 04:07:06,451:INFO:           evidently: Not installed
2024-07-31 04:07:06,451:INFO:               fugue: Not installed
2024-07-31 04:07:06,451:INFO:           streamlit: 1.37.0
2024-07-31 04:07:06,451:INFO:             prophet: Not installed
2024-07-31 04:07:06,451:INFO:None
2024-07-31 04:07:06,451:INFO:Set up data.
2024-07-31 04:07:06,996:INFO:Set up folding strategy.
2024-07-31 04:07:06,996:INFO:Set up train/test split.
2024-07-31 04:07:07,480:INFO:Set up index.
2024-07-31 04:07:07,501:INFO:Assigning column types.
2024-07-31 04:07:07,513:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-31 04:07:07,700:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-31 04:07:08,159:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 04:07:08,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:08,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:09,195:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-31 04:07:09,199:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 04:07:09,274:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:09,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:09,274:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-31 04:07:09,401:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 04:07:09,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:09,511:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:09,641:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 04:07:09,719:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:09,719:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:09,720:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-31 04:07:09,920:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:09,920:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:10,450:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:10,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:10,593:INFO:Preparing preprocessing pipeline...
2024-07-31 04:07:10,668:INFO:Set up label encoding.
2024-07-31 04:07:10,668:INFO:Set up simple imputation.
2024-07-31 04:07:10,668:INFO:Set up encoding of categorical features.
2024-07-31 04:07:10,683:INFO:Set up column name cleaning.
2024-07-31 04:07:13,920:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py:249: UserWarning: Persisting input arguments took 1.87s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2024-07-31 04:07:14,847:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:07:15,740:INFO:Finished creating preprocessing pipeline.
2024-07-31 04:07:16,181:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Lenovo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Strike Price', 'Call-Price',
                                             'Call-Change in Price (%)',
                                             'Call-Open Interest',
                                             'Call-Volume',
                                             'Call-Implied V...
                 TransformerWrapper(exclude=None, include=['Underlying Name'],
                                    transformer=OneHotEncoder(cols=['Underlying '
                                                                    'Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-31 04:07:16,181:INFO:Creating final display dataframe.
2024-07-31 04:07:17,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:07:18,020:INFO:Setup _display_container:                     Description             Value
0                    Session id              1677
1                        Target   Expiration Date
2                   Target type        Multiclass
3                Target mapping     29-08-2024: 0
4           Original data shape          (16, 24)
5        Transformed data shape          (16, 22)
6   Transformed train set shape          (11, 22)
7    Transformed test set shape           (5, 22)
8              Numeric features                22
9          Categorical features                 1
10     Rows with missing values            100.0%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              7673
2024-07-31 04:07:20,018:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:20,019:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:20,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:20,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 04:07:20,320:INFO:setup() successfully completed in 18.86s...............
2024-07-31 04:07:26,084:INFO:Initializing compare_models()
2024-07-31 04:07:26,089:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-31 04:07:26,091:INFO:Checking exceptions
2024-07-31 04:07:26,238:INFO:Preparing display monitor
2024-07-31 04:07:26,508:INFO:Initializing Logistic Regression
2024-07-31 04:07:26,509:INFO:Total runtime is 1.663366953531901e-05 minutes
2024-07-31 04:07:26,511:INFO:SubProcess create_model() called ==================================
2024-07-31 04:07:26,512:INFO:Initializing create_model()
2024-07-31 04:07:26,512:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:07:26,512:INFO:Checking exceptions
2024-07-31 04:07:26,512:INFO:Importing libraries
2024-07-31 04:07:26,512:INFO:Copying training dataset
2024-07-31 04:07:26,542:INFO:Defining folds
2024-07-31 04:07:26,542:INFO:Declaring metric variables
2024-07-31 04:07:26,542:INFO:Importing untrained model
2024-07-31 04:07:26,549:INFO:Logistic Regression Imported successfully
2024-07-31 04:07:26,555:INFO:Starting cross validation
2024-07-31 04:07:26,566:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:08:51,112:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:51,114:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:51,549:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:51,554:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:51,565:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:51,576:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:51,709:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:51,711:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:51,820:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 04:08:51,985:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_logistic.py", line 1246, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


2024-07-31 04:08:51,986:INFO:Initializing create_model()
2024-07-31 04:08:51,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:08:51,986:INFO:Checking exceptions
2024-07-31 04:08:51,986:INFO:Importing libraries
2024-07-31 04:08:51,986:INFO:Copying training dataset
2024-07-31 04:08:52,013:INFO:Defining folds
2024-07-31 04:08:52,013:INFO:Declaring metric variables
2024-07-31 04:08:52,020:INFO:Importing untrained model
2024-07-31 04:08:52,022:INFO:Logistic Regression Imported successfully
2024-07-31 04:08:52,023:INFO:Starting cross validation
2024-07-31 04:08:52,027:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:08:52,132:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,170:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,181:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,181:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,341:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,342:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,417:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,443:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,543:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,545:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,660:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-07-31 04:08:52,663:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_logistic.py", line 1246, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_logistic.py", line 1246, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


2024-07-31 04:08:52,665:INFO:Initializing K Neighbors Classifier
2024-07-31 04:08:52,665:INFO:Total runtime is 1.4359442234039306 minutes
2024-07-31 04:08:52,665:INFO:SubProcess create_model() called ==================================
2024-07-31 04:08:52,666:INFO:Initializing create_model()
2024-07-31 04:08:52,666:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:08:52,666:INFO:Checking exceptions
2024-07-31 04:08:52,666:INFO:Importing libraries
2024-07-31 04:08:52,666:INFO:Copying training dataset
2024-07-31 04:08:52,676:INFO:Defining folds
2024-07-31 04:08:52,676:INFO:Declaring metric variables
2024-07-31 04:08:52,676:INFO:Importing untrained model
2024-07-31 04:08:52,677:INFO:K Neighbors Classifier Imported successfully
2024-07-31 04:08:52,677:INFO:Starting cross validation
2024-07-31 04:08:52,681:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:08:52,749:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,750:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,750:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,770:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,890:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,917:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,920:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:52,929:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:55,993:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:55,994:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:55,994:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:56,000:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:56,020:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,020:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,020:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,020:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,064:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,066:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,072:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,072:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,080:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,084:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,090:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,095:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,096:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:56,096:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,096:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:56,096:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,096:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:56,100:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,101:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,102:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:56,102:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,103:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,104:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,143:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:56,149:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:56,151:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:56,327:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:56,367:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:56,387:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:56,391:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:56,440:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:56,450:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,458:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:56,460:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,460:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,468:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,477:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,481:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:56,481:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,481:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:56,481:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,487:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,491:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,491:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,500:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:56,501:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,501:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:56,501:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,501:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,507:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,510:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,510:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,510:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:56,519:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,519:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:56,520:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,528:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,529:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:56,531:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,550:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:56,641:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:56,680:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:56,739:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:56,742:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,754:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,762:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:56,764:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,764:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,773:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,773:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,773:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:56,779:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:56,781:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,785:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,785:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:56,788:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:56,797:INFO:Calculating mean and std
2024-07-31 04:08:56,830:INFO:Creating metrics dataframe
2024-07-31 04:08:56,856:INFO:Uploading results into container
2024-07-31 04:08:56,860:INFO:Uploading model into container now
2024-07-31 04:08:56,862:INFO:_master_model_container: 1
2024-07-31 04:08:56,862:INFO:_display_container: 2
2024-07-31 04:08:56,865:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-31 04:08:56,865:INFO:create_model() successfully completed......................................
2024-07-31 04:08:57,132:INFO:SubProcess create_model() end ==================================
2024-07-31 04:08:57,132:INFO:Creating metrics dataframe
2024-07-31 04:08:57,143:INFO:Initializing Naive Bayes
2024-07-31 04:08:57,143:INFO:Total runtime is 1.5105818986892698 minutes
2024-07-31 04:08:57,143:INFO:SubProcess create_model() called ==================================
2024-07-31 04:08:57,143:INFO:Initializing create_model()
2024-07-31 04:08:57,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:08:57,143:INFO:Checking exceptions
2024-07-31 04:08:57,143:INFO:Importing libraries
2024-07-31 04:08:57,143:INFO:Copying training dataset
2024-07-31 04:08:57,159:INFO:Defining folds
2024-07-31 04:08:57,160:INFO:Declaring metric variables
2024-07-31 04:08:57,160:INFO:Importing untrained model
2024-07-31 04:08:57,160:INFO:Naive Bayes Imported successfully
2024-07-31 04:08:57,160:INFO:Starting cross validation
2024-07-31 04:08:57,160:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:08:57,241:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,250:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,251:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,260:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,382:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,403:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,421:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,435:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,490:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:57,490:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:57,497:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,505:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:57,507:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,507:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,513:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,515:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,516:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,517:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:57,520:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,520:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,520:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,526:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,527:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:57,529:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,529:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,529:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,529:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:57,529:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,541:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,541:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,541:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:57,548:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,550:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,557:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,558:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:57,560:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,582:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,599:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,618:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,720:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,730:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,741:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,742:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,815:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:57,823:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,823:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:57,828:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:57,830:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,830:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,832:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,834:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,840:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,840:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:57,840:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,843:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,843:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,843:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:57,851:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,851:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,860:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,861:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:57,863:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,865:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,872:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,876:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,876:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:57,881:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,883:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:57,883:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,883:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,883:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:57,891:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:57,894:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:57,995:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:58,000:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:58,063:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:58,070:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:58,073:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:58,073:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:58,081:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:58,087:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:58,091:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:58,091:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:58,102:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:58,102:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:58,102:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:58,102:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:58,110:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:58,110:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:58,115:INFO:Calculating mean and std
2024-07-31 04:08:58,117:INFO:Creating metrics dataframe
2024-07-31 04:08:58,121:INFO:Uploading results into container
2024-07-31 04:08:58,121:INFO:Uploading model into container now
2024-07-31 04:08:58,121:INFO:_master_model_container: 2
2024-07-31 04:08:58,121:INFO:_display_container: 2
2024-07-31 04:08:58,121:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-31 04:08:58,121:INFO:create_model() successfully completed......................................
2024-07-31 04:08:58,350:INFO:SubProcess create_model() end ==================================
2024-07-31 04:08:58,350:INFO:Creating metrics dataframe
2024-07-31 04:08:59,263:INFO:Initializing Decision Tree Classifier
2024-07-31 04:08:59,269:INFO:Total runtime is 1.5460170467694598 minutes
2024-07-31 04:08:59,270:INFO:SubProcess create_model() called ==================================
2024-07-31 04:08:59,270:INFO:Initializing create_model()
2024-07-31 04:08:59,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:08:59,270:INFO:Checking exceptions
2024-07-31 04:08:59,270:INFO:Importing libraries
2024-07-31 04:08:59,270:INFO:Copying training dataset
2024-07-31 04:08:59,302:INFO:Defining folds
2024-07-31 04:08:59,302:INFO:Declaring metric variables
2024-07-31 04:08:59,302:INFO:Importing untrained model
2024-07-31 04:08:59,302:INFO:Decision Tree Classifier Imported successfully
2024-07-31 04:08:59,302:INFO:Starting cross validation
2024-07-31 04:08:59,321:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:08:59,419:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:59,421:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:59,421:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:59,441:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:59,750:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:59,750:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:59,750:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:59,761:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:59,870:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:59,880:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:59,881:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:59,881:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:59,889:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:59,893:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:59,900:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:59,904:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:59,904:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:59,910:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:59,913:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:59,913:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:59,913:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:59,914:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:08:59,919:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:59,921:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:59,921:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:59,922:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:59,924:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:59,931:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:59,934:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:59,942:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:59,944:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:59,944:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:08:59,950:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:59,953:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:59,955:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:08:59,962:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:59,963:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:08:59,972:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:59,990:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:08:59,993:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:00,118:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:00,130:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:00,130:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:00,165:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:00,213:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:00,214:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:00,218:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,221:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,229:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:00,230:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,231:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,231:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,241:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,242:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,247:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,249:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:00,249:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:00,249:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:00,250:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:00,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:00,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:00,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:00,262:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,262:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:00,262:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:00,272:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:00,273:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,283:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,292:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:00,292:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:00,292:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:00,292:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:00,300:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:00,397:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:00,401:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:00,473:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:00,479:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,480:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:00,485:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,489:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,496:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,500:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,509:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:00,510:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:00,510:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:00,515:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:00,520:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:00,521:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:00,525:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:00,539:INFO:Calculating mean and std
2024-07-31 04:09:00,542:INFO:Creating metrics dataframe
2024-07-31 04:09:00,553:INFO:Uploading results into container
2024-07-31 04:09:00,567:INFO:Uploading model into container now
2024-07-31 04:09:00,570:INFO:_master_model_container: 3
2024-07-31 04:09:00,570:INFO:_display_container: 2
2024-07-31 04:09:00,570:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1677, splitter='best')
2024-07-31 04:09:00,570:INFO:create_model() successfully completed......................................
2024-07-31 04:09:00,796:INFO:SubProcess create_model() end ==================================
2024-07-31 04:09:00,796:INFO:Creating metrics dataframe
2024-07-31 04:09:00,804:INFO:Initializing SVM - Linear Kernel
2024-07-31 04:09:00,804:INFO:Total runtime is 1.57158594528834 minutes
2024-07-31 04:09:00,809:INFO:SubProcess create_model() called ==================================
2024-07-31 04:09:00,809:INFO:Initializing create_model()
2024-07-31 04:09:00,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:09:00,809:INFO:Checking exceptions
2024-07-31 04:09:00,809:INFO:Importing libraries
2024-07-31 04:09:00,809:INFO:Copying training dataset
2024-07-31 04:09:00,813:INFO:Defining folds
2024-07-31 04:09:00,819:INFO:Declaring metric variables
2024-07-31 04:09:00,819:INFO:Importing untrained model
2024-07-31 04:09:00,820:INFO:SVM - Linear Kernel Imported successfully
2024-07-31 04:09:00,820:INFO:Starting cross validation
2024-07-31 04:09:00,820:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:09:00,912:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:00,913:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:00,913:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:00,940:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:02,360:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:02,376:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:02,381:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:02,381:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:02,566:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:02,575:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:02,710:WARNING:create_model() for svm raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 04:09:02,711:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 658, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 04:09:02,712:INFO:Initializing create_model()
2024-07-31 04:09:02,712:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:09:02,712:INFO:Checking exceptions
2024-07-31 04:09:02,712:INFO:Importing libraries
2024-07-31 04:09:02,712:INFO:Copying training dataset
2024-07-31 04:09:02,730:INFO:Defining folds
2024-07-31 04:09:02,731:INFO:Declaring metric variables
2024-07-31 04:09:02,731:INFO:Importing untrained model
2024-07-31 04:09:02,732:INFO:SVM - Linear Kernel Imported successfully
2024-07-31 04:09:02,733:INFO:Starting cross validation
2024-07-31 04:09:02,734:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:09:02,800:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:02,800:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:02,811:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:02,822:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:02,950:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:02,950:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:02,985:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:03,014:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:03,146:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:03,160:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:03,319:ERROR:create_model() for svm raised an exception or returned all 0.0:
2024-07-31 04:09:03,321:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 658, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 658, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 04:09:03,323:INFO:Initializing Ridge Classifier
2024-07-31 04:09:03,323:INFO:Total runtime is 1.6135832786560056 minutes
2024-07-31 04:09:03,323:INFO:SubProcess create_model() called ==================================
2024-07-31 04:09:03,324:INFO:Initializing create_model()
2024-07-31 04:09:03,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:09:03,324:INFO:Checking exceptions
2024-07-31 04:09:03,324:INFO:Importing libraries
2024-07-31 04:09:03,324:INFO:Copying training dataset
2024-07-31 04:09:03,341:INFO:Defining folds
2024-07-31 04:09:03,341:INFO:Declaring metric variables
2024-07-31 04:09:03,341:INFO:Importing untrained model
2024-07-31 04:09:03,345:INFO:Ridge Classifier Imported successfully
2024-07-31 04:09:03,345:INFO:Starting cross validation
2024-07-31 04:09:03,350:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:09:03,483:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:03,483:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:03,497:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:03,510:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:05,339:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:05,345:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:05,345:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:05,371:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:05,508:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:05,510:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:05,510:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:05,513:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,513:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,520:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,520:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,520:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,520:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,534:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,534:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,534:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,539:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,540:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,540:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:05,540:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,540:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,540:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:05,540:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,540:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,540:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:05,540:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:05,553:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,563:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,563:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,590:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:05,597:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:05,603:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:05,616:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:05,727:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:05,740:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:05,750:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:05,770:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:05,821:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:05,821:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,832:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,842:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:05,842:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,853:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,853:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,853:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:05,854:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:05,859:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,862:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,862:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,873:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:05,883:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,883:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,892:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:05,892:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,892:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,896:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,896:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:05,899:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,902:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,902:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:05,911:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,911:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:05,914:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,914:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:05,914:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,921:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:05,927:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:06,002:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:06,033:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:06,086:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:06,089:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:06,094:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:06,100:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:06,109:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:06,113:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:06,113:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:06,113:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:06,120:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:06,120:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:06,131:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:06,133:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:06,133:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:06,140:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:06,149:INFO:Calculating mean and std
2024-07-31 04:09:06,152:INFO:Creating metrics dataframe
2024-07-31 04:09:06,163:INFO:Uploading results into container
2024-07-31 04:09:06,163:INFO:Uploading model into container now
2024-07-31 04:09:06,163:INFO:_master_model_container: 4
2024-07-31 04:09:06,163:INFO:_display_container: 2
2024-07-31 04:09:06,163:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1677, solver='auto',
                tol=0.0001)
2024-07-31 04:09:06,163:INFO:create_model() successfully completed......................................
2024-07-31 04:09:06,388:INFO:SubProcess create_model() end ==================================
2024-07-31 04:09:06,388:INFO:Creating metrics dataframe
2024-07-31 04:09:06,400:INFO:Initializing Random Forest Classifier
2024-07-31 04:09:06,400:INFO:Total runtime is 1.6648584683736163 minutes
2024-07-31 04:09:06,400:INFO:SubProcess create_model() called ==================================
2024-07-31 04:09:06,400:INFO:Initializing create_model()
2024-07-31 04:09:06,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:09:06,400:INFO:Checking exceptions
2024-07-31 04:09:06,400:INFO:Importing libraries
2024-07-31 04:09:06,400:INFO:Copying training dataset
2024-07-31 04:09:06,414:INFO:Defining folds
2024-07-31 04:09:06,414:INFO:Declaring metric variables
2024-07-31 04:09:06,414:INFO:Importing untrained model
2024-07-31 04:09:06,414:INFO:Random Forest Classifier Imported successfully
2024-07-31 04:09:06,414:INFO:Starting cross validation
2024-07-31 04:09:06,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:09:06,490:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:06,500:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:06,500:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:06,513:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:07,321:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:07,388:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:07,409:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:07,414:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:07,647:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:07,650:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:07,662:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:07,666:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:07,666:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:07,669:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:07,669:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:07,669:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:07,680:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:07,680:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:07,693:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:07,699:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:07,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:07,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:07,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:07,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:07,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:07,709:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:07,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:07,710:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:07,710:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:07,713:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:07,713:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:07,713:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:07,741:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:07,742:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:07,742:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:07,742:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:07,750:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:07,759:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:07,791:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:08,440:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:08,460:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:08,490:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:08,565:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:08,675:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:08,680:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:08,681:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:08,681:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:08,681:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:08,696:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:08,696:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:08,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:08,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:08,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:08,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:08,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:08,710:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:08,715:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:08,740:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:08,747:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:08,777:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:08,783:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:08,791:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:08,802:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:08,811:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:08,813:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:08,823:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:08,825:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:08,825:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:08,831:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:08,832:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:08,843:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:08,843:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:08,845:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:09,383:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:09,383:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:09,581:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:09,581:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:09,583:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:09,583:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:09,599:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:09,609:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:09,613:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:09,620:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:09,630:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:09,630:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:09,630:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:09,630:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:09,630:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:09,639:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:09,642:INFO:Calculating mean and std
2024-07-31 04:09:09,645:INFO:Creating metrics dataframe
2024-07-31 04:09:09,670:INFO:Uploading results into container
2024-07-31 04:09:09,670:INFO:Uploading model into container now
2024-07-31 04:09:09,674:INFO:_master_model_container: 5
2024-07-31 04:09:09,674:INFO:_display_container: 2
2024-07-31 04:09:09,677:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1677, verbose=0,
                       warm_start=False)
2024-07-31 04:09:09,677:INFO:create_model() successfully completed......................................
2024-07-31 04:09:09,893:INFO:SubProcess create_model() end ==================================
2024-07-31 04:09:09,893:INFO:Creating metrics dataframe
2024-07-31 04:09:09,900:INFO:Initializing Quadratic Discriminant Analysis
2024-07-31 04:09:09,900:INFO:Total runtime is 1.723193569978078 minutes
2024-07-31 04:09:09,900:INFO:SubProcess create_model() called ==================================
2024-07-31 04:09:09,909:INFO:Initializing create_model()
2024-07-31 04:09:09,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:09:09,909:INFO:Checking exceptions
2024-07-31 04:09:09,910:INFO:Importing libraries
2024-07-31 04:09:09,910:INFO:Copying training dataset
2024-07-31 04:09:09,920:INFO:Defining folds
2024-07-31 04:09:09,920:INFO:Declaring metric variables
2024-07-31 04:09:09,920:INFO:Importing untrained model
2024-07-31 04:09:09,920:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-31 04:09:09,920:INFO:Starting cross validation
2024-07-31 04:09:09,920:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:09:09,991:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:10,013:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:10,013:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:10,021:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:10,196:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:10,200:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:10,209:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:10,217:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:10,361:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:11,630:WARNING:create_model() for qda raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 04:09:11,632:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\discriminant_analysis.py", line 905, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 04:09:11,633:INFO:Initializing create_model()
2024-07-31 04:09:11,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:09:11,633:INFO:Checking exceptions
2024-07-31 04:09:11,633:INFO:Importing libraries
2024-07-31 04:09:11,633:INFO:Copying training dataset
2024-07-31 04:09:11,660:INFO:Defining folds
2024-07-31 04:09:11,660:INFO:Declaring metric variables
2024-07-31 04:09:11,661:INFO:Importing untrained model
2024-07-31 04:09:11,663:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-31 04:09:11,663:INFO:Starting cross validation
2024-07-31 04:09:11,665:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:09:11,715:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:11,729:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:11,740:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:11,749:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:11,946:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:11,950:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:11,957:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,017:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,102:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,112:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,218:ERROR:create_model() for qda raised an exception or returned all 0.0:
2024-07-31 04:09:12,219:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\discriminant_analysis.py", line 905, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\discriminant_analysis.py", line 905, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 04:09:12,220:INFO:Initializing Ada Boost Classifier
2024-07-31 04:09:12,220:INFO:Total runtime is 1.7618537386258442 minutes
2024-07-31 04:09:12,220:INFO:SubProcess create_model() called ==================================
2024-07-31 04:09:12,221:INFO:Initializing create_model()
2024-07-31 04:09:12,221:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:09:12,221:INFO:Checking exceptions
2024-07-31 04:09:12,221:INFO:Importing libraries
2024-07-31 04:09:12,221:INFO:Copying training dataset
2024-07-31 04:09:12,230:INFO:Defining folds
2024-07-31 04:09:12,230:INFO:Declaring metric variables
2024-07-31 04:09:12,230:INFO:Importing untrained model
2024-07-31 04:09:12,230:INFO:Ada Boost Classifier Imported successfully
2024-07-31 04:09:12,230:INFO:Starting cross validation
2024-07-31 04:09:12,230:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:09:12,302:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,311:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,311:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,321:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,455:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 04:09:12,463:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 04:09:12,469:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 04:09:12,595:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,600:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,600:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,621:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,716:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:12,717:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:12,720:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:12,720:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:12,723:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:12,726:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:12,730:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:12,730:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:12,737:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:12,737:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:12,739:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:12,740:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:12,740:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:12,748:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:12,749:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:12,750:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:12,752:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:12,752:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:12,756:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:12,757:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:12,760:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:12,769:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:12,757:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:12,780:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:12,784:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:12,780:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:12,791:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:12,797:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:12,805:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,813:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,819:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,825:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,928:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 04:09:12,931:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 04:09:12,945:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 04:09:12,948:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,961:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,968:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:12,974:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 04:09:12,996:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:13,049:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:13,052:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:13,052:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,052:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,063:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:13,070:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,083:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,083:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,092:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,093:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,093:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:13,100:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:13,100:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:13,100:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:13,100:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:13,103:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:13,103:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:13,105:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,110:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,114:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,119:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,124:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:13,124:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:13,129:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,131:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:13,134:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:13,134:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:13,138:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:13,139:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:13,143:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:13,230:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 04:09:13,251:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:13,251:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:13,322:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:13,322:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:13,330:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,330:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,340:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,340:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,351:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,351:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:13,364:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:13,364:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:13,364:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:13,364:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:13,364:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:13,369:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:13,377:INFO:Calculating mean and std
2024-07-31 04:09:13,382:INFO:Creating metrics dataframe
2024-07-31 04:09:13,402:INFO:Uploading results into container
2024-07-31 04:09:13,402:INFO:Uploading model into container now
2024-07-31 04:09:13,402:INFO:_master_model_container: 6
2024-07-31 04:09:13,402:INFO:_display_container: 2
2024-07-31 04:09:13,402:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1677)
2024-07-31 04:09:13,402:INFO:create_model() successfully completed......................................
2024-07-31 04:09:13,661:INFO:SubProcess create_model() end ==================================
2024-07-31 04:09:13,661:INFO:Creating metrics dataframe
2024-07-31 04:09:13,670:INFO:Initializing Gradient Boosting Classifier
2024-07-31 04:09:13,670:INFO:Total runtime is 1.7860262791315713 minutes
2024-07-31 04:09:13,670:INFO:SubProcess create_model() called ==================================
2024-07-31 04:09:13,681:INFO:Initializing create_model()
2024-07-31 04:09:13,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:09:13,681:INFO:Checking exceptions
2024-07-31 04:09:13,682:INFO:Importing libraries
2024-07-31 04:09:13,682:INFO:Copying training dataset
2024-07-31 04:09:13,690:INFO:Defining folds
2024-07-31 04:09:13,690:INFO:Declaring metric variables
2024-07-31 04:09:13,690:INFO:Importing untrained model
2024-07-31 04:09:13,690:INFO:Gradient Boosting Classifier Imported successfully
2024-07-31 04:09:13,699:INFO:Starting cross validation
2024-07-31 04:09:13,700:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:09:13,780:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:13,795:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:13,803:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:13,803:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,073:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,084:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,090:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,100:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,238:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,250:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,354:WARNING:create_model() for gbc raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 04:09:14,356:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 665, in fit
    y = self._encode_y(y=y, sample_weight=None)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 1520, in _encode_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


2024-07-31 04:09:14,357:INFO:Initializing create_model()
2024-07-31 04:09:14,357:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:09:14,357:INFO:Checking exceptions
2024-07-31 04:09:14,357:INFO:Importing libraries
2024-07-31 04:09:14,357:INFO:Copying training dataset
2024-07-31 04:09:14,377:INFO:Defining folds
2024-07-31 04:09:14,377:INFO:Declaring metric variables
2024-07-31 04:09:14,377:INFO:Importing untrained model
2024-07-31 04:09:14,379:INFO:Gradient Boosting Classifier Imported successfully
2024-07-31 04:09:14,380:INFO:Starting cross validation
2024-07-31 04:09:14,380:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:09:14,440:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,450:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,450:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,462:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,623:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,623:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,652:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,670:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,770:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,805:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:14,911:ERROR:create_model() for gbc raised an exception or returned all 0.0:
2024-07-31 04:09:14,913:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 665, in fit
    y = self._encode_y(y=y, sample_weight=None)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 1520, in _encode_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 665, in fit
    y = self._encode_y(y=y, sample_weight=None)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 1520, in _encode_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


2024-07-31 04:09:15,526:INFO:Initializing Linear Discriminant Analysis
2024-07-31 04:09:15,527:INFO:Total runtime is 1.8169810771942136 minutes
2024-07-31 04:09:15,529:INFO:SubProcess create_model() called ==================================
2024-07-31 04:09:15,529:INFO:Initializing create_model()
2024-07-31 04:09:15,529:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:09:15,529:INFO:Checking exceptions
2024-07-31 04:09:15,529:INFO:Importing libraries
2024-07-31 04:09:15,529:INFO:Copying training dataset
2024-07-31 04:09:15,543:INFO:Defining folds
2024-07-31 04:09:15,543:INFO:Declaring metric variables
2024-07-31 04:09:15,543:INFO:Importing untrained model
2024-07-31 04:09:15,543:INFO:Linear Discriminant Analysis Imported successfully
2024-07-31 04:09:15,549:INFO:Starting cross validation
2024-07-31 04:09:15,553:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:09:15,649:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:15,649:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:15,650:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:15,670:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:16,330:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:16,330:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:16,330:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:16,351:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:16,452:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:16,461:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,474:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,481:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:16,482:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:16,482:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:16,482:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,490:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,490:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,492:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,492:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,499:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,499:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,500:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:16,503:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,504:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,504:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,512:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,512:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,521:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,521:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:16,523:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,524:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:16,524:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,524:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,529:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:16,530:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,532:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:16,532:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,553:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:16,560:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:16,571:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:16,700:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:16,716:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:16,747:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:16,760:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:16,801:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:16,810:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,813:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:16,820:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,821:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,830:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,830:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,842:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,842:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:16,842:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,848:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,850:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:16,860:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,860:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,860:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:16,860:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:16,867:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,868:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,870:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,878:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:16,880:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,882:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,890:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:16,890:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,890:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:16,900:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,900:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:16,901:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,901:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:16,906:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:16,988:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:17,013:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:17,063:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:17,072:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:17,079:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:17,089:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:17,092:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:17,097:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:17,099:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:17,099:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:17,104:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:17,104:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:17,114:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:17,121:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:17,121:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:17,122:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:17,129:INFO:Calculating mean and std
2024-07-31 04:09:17,131:INFO:Creating metrics dataframe
2024-07-31 04:09:17,140:INFO:Uploading results into container
2024-07-31 04:09:17,140:INFO:Uploading model into container now
2024-07-31 04:09:17,140:INFO:_master_model_container: 7
2024-07-31 04:09:17,140:INFO:_display_container: 2
2024-07-31 04:09:17,143:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-31 04:09:17,143:INFO:create_model() successfully completed......................................
2024-07-31 04:09:17,413:INFO:SubProcess create_model() end ==================================
2024-07-31 04:09:17,413:INFO:Creating metrics dataframe
2024-07-31 04:09:17,420:INFO:Initializing Extra Trees Classifier
2024-07-31 04:09:17,420:INFO:Total runtime is 1.8485200484593707 minutes
2024-07-31 04:09:17,428:INFO:SubProcess create_model() called ==================================
2024-07-31 04:09:17,429:INFO:Initializing create_model()
2024-07-31 04:09:17,429:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:09:17,429:INFO:Checking exceptions
2024-07-31 04:09:17,429:INFO:Importing libraries
2024-07-31 04:09:17,430:INFO:Copying training dataset
2024-07-31 04:09:17,432:INFO:Defining folds
2024-07-31 04:09:17,439:INFO:Declaring metric variables
2024-07-31 04:09:17,440:INFO:Importing untrained model
2024-07-31 04:09:17,441:INFO:Extra Trees Classifier Imported successfully
2024-07-31 04:09:17,441:INFO:Starting cross validation
2024-07-31 04:09:17,442:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:09:17,511:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:17,513:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:17,522:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:17,540:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:18,141:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:18,169:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:18,176:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:18,183:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:18,464:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:18,466:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:18,469:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:18,473:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:18,482:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:18,484:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:18,484:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:18,493:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:18,495:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:18,495:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:18,496:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:18,496:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:18,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:18,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:18,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:18,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:18,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:18,512:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:18,512:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:18,512:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:18,512:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:18,520:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:18,521:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:18,522:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:18,522:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:18,531:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:18,532:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:18,543:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:18,558:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:18,559:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:18,561:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:18,571:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:19,111:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:19,119:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:19,130:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:19,182:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:19,318:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:19,322:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:19,324:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:19,332:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:19,334:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:19,342:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:19,342:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:19,345:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:19,350:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:19,354:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:19,354:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:19,354:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:19,358:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:19,365:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:19,380:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:19,385:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:19,385:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:19,392:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:19,404:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:19,404:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:19,413:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:19,415:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:19,419:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:19,477:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:19,482:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:19,490:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:19,500:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:19,510:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:19,510:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:19,514:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:19,877:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:20,041:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:20,043:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:20,052:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:20,062:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:20,066:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:20,066:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:20,070:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:20,070:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:20,070:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:20,070:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:20,081:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:20,085:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:20,086:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:20,089:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:20,100:INFO:Calculating mean and std
2024-07-31 04:09:20,101:INFO:Creating metrics dataframe
2024-07-31 04:09:20,110:INFO:Uploading results into container
2024-07-31 04:09:20,110:INFO:Uploading model into container now
2024-07-31 04:09:20,110:INFO:_master_model_container: 8
2024-07-31 04:09:20,110:INFO:_display_container: 2
2024-07-31 04:09:20,110:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1677, verbose=0,
                     warm_start=False)
2024-07-31 04:09:20,110:INFO:create_model() successfully completed......................................
2024-07-31 04:09:20,330:INFO:SubProcess create_model() end ==================================
2024-07-31 04:09:20,330:INFO:Creating metrics dataframe
2024-07-31 04:09:20,343:INFO:Initializing Light Gradient Boosting Machine
2024-07-31 04:09:20,343:INFO:Total runtime is 1.8972510695457456 minutes
2024-07-31 04:09:20,343:INFO:SubProcess create_model() called ==================================
2024-07-31 04:09:20,349:INFO:Initializing create_model()
2024-07-31 04:09:20,350:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:09:20,350:INFO:Checking exceptions
2024-07-31 04:09:20,350:INFO:Importing libraries
2024-07-31 04:09:20,350:INFO:Copying training dataset
2024-07-31 04:09:20,379:INFO:Defining folds
2024-07-31 04:09:20,380:INFO:Declaring metric variables
2024-07-31 04:09:20,380:INFO:Importing untrained model
2024-07-31 04:09:20,381:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-31 04:09:20,382:INFO:Starting cross validation
2024-07-31 04:09:20,385:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:09:20,470:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:20,490:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:20,492:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:23,639:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:23,640:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:23,750:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:23,750:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:23,767:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:23,780:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:23,784:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:23,787:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:23,790:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:23,799:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:23,800:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:23,800:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:23,808:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:23,840:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:23,850:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:23,863:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:23,863:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:23,864:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:23,869:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:23,895:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:23,900:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:23,901:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:23,914:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:23,922:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:23,922:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:23,928:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:23,931:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:23,964:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:23,970:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:23,973:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:23,982:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:23,999:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:24,002:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:24,002:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:24,012:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:24,068:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:24,783:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:24,971:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:24,982:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:24,994:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,002:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:25,006:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,012:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:25,012:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:25,022:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:25,079:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:25,124:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:25,124:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:25,134:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,150:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,176:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,206:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:25,206:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:25,215:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:25,269:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:25,279:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,289:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:25,289:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,300:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,317:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:25,318:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:25,335:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:25,375:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:25,510:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:25,524:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,550:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,585:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,593:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:25,595:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:25,608:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:25,781:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:25,831:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:25,881:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:25,885:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,889:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,900:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,911:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 04:09:25,911:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:25,911:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:25,911:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,918:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:25,920:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,938:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:25,948:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:25,948:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:25,953:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:25,971:INFO:Calculating mean and std
2024-07-31 04:09:25,974:INFO:Creating metrics dataframe
2024-07-31 04:09:25,990:INFO:Uploading results into container
2024-07-31 04:09:25,992:INFO:Uploading model into container now
2024-07-31 04:09:25,992:INFO:_master_model_container: 9
2024-07-31 04:09:25,992:INFO:_display_container: 2
2024-07-31 04:09:25,996:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1677, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-31 04:09:25,996:INFO:create_model() successfully completed......................................
2024-07-31 04:09:26,221:INFO:SubProcess create_model() end ==================================
2024-07-31 04:09:26,221:INFO:Creating metrics dataframe
2024-07-31 04:09:26,244:INFO:Initializing Dummy Classifier
2024-07-31 04:09:26,244:INFO:Total runtime is 1.9955963214238484 minutes
2024-07-31 04:09:26,244:INFO:SubProcess create_model() called ==================================
2024-07-31 04:09:26,244:INFO:Initializing create_model()
2024-07-31 04:09:26,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027515CF42B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:09:26,244:INFO:Checking exceptions
2024-07-31 04:09:26,244:INFO:Importing libraries
2024-07-31 04:09:26,244:INFO:Copying training dataset
2024-07-31 04:09:26,270:INFO:Defining folds
2024-07-31 04:09:26,270:INFO:Declaring metric variables
2024-07-31 04:09:26,270:INFO:Importing untrained model
2024-07-31 04:09:26,273:INFO:Dummy Classifier Imported successfully
2024-07-31 04:09:26,273:INFO:Starting cross validation
2024-07-31 04:09:26,282:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 04:09:26,363:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,363:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,369:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,385:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,490:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,501:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,519:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,520:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,580:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:26,585:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,585:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:26,591:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,593:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,595:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:26,599:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,599:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,605:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:26,605:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:26,605:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,605:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,609:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:26,612:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:26,612:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:26,613:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,614:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,616:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:26,621:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:26,623:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,628:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:26,629:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:26,633:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,633:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:26,644:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:26,644:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:26,646:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:26,650:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,671:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,687:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,695:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,810:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,822:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,855:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,884:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:26,942:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:26,953:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,953:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:26,953:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,953:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,975:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,980:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:26,993:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:26,994:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:26,999:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:27,000:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:27,004:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:27,007:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:27,009:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:27,010:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:27,011:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:27,013:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:27,013:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:27,014:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:27,019:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:27,024:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:27,024:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:27,027:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:27,031:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:27,031:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:27,033:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:27,035:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:27,037:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:27,044:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:27,138:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:27,150:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:27,205:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:27,212:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:27,220:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:27,220:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 04:09:27,227:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:27,228:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:27,237:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:27,238:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:27,238:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:27,240:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:27,245:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 04:09:27,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:27,255:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 04:09:27,260:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 04:09:27,270:INFO:Calculating mean and std
2024-07-31 04:09:27,278:INFO:Creating metrics dataframe
2024-07-31 04:09:27,284:INFO:Uploading results into container
2024-07-31 04:09:27,289:INFO:Uploading model into container now
2024-07-31 04:09:27,292:INFO:_master_model_container: 10
2024-07-31 04:09:27,293:INFO:_display_container: 2
2024-07-31 04:09:27,294:INFO:DummyClassifier(constant=None, random_state=1677, strategy='prior')
2024-07-31 04:09:27,294:INFO:create_model() successfully completed......................................
2024-07-31 04:09:27,522:INFO:SubProcess create_model() end ==================================
2024-07-31 04:09:27,522:INFO:Creating metrics dataframe
2024-07-31 04:09:27,552:INFO:Initializing create_model()
2024-07-31 04:09:27,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027515CF6050>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 04:09:27,552:INFO:Checking exceptions
2024-07-31 04:09:27,560:INFO:Importing libraries
2024-07-31 04:09:27,566:INFO:Copying training dataset
2024-07-31 04:09:27,604:INFO:Defining folds
2024-07-31 04:09:27,604:INFO:Declaring metric variables
2024-07-31 04:09:27,604:INFO:Importing untrained model
2024-07-31 04:09:27,604:INFO:Declaring custom model
2024-07-31 04:09:27,609:INFO:K Neighbors Classifier Imported successfully
2024-07-31 04:09:27,613:INFO:Cross validation set to False
2024-07-31 04:09:27,613:INFO:Fitting Model
2024-07-31 04:09:27,631:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 04:09:27,762:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-31 04:09:27,767:INFO:create_model() successfully completed......................................
2024-07-31 04:09:28,077:INFO:_master_model_container: 10
2024-07-31 04:09:28,078:INFO:_display_container: 2
2024-07-31 04:09:28,080:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-31 04:09:28,080:INFO:compare_models() successfully completed......................................
2024-07-31 04:09:28,220:INFO:Initializing save_model()
2024-07-31 04:09:28,220:INFO:save_model(model=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), model_name=trained_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Lenovo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Strike Price', 'Call-Price',
                                             'Call-Change in Price (%)',
                                             'Call-Open Interest',
                                             'Call-Volume',
                                             'Call-Implied V...
                 TransformerWrapper(exclude=None, include=['Underlying Name'],
                                    transformer=OneHotEncoder(cols=['Underlying '
                                                                    'Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-31 04:09:28,220:INFO:Adding model into prep_pipe
2024-07-31 04:09:28,295:INFO:trained_model.pkl saved in current working directory
2024-07-31 04:09:28,332:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Strike Price', 'Call-Price',
                                             'Call-Change in Price (%)',
                                             'Call-Open Interest',
                                             'Call-Volume',
                                             'Call-Implied Volatility',
                                             'Greeks: Call Delta',
                                             'Greeks: Cal...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2024-07-31 04:09:28,332:INFO:save_model() successfully completed......................................
2024-07-31 04:53:06,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 04:53:06,591:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 04:53:06,591:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 04:53:06,591:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-07-31 05:04:32,225:INFO:PyCaret ClassificationExperiment
2024-07-31 05:04:32,430:INFO:Logging name: clf-default-name
2024-07-31 05:04:32,431:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-31 05:04:32,431:INFO:version 3.3.2
2024-07-31 05:04:32,431:INFO:Initializing setup()
2024-07-31 05:04:32,432:INFO:self.USI: 2fde
2024-07-31 05:04:32,432:INFO:self._variable_keys: {'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'exp_name_log', 'idx', 'html_param', 'X_test', 'X', 'fold_groups_param', 'y', 'gpu_n_jobs_param', 'log_plots_param', 'USI', 'data', 'pipeline', 'is_multiclass', 'fold_generator', 'n_jobs_param', 'y_train', 'gpu_param', 'y_test', 'target_param', 'seed', '_available_plots', 'X_train', '_ml_usecase', 'memory', 'logging_param'}
2024-07-31 05:04:32,433:INFO:Checking environment
2024-07-31 05:04:32,439:INFO:python_version: 3.10.0
2024-07-31 05:04:32,440:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2024-07-31 05:04:32,440:INFO:machine: AMD64
2024-07-31 05:04:32,440:INFO:platform: Windows-10-10.0.19045-SP0
2024-07-31 05:04:32,586:INFO:Memory: svmem(total=3504250880, available=409595904, percent=88.3, used=3094654976, free=409595904)
2024-07-31 05:04:32,623:INFO:Physical Core: 2
2024-07-31 05:04:32,623:INFO:Logical Core: 4
2024-07-31 05:04:32,623:INFO:Checking libraries
2024-07-31 05:04:32,623:INFO:System:
2024-07-31 05:04:32,623:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2024-07-31 05:04:32,623:INFO:executable: D:\Desktop\autoanalysis\autoanalysis\Scripts\python.exe
2024-07-31 05:04:32,623:INFO:   machine: Windows-10-10.0.19045-SP0
2024-07-31 05:04:32,623:INFO:PyCaret required dependencies:
2024-07-31 05:04:37,349:INFO:                 pip: 21.2.3
2024-07-31 05:04:37,349:INFO:          setuptools: 57.4.0
2024-07-31 05:04:37,349:INFO:             pycaret: 3.3.2
2024-07-31 05:04:37,434:INFO:             IPython: 8.12.3
2024-07-31 05:04:37,434:INFO:          ipywidgets: 8.1.3
2024-07-31 05:04:37,435:INFO:                tqdm: 4.66.4
2024-07-31 05:04:37,435:INFO:               numpy: 1.26.4
2024-07-31 05:04:37,435:INFO:              pandas: 1.5.3
2024-07-31 05:04:37,435:INFO:              jinja2: 3.1.4
2024-07-31 05:04:37,435:INFO:               scipy: 1.11.4
2024-07-31 05:04:37,435:INFO:              joblib: 1.3.2
2024-07-31 05:04:37,436:INFO:             sklearn: 1.4.2
2024-07-31 05:04:37,436:INFO:                pyod: 2.0.1
2024-07-31 05:04:37,436:INFO:            imblearn: 0.12.3
2024-07-31 05:04:37,436:INFO:   category_encoders: 2.6.3
2024-07-31 05:04:37,436:INFO:            lightgbm: 4.5.0
2024-07-31 05:04:37,437:INFO:               numba: 0.60.0
2024-07-31 05:04:37,437:INFO:            requests: 2.32.3
2024-07-31 05:04:37,437:INFO:          matplotlib: 3.7.5
2024-07-31 05:04:37,437:INFO:          scikitplot: 0.3.7
2024-07-31 05:04:37,437:INFO:         yellowbrick: 1.5
2024-07-31 05:04:37,437:INFO:              plotly: 5.23.0
2024-07-31 05:04:37,437:INFO:    plotly-resampler: Not installed
2024-07-31 05:04:37,437:INFO:             kaleido: 0.2.1
2024-07-31 05:04:37,437:INFO:           schemdraw: 0.15
2024-07-31 05:04:37,437:INFO:         statsmodels: 0.14.2
2024-07-31 05:04:37,437:INFO:              sktime: 0.26.0
2024-07-31 05:04:37,437:INFO:               tbats: 1.1.3
2024-07-31 05:04:37,437:INFO:            pmdarima: 2.0.4
2024-07-31 05:04:37,437:INFO:              psutil: 6.0.0
2024-07-31 05:04:37,437:INFO:          markupsafe: 2.1.5
2024-07-31 05:04:37,437:INFO:             pickle5: Not installed
2024-07-31 05:04:37,437:INFO:         cloudpickle: 3.0.0
2024-07-31 05:04:37,437:INFO:         deprecation: 2.1.0
2024-07-31 05:04:37,441:INFO:              xxhash: 3.4.1
2024-07-31 05:04:37,441:INFO:           wurlitzer: Not installed
2024-07-31 05:04:37,442:INFO:PyCaret optional dependencies:
2024-07-31 05:04:37,522:INFO:                shap: Not installed
2024-07-31 05:04:37,522:INFO:           interpret: Not installed
2024-07-31 05:04:37,523:INFO:                umap: Not installed
2024-07-31 05:04:37,523:INFO:     ydata_profiling: 4.9.0
2024-07-31 05:04:37,523:INFO:  explainerdashboard: Not installed
2024-07-31 05:04:37,524:INFO:             autoviz: Not installed
2024-07-31 05:04:37,524:INFO:           fairlearn: Not installed
2024-07-31 05:04:37,524:INFO:          deepchecks: Not installed
2024-07-31 05:04:37,524:INFO:             xgboost: Not installed
2024-07-31 05:04:37,525:INFO:            catboost: Not installed
2024-07-31 05:04:37,525:INFO:              kmodes: Not installed
2024-07-31 05:04:37,525:INFO:             mlxtend: Not installed
2024-07-31 05:04:37,525:INFO:       statsforecast: Not installed
2024-07-31 05:04:37,525:INFO:        tune_sklearn: Not installed
2024-07-31 05:04:37,525:INFO:                 ray: Not installed
2024-07-31 05:04:37,525:INFO:            hyperopt: Not installed
2024-07-31 05:04:37,527:INFO:              optuna: Not installed
2024-07-31 05:04:37,527:INFO:               skopt: Not installed
2024-07-31 05:04:37,527:INFO:              mlflow: Not installed
2024-07-31 05:04:37,527:INFO:              gradio: Not installed
2024-07-31 05:04:37,527:INFO:             fastapi: Not installed
2024-07-31 05:04:37,527:INFO:             uvicorn: Not installed
2024-07-31 05:04:37,527:INFO:              m2cgen: Not installed
2024-07-31 05:04:37,527:INFO:           evidently: Not installed
2024-07-31 05:04:37,528:INFO:               fugue: Not installed
2024-07-31 05:04:37,528:INFO:           streamlit: 1.37.0
2024-07-31 05:04:37,528:INFO:             prophet: Not installed
2024-07-31 05:04:37,528:INFO:None
2024-07-31 05:04:37,528:INFO:Set up data.
2024-07-31 05:04:39,271:INFO:Set up folding strategy.
2024-07-31 05:04:39,271:INFO:Set up train/test split.
2024-07-31 05:04:40,088:INFO:Set up index.
2024-07-31 05:04:40,120:INFO:Assigning column types.
2024-07-31 05:04:40,145:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-31 05:04:40,532:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-31 05:04:40,996:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 05:04:42,454:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:42,454:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:43,193:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-31 05:04:43,193:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 05:04:43,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:43,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:43,314:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-31 05:04:43,943:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 05:04:44,029:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:44,029:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:44,491:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 05:04:44,644:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:44,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:44,686:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-31 05:04:45,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:45,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:45,886:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:45,892:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:46,313:INFO:Preparing preprocessing pipeline...
2024-07-31 05:04:46,500:INFO:Set up label encoding.
2024-07-31 05:04:46,500:INFO:Set up simple imputation.
2024-07-31 05:04:46,542:INFO:Set up encoding of categorical features.
2024-07-31 05:04:46,546:INFO:Set up column name cleaning.
2024-07-31 05:04:49,652:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py:249: UserWarning: Persisting input arguments took 1.66s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  fitted_transformer = self._memory_fit(

2024-07-31 05:04:49,933:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:04:50,919:INFO:Finished creating preprocessing pipeline.
2024-07-31 05:04:50,982:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Lenovo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Strike Price', 'Call-Price',
                                             'Call-Change in Price (%)',
                                             'Call-Open Interest',
                                             'Call-Volume',
                                             'Call-Implied V...
                 TransformerWrapper(exclude=None, include=['Underlying Name'],
                                    transformer=OneHotEncoder(cols=['Underlying '
                                                                    'Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-31 05:04:50,982:INFO:Creating final display dataframe.
2024-07-31 05:04:52,205:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:04:52,590:INFO:Setup _display_container:                     Description             Value
0                    Session id              2861
1                        Target   Expiration Date
2                   Target type        Multiclass
3                Target mapping     29-08-2024: 0
4           Original data shape          (16, 24)
5        Transformed data shape          (16, 22)
6   Transformed train set shape          (11, 22)
7    Transformed test set shape           (5, 22)
8              Numeric features                22
9          Categorical features                 1
10     Rows with missing values            100.0%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              2fde
2024-07-31 05:04:54,122:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:54,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:54,440:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:54,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:04:54,443:INFO:setup() successfully completed in 24.21s...............
2024-07-31 05:04:58,166:INFO:Initializing compare_models()
2024-07-31 05:04:58,166:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-31 05:04:58,172:INFO:Checking exceptions
2024-07-31 05:04:58,212:INFO:Preparing display monitor
2024-07-31 05:04:58,434:INFO:Initializing Logistic Regression
2024-07-31 05:04:58,434:INFO:Total runtime is 0.0 minutes
2024-07-31 05:04:58,434:INFO:SubProcess create_model() called ==================================
2024-07-31 05:04:58,492:INFO:Initializing create_model()
2024-07-31 05:04:58,492:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:04:58,493:INFO:Checking exceptions
2024-07-31 05:04:58,494:INFO:Importing libraries
2024-07-31 05:04:58,494:INFO:Copying training dataset
2024-07-31 05:04:58,518:INFO:Defining folds
2024-07-31 05:04:58,518:INFO:Declaring metric variables
2024-07-31 05:04:58,518:INFO:Importing untrained model
2024-07-31 05:04:58,518:INFO:Logistic Regression Imported successfully
2024-07-31 05:04:58,522:INFO:Starting cross validation
2024-07-31 05:04:58,702:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:06:47,999:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:48,000:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:48,003:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:48,003:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:48,573:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:48,576:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:48,580:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:48,582:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:48,810:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:48,818:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:49,187:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 05:06:50,054:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_logistic.py", line 1246, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


2024-07-31 05:06:50,057:INFO:Initializing create_model()
2024-07-31 05:06:50,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:06:50,057:INFO:Checking exceptions
2024-07-31 05:06:50,057:INFO:Importing libraries
2024-07-31 05:06:50,057:INFO:Copying training dataset
2024-07-31 05:06:50,164:INFO:Defining folds
2024-07-31 05:06:50,164:INFO:Declaring metric variables
2024-07-31 05:06:50,164:INFO:Importing untrained model
2024-07-31 05:06:50,164:INFO:Logistic Regression Imported successfully
2024-07-31 05:06:50,164:INFO:Starting cross validation
2024-07-31 05:06:50,176:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:06:50,389:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:50,393:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:50,402:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:50,413:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:50,564:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:50,575:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:50,575:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:50,593:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:50,726:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:50,733:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:50,842:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-07-31 05:06:50,843:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_logistic.py", line 1246, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_logistic.py", line 1246, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


2024-07-31 05:06:50,844:INFO:Initializing K Neighbors Classifier
2024-07-31 05:06:50,844:INFO:Total runtime is 1.8735086719195049 minutes
2024-07-31 05:06:50,845:INFO:SubProcess create_model() called ==================================
2024-07-31 05:06:50,846:INFO:Initializing create_model()
2024-07-31 05:06:50,846:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:06:50,846:INFO:Checking exceptions
2024-07-31 05:06:50,846:INFO:Importing libraries
2024-07-31 05:06:50,847:INFO:Copying training dataset
2024-07-31 05:06:50,872:INFO:Defining folds
2024-07-31 05:06:50,873:INFO:Declaring metric variables
2024-07-31 05:06:50,873:INFO:Importing untrained model
2024-07-31 05:06:50,874:INFO:K Neighbors Classifier Imported successfully
2024-07-31 05:06:50,874:INFO:Starting cross validation
2024-07-31 05:06:50,915:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:06:50,992:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:51,001:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:51,007:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:51,012:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:51,182:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:51,182:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:51,200:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:51,213:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:54,762:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:54,762:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:54,819:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:54,819:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:54,819:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:54,819:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:54,865:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:54,866:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:54,868:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:54,892:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:54,892:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:54,895:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:54,899:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:54,911:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:54,932:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:54,932:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:54,942:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:54,944:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

e 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:54,945:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:54,946:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:54,949:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:54,954:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:54,956:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:54,967:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:55,022:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:55,024:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:55,024:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:54,967:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:55,063:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:55,192:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:55,204:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:55,212:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:55,263:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:55,306:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:55,315:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:55,315:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,323:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,324:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,330:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:55,334:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,335:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,343:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,343:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:55,343:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:55,352:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,355:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,358:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:55,360:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,372:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:55,372:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:55,374:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:55,374:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:55,374:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:55,391:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:55,392:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:55,394:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,394:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:55,406:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,445:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:55,464:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,481:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:55,483:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:55,520:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:55,620:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:55,662:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:55,712:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:55,721:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,731:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,742:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,742:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:55,752:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,757:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:55,757:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:55,763:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,763:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:55,773:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:55,779:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:55,780:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:55,783:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:55,790:INFO:Calculating mean and std
2024-07-31 05:06:55,847:INFO:Creating metrics dataframe
2024-07-31 05:06:55,856:INFO:Uploading results into container
2024-07-31 05:06:55,862:INFO:Uploading model into container now
2024-07-31 05:06:55,864:INFO:_master_model_container: 1
2024-07-31 05:06:55,864:INFO:_display_container: 2
2024-07-31 05:06:55,866:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-31 05:06:55,866:INFO:create_model() successfully completed......................................
2024-07-31 05:06:56,166:INFO:SubProcess create_model() end ==================================
2024-07-31 05:06:56,166:INFO:Creating metrics dataframe
2024-07-31 05:06:56,182:INFO:Initializing Naive Bayes
2024-07-31 05:06:56,182:INFO:Total runtime is 1.9624696731567384 minutes
2024-07-31 05:06:56,184:INFO:SubProcess create_model() called ==================================
2024-07-31 05:06:56,184:INFO:Initializing create_model()
2024-07-31 05:06:56,185:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:06:56,185:INFO:Checking exceptions
2024-07-31 05:06:56,185:INFO:Importing libraries
2024-07-31 05:06:56,185:INFO:Copying training dataset
2024-07-31 05:06:56,193:INFO:Defining folds
2024-07-31 05:06:56,201:INFO:Declaring metric variables
2024-07-31 05:06:56,201:INFO:Importing untrained model
2024-07-31 05:06:56,202:INFO:Naive Bayes Imported successfully
2024-07-31 05:06:56,203:INFO:Starting cross validation
2024-07-31 05:06:56,212:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:06:56,292:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,308:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,331:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,344:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,494:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,511:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,512:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,612:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:56,622:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:56,622:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,622:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:56,632:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,638:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:56,643:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,643:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,644:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,649:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,649:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,652:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,663:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,663:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,663:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,672:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:56,673:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:56,673:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:56,673:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:56,673:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:56,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:56,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:56,696:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,697:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:56,703:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:56,703:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:56,707:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:56,716:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:56,724:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,749:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,751:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,753:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,849:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,892:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,894:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,918:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,919:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:56,924:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,932:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,945:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,971:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:56,974:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:56,974:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:56,976:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,979:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:56,979:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:56,979:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,988:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,998:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:56,998:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:56,998:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:57,008:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:57,008:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:57,011:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:57,012:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:57,016:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:57,025:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:57,016:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:57,027:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:57,034:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:57,034:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:57,042:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:57,057:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:57,057:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:57,058:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:57,062:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:57,120:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:57,151:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:57,182:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:57,182:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:57,192:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:57,202:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:57,214:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:57,214:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:57,221:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:57,223:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:57,231:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:57,235:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:57,248:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:57,257:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:57,257:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:57,263:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:57,329:INFO:Calculating mean and std
2024-07-31 05:06:57,333:INFO:Creating metrics dataframe
2024-07-31 05:06:57,372:INFO:Uploading results into container
2024-07-31 05:06:57,375:INFO:Uploading model into container now
2024-07-31 05:06:57,375:INFO:_master_model_container: 2
2024-07-31 05:06:57,375:INFO:_display_container: 2
2024-07-31 05:06:57,375:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-31 05:06:57,375:INFO:create_model() successfully completed......................................
2024-07-31 05:06:57,633:INFO:SubProcess create_model() end ==================================
2024-07-31 05:06:57,634:INFO:Creating metrics dataframe
2024-07-31 05:06:57,659:INFO:Initializing Decision Tree Classifier
2024-07-31 05:06:57,659:INFO:Total runtime is 1.9870854298273724 minutes
2024-07-31 05:06:57,659:INFO:SubProcess create_model() called ==================================
2024-07-31 05:06:57,662:INFO:Initializing create_model()
2024-07-31 05:06:57,662:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:06:57,662:INFO:Checking exceptions
2024-07-31 05:06:57,662:INFO:Importing libraries
2024-07-31 05:06:57,662:INFO:Copying training dataset
2024-07-31 05:06:57,680:INFO:Defining folds
2024-07-31 05:06:57,681:INFO:Declaring metric variables
2024-07-31 05:06:57,682:INFO:Importing untrained model
2024-07-31 05:06:57,684:INFO:Decision Tree Classifier Imported successfully
2024-07-31 05:06:57,684:INFO:Starting cross validation
2024-07-31 05:06:57,690:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:06:57,763:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:57,763:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:57,782:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:57,782:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:58,525:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:58,532:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:58,535:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:58,543:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:58,636:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:58,642:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:58,645:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:58,645:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:58,649:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:58,649:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:58,652:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:58,652:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:58,661:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:58,664:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:58,668:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:58,675:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:58,676:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:58,677:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:58,681:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:58,682:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:58,685:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:58,695:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:58,699:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:58,699:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:58,702:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:58,702:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:58,706:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:58,712:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:58,712:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:58,712:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:58,721:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:58,726:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:58,743:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:58,743:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:58,747:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:58,852:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:58,882:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:58,892:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:58,910:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:58,965:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:58,974:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:58,975:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:58,975:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:58,981:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:58,988:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:58,994:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:58,994:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:58,994:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:59,003:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:59,006:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:59,014:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:59,014:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:59,014:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:59,014:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:59,023:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:59,026:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:59,031:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:59,031:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:59,032:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:59,041:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:59,042:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:59,045:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:59,051:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:59,054:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:59,054:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:59,055:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:59,055:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:59,063:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:59,136:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:59,168:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:59,204:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:59,212:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:59,222:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:59,222:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:06:59,232:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:59,237:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:59,242:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:59,245:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:59,247:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:59,253:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:59,260:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:06:59,264:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:59,267:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:06:59,268:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:06:59,278:INFO:Calculating mean and std
2024-07-31 05:06:59,279:INFO:Creating metrics dataframe
2024-07-31 05:06:59,283:INFO:Uploading results into container
2024-07-31 05:06:59,288:INFO:Uploading model into container now
2024-07-31 05:06:59,292:INFO:_master_model_container: 3
2024-07-31 05:06:59,292:INFO:_display_container: 2
2024-07-31 05:06:59,294:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2861, splitter='best')
2024-07-31 05:06:59,294:INFO:create_model() successfully completed......................................
2024-07-31 05:06:59,534:INFO:SubProcess create_model() end ==================================
2024-07-31 05:06:59,534:INFO:Creating metrics dataframe
2024-07-31 05:06:59,552:INFO:Initializing SVM - Linear Kernel
2024-07-31 05:06:59,552:INFO:Total runtime is 2.0186442732810974 minutes
2024-07-31 05:06:59,552:INFO:SubProcess create_model() called ==================================
2024-07-31 05:06:59,552:INFO:Initializing create_model()
2024-07-31 05:06:59,552:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:06:59,552:INFO:Checking exceptions
2024-07-31 05:06:59,552:INFO:Importing libraries
2024-07-31 05:06:59,552:INFO:Copying training dataset
2024-07-31 05:06:59,573:INFO:Defining folds
2024-07-31 05:06:59,573:INFO:Declaring metric variables
2024-07-31 05:06:59,574:INFO:Importing untrained model
2024-07-31 05:06:59,575:INFO:SVM - Linear Kernel Imported successfully
2024-07-31 05:06:59,575:INFO:Starting cross validation
2024-07-31 05:06:59,579:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:06:59,641:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:59,642:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:59,665:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:59,679:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:59,902:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:59,910:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:59,912:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:06:59,949:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,077:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,083:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,191:WARNING:create_model() for svm raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 05:07:00,193:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 658, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 05:07:00,195:INFO:Initializing create_model()
2024-07-31 05:07:00,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:07:00,195:INFO:Checking exceptions
2024-07-31 05:07:00,196:INFO:Importing libraries
2024-07-31 05:07:00,196:INFO:Copying training dataset
2024-07-31 05:07:00,213:INFO:Defining folds
2024-07-31 05:07:00,213:INFO:Declaring metric variables
2024-07-31 05:07:00,213:INFO:Importing untrained model
2024-07-31 05:07:00,213:INFO:SVM - Linear Kernel Imported successfully
2024-07-31 05:07:00,221:INFO:Starting cross validation
2024-07-31 05:07:00,223:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:07:00,314:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,324:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,332:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,343:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,483:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,484:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,533:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,536:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,645:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,673:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,792:ERROR:create_model() for svm raised an exception or returned all 0.0:
2024-07-31 05:07:00,795:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 658, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 658, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 05:07:00,795:INFO:Initializing Ridge Classifier
2024-07-31 05:07:00,796:INFO:Total runtime is 2.039371045430501 minutes
2024-07-31 05:07:00,796:INFO:SubProcess create_model() called ==================================
2024-07-31 05:07:00,797:INFO:Initializing create_model()
2024-07-31 05:07:00,797:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:07:00,797:INFO:Checking exceptions
2024-07-31 05:07:00,797:INFO:Importing libraries
2024-07-31 05:07:00,797:INFO:Copying training dataset
2024-07-31 05:07:00,813:INFO:Defining folds
2024-07-31 05:07:00,813:INFO:Declaring metric variables
2024-07-31 05:07:00,816:INFO:Importing untrained model
2024-07-31 05:07:00,817:INFO:Ridge Classifier Imported successfully
2024-07-31 05:07:00,817:INFO:Starting cross validation
2024-07-31 05:07:00,822:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:07:00,927:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,932:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,936:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:00,952:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:01,462:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:01,462:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:01,462:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:01,496:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:01,640:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:01,641:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:01,641:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:01,646:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:01,646:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:01,647:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:01,649:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:01,657:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:01,661:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:01,662:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:01,667:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:01,667:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:01,667:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:01,674:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:01,674:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:01,683:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:01,683:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:01,683:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:01,683:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:01,683:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:01,683:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:01,683:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:01,693:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:01,693:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:01,693:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:01,703:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:01,732:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:01,741:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:01,739:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:01,753:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:01,936:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:01,965:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:01,973:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:02,009:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:02,051:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:02,056:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,065:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,066:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:02,066:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:02,073:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,075:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,081:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,083:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:02,083:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:02,088:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:02,092:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,096:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,097:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:02,101:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:02,105:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,107:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:02,108:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:02,113:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,114:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:02,115:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:02,122:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,124:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:02,133:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,135:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:02,141:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:02,142:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:02,152:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:02,236:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:02,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:02,313:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:02,316:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,322:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:02,325:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,325:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,332:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,332:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,343:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:02,343:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:02,344:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:02,352:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:02,356:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:02,357:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:02,362:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:02,371:INFO:Calculating mean and std
2024-07-31 05:07:02,373:INFO:Creating metrics dataframe
2024-07-31 05:07:02,412:INFO:Uploading results into container
2024-07-31 05:07:02,412:INFO:Uploading model into container now
2024-07-31 05:07:02,412:INFO:_master_model_container: 4
2024-07-31 05:07:02,412:INFO:_display_container: 2
2024-07-31 05:07:02,417:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2861, solver='auto',
                tol=0.0001)
2024-07-31 05:07:02,417:INFO:create_model() successfully completed......................................
2024-07-31 05:07:02,632:INFO:SubProcess create_model() end ==================================
2024-07-31 05:07:02,632:INFO:Creating metrics dataframe
2024-07-31 05:07:02,642:INFO:Initializing Random Forest Classifier
2024-07-31 05:07:02,642:INFO:Total runtime is 2.0701446453730266 minutes
2024-07-31 05:07:02,642:INFO:SubProcess create_model() called ==================================
2024-07-31 05:07:02,642:INFO:Initializing create_model()
2024-07-31 05:07:02,642:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:07:02,642:INFO:Checking exceptions
2024-07-31 05:07:02,642:INFO:Importing libraries
2024-07-31 05:07:02,642:INFO:Copying training dataset
2024-07-31 05:07:02,654:INFO:Defining folds
2024-07-31 05:07:02,654:INFO:Declaring metric variables
2024-07-31 05:07:02,654:INFO:Importing untrained model
2024-07-31 05:07:02,654:INFO:Random Forest Classifier Imported successfully
2024-07-31 05:07:02,654:INFO:Starting cross validation
2024-07-31 05:07:02,662:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:07:02,733:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:02,733:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:02,742:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:02,752:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:03,747:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:03,770:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:03,770:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:03,862:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:04,201:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:04,203:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:04,212:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:04,223:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:04,226:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:04,228:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:04,232:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:04,236:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:04,237:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:04,242:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:04,242:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:04,246:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:04,247:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:04,254:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:04,257:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:04,257:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:04,263:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:04,263:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:04,263:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:04,275:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:04,282:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:04,283:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:04,283:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:04,283:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:04,283:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:04,283:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:04,293:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:04,294:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:04,307:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:04,313:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:04,327:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:04,331:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:04,981:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:05,002:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:05,051:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:05,121:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:05,238:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:05,240:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:05,243:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:05,245:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:05,257:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:05,258:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:05,265:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:05,271:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:05,277:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:05,277:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:05,287:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:05,288:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:05,290:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:05,293:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:05,293:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:05,296:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:05,303:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:05,311:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:05,316:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:05,319:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:05,320:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:05,323:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:05,326:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:05,374:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:05,379:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:05,391:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:05,402:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:05,413:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:05,414:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:05,419:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:05,892:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:05,922:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:06,084:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:06,091:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:06,104:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:06,125:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:06,126:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:06,131:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:06,142:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:06,142:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:06,142:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:06,152:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:06,175:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:06,197:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:06,197:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:06,205:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:06,232:INFO:Calculating mean and std
2024-07-31 05:07:06,235:INFO:Creating metrics dataframe
2024-07-31 05:07:06,242:INFO:Uploading results into container
2024-07-31 05:07:06,254:INFO:Uploading model into container now
2024-07-31 05:07:06,256:INFO:_master_model_container: 5
2024-07-31 05:07:06,262:INFO:_display_container: 2
2024-07-31 05:07:06,263:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2861, verbose=0,
                       warm_start=False)
2024-07-31 05:07:06,263:INFO:create_model() successfully completed......................................
2024-07-31 05:07:06,511:INFO:SubProcess create_model() end ==================================
2024-07-31 05:07:06,512:INFO:Creating metrics dataframe
2024-07-31 05:07:06,532:INFO:Initializing Quadratic Discriminant Analysis
2024-07-31 05:07:06,533:INFO:Total runtime is 2.1349830865859984 minutes
2024-07-31 05:07:06,533:INFO:SubProcess create_model() called ==================================
2024-07-31 05:07:06,534:INFO:Initializing create_model()
2024-07-31 05:07:06,534:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:07:06,534:INFO:Checking exceptions
2024-07-31 05:07:06,534:INFO:Importing libraries
2024-07-31 05:07:06,534:INFO:Copying training dataset
2024-07-31 05:07:06,559:INFO:Defining folds
2024-07-31 05:07:06,560:INFO:Declaring metric variables
2024-07-31 05:07:06,560:INFO:Importing untrained model
2024-07-31 05:07:06,562:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-31 05:07:06,563:INFO:Starting cross validation
2024-07-31 05:07:06,568:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:07:06,662:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:06,673:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:06,673:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:06,692:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:06,896:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:06,900:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:06,903:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:06,916:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:07,037:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:07,058:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:07,180:WARNING:create_model() for qda raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 05:07:07,182:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\discriminant_analysis.py", line 905, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 05:07:07,213:INFO:Initializing create_model()
2024-07-31 05:07:07,213:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:07:07,213:INFO:Checking exceptions
2024-07-31 05:07:07,213:INFO:Importing libraries
2024-07-31 05:07:07,213:INFO:Copying training dataset
2024-07-31 05:07:07,245:INFO:Defining folds
2024-07-31 05:07:07,246:INFO:Declaring metric variables
2024-07-31 05:07:07,247:INFO:Importing untrained model
2024-07-31 05:07:07,250:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-31 05:07:07,250:INFO:Starting cross validation
2024-07-31 05:07:07,266:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:07:07,363:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:07,374:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:07,381:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:07,381:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:07,524:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:07,601:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:07,606:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:07,632:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:07,697:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:07,769:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:07,897:ERROR:create_model() for qda raised an exception or returned all 0.0:
2024-07-31 05:07:07,901:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\discriminant_analysis.py", line 905, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\discriminant_analysis.py", line 905, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 05:07:07,902:INFO:Initializing Ada Boost Classifier
2024-07-31 05:07:07,902:INFO:Total runtime is 2.1577998717625935 minutes
2024-07-31 05:07:07,903:INFO:SubProcess create_model() called ==================================
2024-07-31 05:07:07,904:INFO:Initializing create_model()
2024-07-31 05:07:07,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:07:07,904:INFO:Checking exceptions
2024-07-31 05:07:07,905:INFO:Importing libraries
2024-07-31 05:07:07,905:INFO:Copying training dataset
2024-07-31 05:07:07,914:INFO:Defining folds
2024-07-31 05:07:07,914:INFO:Declaring metric variables
2024-07-31 05:07:07,921:INFO:Importing untrained model
2024-07-31 05:07:07,923:INFO:Ada Boost Classifier Imported successfully
2024-07-31 05:07:07,924:INFO:Starting cross validation
2024-07-31 05:07:07,928:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:07:08,002:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,002:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,013:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,023:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,275:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:07:08,275:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:07:08,284:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:07:08,297:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:07:08,324:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,352:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,363:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,373:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,444:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:08,456:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,464:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,464:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:08,474:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,478:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,483:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:08,484:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:08,484:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,491:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:08,504:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:08,507:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,517:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:08,522:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,521:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,523:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:08,523:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:08,526:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:08,533:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,536:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,536:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,541:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,552:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,562:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:08,563:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:08,567:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:08,567:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:08,570:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:08,572:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:08,577:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,602:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,607:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,702:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:07:08,721:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,723:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:07:08,727:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:07:08,728:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:07:08,753:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,761:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,762:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,839:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:08,842:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,852:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:08,852:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:08,863:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,863:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,869:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,872:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,872:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,872:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,893:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,894:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:08,894:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:08,900:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:08,905:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,906:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:08,910:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,910:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:08,910:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:08,910:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:08,910:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:08,915:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:08,916:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,924:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:08,934:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:08,934:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,944:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:08,944:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:08,945:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:08,945:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:09,044:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:07:09,069:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:09,071:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:07:09,090:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:09,146:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:09,156:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:09,166:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:09,175:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:09,175:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:09,182:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:09,183:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:09,186:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:09,186:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:09,194:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:09,205:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:09,214:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:09,216:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:09,223:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:09,227:INFO:Calculating mean and std
2024-07-31 05:07:09,230:INFO:Creating metrics dataframe
2024-07-31 05:07:09,245:INFO:Uploading results into container
2024-07-31 05:07:09,253:INFO:Uploading model into container now
2024-07-31 05:07:09,256:INFO:_master_model_container: 6
2024-07-31 05:07:09,256:INFO:_display_container: 2
2024-07-31 05:07:09,257:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2861)
2024-07-31 05:07:09,257:INFO:create_model() successfully completed......................................
2024-07-31 05:07:09,518:INFO:SubProcess create_model() end ==================================
2024-07-31 05:07:09,518:INFO:Creating metrics dataframe
2024-07-31 05:07:09,534:INFO:Initializing Gradient Boosting Classifier
2024-07-31 05:07:09,536:INFO:Total runtime is 2.1850292364756263 minutes
2024-07-31 05:07:09,536:INFO:SubProcess create_model() called ==================================
2024-07-31 05:07:09,537:INFO:Initializing create_model()
2024-07-31 05:07:09,537:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:07:09,538:INFO:Checking exceptions
2024-07-31 05:07:09,538:INFO:Importing libraries
2024-07-31 05:07:09,538:INFO:Copying training dataset
2024-07-31 05:07:09,552:INFO:Defining folds
2024-07-31 05:07:09,552:INFO:Declaring metric variables
2024-07-31 05:07:09,556:INFO:Importing untrained model
2024-07-31 05:07:09,557:INFO:Gradient Boosting Classifier Imported successfully
2024-07-31 05:07:09,557:INFO:Starting cross validation
2024-07-31 05:07:09,564:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:07:09,633:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:09,643:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:09,644:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:09,661:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,022:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,034:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,042:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,043:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,209:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,216:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,340:WARNING:create_model() for gbc raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 05:07:10,341:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 665, in fit
    y = self._encode_y(y=y, sample_weight=None)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 1520, in _encode_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


2024-07-31 05:07:10,341:INFO:Initializing create_model()
2024-07-31 05:07:10,341:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:07:10,341:INFO:Checking exceptions
2024-07-31 05:07:10,341:INFO:Importing libraries
2024-07-31 05:07:10,341:INFO:Copying training dataset
2024-07-31 05:07:10,357:INFO:Defining folds
2024-07-31 05:07:10,357:INFO:Declaring metric variables
2024-07-31 05:07:10,361:INFO:Importing untrained model
2024-07-31 05:07:10,362:INFO:Gradient Boosting Classifier Imported successfully
2024-07-31 05:07:10,362:INFO:Starting cross validation
2024-07-31 05:07:10,367:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:07:10,442:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,452:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,466:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,472:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,702:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,723:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,741:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,752:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,873:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:10,901:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:11,022:ERROR:create_model() for gbc raised an exception or returned all 0.0:
2024-07-31 05:07:11,023:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 665, in fit
    y = self._encode_y(y=y, sample_weight=None)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 1520, in _encode_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 665, in fit
    y = self._encode_y(y=y, sample_weight=None)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 1520, in _encode_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


2024-07-31 05:07:11,023:INFO:Initializing Linear Discriminant Analysis
2024-07-31 05:07:11,023:INFO:Total runtime is 2.2098280310630796 minutes
2024-07-31 05:07:11,027:INFO:SubProcess create_model() called ==================================
2024-07-31 05:07:11,028:INFO:Initializing create_model()
2024-07-31 05:07:11,028:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:07:11,028:INFO:Checking exceptions
2024-07-31 05:07:11,028:INFO:Importing libraries
2024-07-31 05:07:11,028:INFO:Copying training dataset
2024-07-31 05:07:11,056:INFO:Defining folds
2024-07-31 05:07:11,059:INFO:Declaring metric variables
2024-07-31 05:07:11,060:INFO:Importing untrained model
2024-07-31 05:07:11,063:INFO:Linear Discriminant Analysis Imported successfully
2024-07-31 05:07:11,066:INFO:Starting cross validation
2024-07-31 05:07:11,076:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:07:11,142:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:11,142:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:11,156:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:11,174:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:11,718:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:11,753:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:11,743:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:11,743:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:11,852:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:11,865:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:11,872:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:11,875:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:11,875:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:11,875:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:11,882:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:11,887:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:11,892:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:11,893:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:11,893:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:11,900:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:11,907:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:11,913:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:11,913:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:11,914:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:11,916:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:11,916:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:11,922:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:11,922:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:11,923:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:11,923:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:11,924:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:11,924:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:11,925:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:11,929:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:11,929:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:11,935:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:11,973:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:11,975:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:11,976:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:11,987:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:12,111:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:12,112:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:12,127:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:12,132:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:12,209:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:12,215:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,216:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:12,222:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,228:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,231:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,232:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:12,232:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:12,239:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,241:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,241:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,244:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,247:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,250:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:12,251:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:12,251:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,257:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,257:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:12,251:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:12,264:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:12,272:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,274:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:12,280:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:12,280:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:12,282:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:12,282:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:12,291:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:12,295:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:12,299:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:12,311:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:12,412:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:12,431:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:12,483:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:12,492:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,501:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,506:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:12,512:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,512:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,514:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,522:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:12,522:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:12,522:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:12,522:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:12,535:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:12,535:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:12,541:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:12,552:INFO:Calculating mean and std
2024-07-31 05:07:12,558:INFO:Creating metrics dataframe
2024-07-31 05:07:12,617:INFO:Uploading results into container
2024-07-31 05:07:12,624:INFO:Uploading model into container now
2024-07-31 05:07:12,625:INFO:_master_model_container: 7
2024-07-31 05:07:12,625:INFO:_display_container: 2
2024-07-31 05:07:12,627:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-31 05:07:12,628:INFO:create_model() successfully completed......................................
2024-07-31 05:07:12,882:INFO:SubProcess create_model() end ==================================
2024-07-31 05:07:12,883:INFO:Creating metrics dataframe
2024-07-31 05:07:12,894:INFO:Initializing Extra Trees Classifier
2024-07-31 05:07:12,894:INFO:Total runtime is 2.24099885225296 minutes
2024-07-31 05:07:12,894:INFO:SubProcess create_model() called ==================================
2024-07-31 05:07:12,894:INFO:Initializing create_model()
2024-07-31 05:07:12,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:07:12,894:INFO:Checking exceptions
2024-07-31 05:07:12,894:INFO:Importing libraries
2024-07-31 05:07:12,894:INFO:Copying training dataset
2024-07-31 05:07:12,910:INFO:Defining folds
2024-07-31 05:07:12,910:INFO:Declaring metric variables
2024-07-31 05:07:12,910:INFO:Importing untrained model
2024-07-31 05:07:12,912:INFO:Extra Trees Classifier Imported successfully
2024-07-31 05:07:12,912:INFO:Starting cross validation
2024-07-31 05:07:12,913:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:07:12,994:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:13,002:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:13,007:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:13,025:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:13,634:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:13,654:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:13,689:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:13,765:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:13,902:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:13,907:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:13,916:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:13,924:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:13,926:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:13,930:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:13,936:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:13,937:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:13,939:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:13,945:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:13,962:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:13,980:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:13,985:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:13,987:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:13,987:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:13,995:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:13,997:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:14,012:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:14,017:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:14,022:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:14,022:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:14,032:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:14,036:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:14,038:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:14,042:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:14,042:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:14,046:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:14,055:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:14,055:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:14,061:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:14,081:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:14,127:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:14,663:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:14,704:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:14,744:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:14,764:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:15,036:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:15,041:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,044:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:15,045:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:15,049:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,049:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,057:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,057:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,074:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,074:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,080:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:15,083:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,089:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,092:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:15,092:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:15,092:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,099:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:15,101:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:15,102:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:15,108:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,109:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:15,120:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,127:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:15,128:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:15,132:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:15,134:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:15,135:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:15,139:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:15,150:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:15,152:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:15,602:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:15,804:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:15,805:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,816:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,819:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:15,824:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,824:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,832:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:15,832:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:15,832:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,836:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:15,842:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:15,846:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:15,846:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:15,855:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:15,866:INFO:Calculating mean and std
2024-07-31 05:07:15,868:INFO:Creating metrics dataframe
2024-07-31 05:07:15,883:INFO:Uploading results into container
2024-07-31 05:07:15,883:INFO:Uploading model into container now
2024-07-31 05:07:15,893:INFO:_master_model_container: 8
2024-07-31 05:07:15,893:INFO:_display_container: 2
2024-07-31 05:07:15,894:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2861, verbose=0,
                     warm_start=False)
2024-07-31 05:07:15,894:INFO:create_model() successfully completed......................................
2024-07-31 05:07:16,124:INFO:SubProcess create_model() end ==================================
2024-07-31 05:07:16,124:INFO:Creating metrics dataframe
2024-07-31 05:07:16,132:INFO:Initializing Light Gradient Boosting Machine
2024-07-31 05:07:16,132:INFO:Total runtime is 2.2949668407440185 minutes
2024-07-31 05:07:16,132:INFO:SubProcess create_model() called ==================================
2024-07-31 05:07:16,132:INFO:Initializing create_model()
2024-07-31 05:07:16,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:07:16,132:INFO:Checking exceptions
2024-07-31 05:07:16,132:INFO:Importing libraries
2024-07-31 05:07:16,132:INFO:Copying training dataset
2024-07-31 05:07:16,151:INFO:Defining folds
2024-07-31 05:07:16,152:INFO:Declaring metric variables
2024-07-31 05:07:16,152:INFO:Importing untrained model
2024-07-31 05:07:16,153:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-31 05:07:16,154:INFO:Starting cross validation
2024-07-31 05:07:16,156:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:07:16,262:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:16,265:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:16,272:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:16,282:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:18,313:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:18,313:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:18,313:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:18,322:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:18,440:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:18,442:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:18,443:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:18,454:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:18,456:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:18,462:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:18,462:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:18,464:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:18,473:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:18,475:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:18,478:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:18,478:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:18,485:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:18,491:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:18,492:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:18,497:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:18,497:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:18,512:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:18,540:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:18,542:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:18,543:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:18,546:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:18,547:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:18,547:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:18,547:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:18,555:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:18,565:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:18,579:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:18,588:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:18,598:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:18,612:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:19,205:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:19,239:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:19,291:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:19,337:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:19,353:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:19,358:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,366:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:19,368:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,373:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,376:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,379:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,381:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:19,382:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:19,392:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:19,397:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,398:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:19,402:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,409:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:19,409:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:19,414:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,415:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:19,422:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,426:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:19,445:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:19,445:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:19,444:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:19,452:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:19,455:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:19,462:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,479:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,497:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,509:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:19,511:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:19,516:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:19,767:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:19,774:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:19,851:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:19,857:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,861:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:07:19,866:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,866:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,873:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,873:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:19,881:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

arn(

2024-07-31 05:07:19,882:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:19,889:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:19,896:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:19,896:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:19,902:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:19,920:INFO:Calculating mean and std
2024-07-31 05:07:19,923:INFO:Creating metrics dataframe
2024-07-31 05:07:19,934:INFO:Uploading results into container
2024-07-31 05:07:19,934:INFO:Uploading model into container now
2024-07-31 05:07:19,941:INFO:_master_model_container: 9
2024-07-31 05:07:19,941:INFO:_display_container: 2
2024-07-31 05:07:19,943:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2861, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-31 05:07:19,943:INFO:create_model() successfully completed......................................
2024-07-31 05:07:20,173:INFO:SubProcess create_model() end ==================================
2024-07-31 05:07:20,173:INFO:Creating metrics dataframe
2024-07-31 05:07:20,195:INFO:Initializing Dummy Classifier
2024-07-31 05:07:20,201:INFO:Total runtime is 2.3626886010169983 minutes
2024-07-31 05:07:20,202:INFO:SubProcess create_model() called ==================================
2024-07-31 05:07:20,202:INFO:Initializing create_model()
2024-07-31 05:07:20,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EF46C850>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:07:20,202:INFO:Checking exceptions
2024-07-31 05:07:20,203:INFO:Importing libraries
2024-07-31 05:07:20,203:INFO:Copying training dataset
2024-07-31 05:07:20,212:INFO:Defining folds
2024-07-31 05:07:20,212:INFO:Declaring metric variables
2024-07-31 05:07:20,212:INFO:Importing untrained model
2024-07-31 05:07:20,212:INFO:Dummy Classifier Imported successfully
2024-07-31 05:07:20,212:INFO:Starting cross validation
2024-07-31 05:07:20,212:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:07:20,292:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,295:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,302:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,312:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,416:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,438:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,468:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,483:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,486:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:20,490:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,505:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,515:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,519:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,526:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:20,538:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,552:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:20,558:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,562:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:20,570:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,570:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,574:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:20,575:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,575:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,575:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,582:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,582:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,582:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,582:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:20,582:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,582:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:20,592:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,592:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,592:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,593:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,605:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,605:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:20,612:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,629:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,629:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,643:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,765:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,803:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,806:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,846:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,894:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:20,898:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,906:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:20,907:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,913:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:20,914:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,917:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,917:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,927:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,927:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:20,931:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,931:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,935:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,936:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,942:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,946:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,958:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,958:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:20,962:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,962:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,962:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:20,968:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,968:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:20,973:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,974:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:20,978:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:20,978:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,981:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:20,994:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:21,106:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:21,182:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:21,208:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:21,215:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:21,223:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:21,232:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:21,241:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:21,241:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:21,244:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:21,256:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:07:21,260:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:21,264:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:21,273:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:07:21,274:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:21,274:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:07:21,282:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:07:21,292:INFO:Calculating mean and std
2024-07-31 05:07:21,295:INFO:Creating metrics dataframe
2024-07-31 05:07:21,303:INFO:Uploading results into container
2024-07-31 05:07:21,306:INFO:Uploading model into container now
2024-07-31 05:07:21,309:INFO:_master_model_container: 10
2024-07-31 05:07:21,309:INFO:_display_container: 2
2024-07-31 05:07:21,309:INFO:DummyClassifier(constant=None, random_state=2861, strategy='prior')
2024-07-31 05:07:21,309:INFO:create_model() successfully completed......................................
2024-07-31 05:07:21,542:INFO:SubProcess create_model() end ==================================
2024-07-31 05:07:21,542:INFO:Creating metrics dataframe
2024-07-31 05:07:21,566:INFO:Initializing create_model()
2024-07-31 05:07:21,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EF46D180>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:07:21,566:INFO:Checking exceptions
2024-07-31 05:07:21,566:INFO:Importing libraries
2024-07-31 05:07:21,566:INFO:Copying training dataset
2024-07-31 05:07:21,592:INFO:Defining folds
2024-07-31 05:07:21,593:INFO:Declaring metric variables
2024-07-31 05:07:21,593:INFO:Importing untrained model
2024-07-31 05:07:21,593:INFO:Declaring custom model
2024-07-31 05:07:21,594:INFO:K Neighbors Classifier Imported successfully
2024-07-31 05:07:21,597:INFO:Cross validation set to False
2024-07-31 05:07:21,597:INFO:Fitting Model
2024-07-31 05:07:21,616:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:07:21,773:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-31 05:07:21,773:INFO:create_model() successfully completed......................................
2024-07-31 05:07:22,075:INFO:_master_model_container: 10
2024-07-31 05:07:22,075:INFO:_display_container: 2
2024-07-31 05:07:22,075:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-31 05:07:22,076:INFO:compare_models() successfully completed......................................
2024-07-31 05:07:22,377:INFO:Initializing save_model()
2024-07-31 05:07:22,377:INFO:save_model(model=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), model_name=trained_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Lenovo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Strike Price', 'Call-Price',
                                             'Call-Change in Price (%)',
                                             'Call-Open Interest',
                                             'Call-Volume',
                                             'Call-Implied V...
                 TransformerWrapper(exclude=None, include=['Underlying Name'],
                                    transformer=OneHotEncoder(cols=['Underlying '
                                                                    'Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-31 05:07:22,380:INFO:Adding model into prep_pipe
2024-07-31 05:07:22,459:INFO:trained_model.pkl saved in current working directory
2024-07-31 05:07:22,611:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Strike Price', 'Call-Price',
                                             'Call-Change in Price (%)',
                                             'Call-Open Interest',
                                             'Call-Volume',
                                             'Call-Implied Volatility',
                                             'Greeks: Call Delta',
                                             'Greeks: Cal...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2024-07-31 05:07:22,612:INFO:save_model() successfully completed......................................
2024-07-31 05:39:30,199:INFO:PyCaret ClassificationExperiment
2024-07-31 05:39:30,395:INFO:Logging name: clf-default-name
2024-07-31 05:39:30,396:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-07-31 05:39:30,396:INFO:version 3.3.2
2024-07-31 05:39:30,396:INFO:Initializing setup()
2024-07-31 05:39:30,396:INFO:self.USI: 6bf3
2024-07-31 05:39:30,396:INFO:self._variable_keys: {'exp_id', 'fix_imbalance', 'fold_shuffle_param', 'exp_name_log', 'idx', 'html_param', 'X_test', 'X', 'fold_groups_param', 'y', 'gpu_n_jobs_param', 'log_plots_param', 'USI', 'data', 'pipeline', 'is_multiclass', 'fold_generator', 'n_jobs_param', 'y_train', 'gpu_param', 'y_test', 'target_param', 'seed', '_available_plots', 'X_train', '_ml_usecase', 'memory', 'logging_param'}
2024-07-31 05:39:30,397:INFO:Checking environment
2024-07-31 05:39:30,397:INFO:python_version: 3.10.0
2024-07-31 05:39:30,397:INFO:python_build: ('tags/v3.10.0:b494f59', 'Oct  4 2021 19:00:18')
2024-07-31 05:39:30,397:INFO:machine: AMD64
2024-07-31 05:39:30,397:INFO:platform: Windows-10-10.0.19045-SP0
2024-07-31 05:39:30,496:INFO:Memory: svmem(total=3504250880, available=469217280, percent=86.6, used=3035033600, free=469217280)
2024-07-31 05:39:30,496:INFO:Physical Core: 2
2024-07-31 05:39:30,496:INFO:Logical Core: 4
2024-07-31 05:39:30,496:INFO:Checking libraries
2024-07-31 05:39:30,496:INFO:System:
2024-07-31 05:39:30,544:INFO:    python: 3.10.0 (tags/v3.10.0:b494f59, Oct  4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]
2024-07-31 05:39:30,544:INFO:executable: D:\Desktop\autoanalysis\autoanalysis\Scripts\python.exe
2024-07-31 05:39:30,545:INFO:   machine: Windows-10-10.0.19045-SP0
2024-07-31 05:39:30,545:INFO:PyCaret required dependencies:
2024-07-31 05:39:30,545:INFO:                 pip: 21.2.3
2024-07-31 05:39:30,545:INFO:          setuptools: 57.4.0
2024-07-31 05:39:30,545:INFO:             pycaret: 3.3.2
2024-07-31 05:39:30,545:INFO:             IPython: 8.12.3
2024-07-31 05:39:30,545:INFO:          ipywidgets: 8.1.3
2024-07-31 05:39:30,546:INFO:                tqdm: 4.66.4
2024-07-31 05:39:30,546:INFO:               numpy: 1.26.4
2024-07-31 05:39:30,546:INFO:              pandas: 1.5.3
2024-07-31 05:39:30,546:INFO:              jinja2: 3.1.4
2024-07-31 05:39:30,546:INFO:               scipy: 1.11.4
2024-07-31 05:39:30,546:INFO:              joblib: 1.3.2
2024-07-31 05:39:30,547:INFO:             sklearn: 1.4.2
2024-07-31 05:39:30,547:INFO:                pyod: 2.0.1
2024-07-31 05:39:30,547:INFO:            imblearn: 0.12.3
2024-07-31 05:39:30,547:INFO:   category_encoders: 2.6.3
2024-07-31 05:39:30,621:INFO:            lightgbm: 4.5.0
2024-07-31 05:39:30,622:INFO:               numba: 0.60.0
2024-07-31 05:39:30,623:INFO:            requests: 2.32.3
2024-07-31 05:39:30,623:INFO:          matplotlib: 3.7.5
2024-07-31 05:39:30,623:INFO:          scikitplot: 0.3.7
2024-07-31 05:39:30,623:INFO:         yellowbrick: 1.5
2024-07-31 05:39:30,623:INFO:              plotly: 5.23.0
2024-07-31 05:39:30,624:INFO:    plotly-resampler: Not installed
2024-07-31 05:39:30,624:INFO:             kaleido: 0.2.1
2024-07-31 05:39:30,624:INFO:           schemdraw: 0.15
2024-07-31 05:39:30,624:INFO:         statsmodels: 0.14.2
2024-07-31 05:39:30,625:INFO:              sktime: 0.26.0
2024-07-31 05:39:30,625:INFO:               tbats: 1.1.3
2024-07-31 05:39:30,625:INFO:            pmdarima: 2.0.4
2024-07-31 05:39:30,625:INFO:              psutil: 6.0.0
2024-07-31 05:39:30,628:INFO:          markupsafe: 2.1.5
2024-07-31 05:39:30,628:INFO:             pickle5: Not installed
2024-07-31 05:39:30,628:INFO:         cloudpickle: 3.0.0
2024-07-31 05:39:30,629:INFO:         deprecation: 2.1.0
2024-07-31 05:39:30,630:INFO:              xxhash: 3.4.1
2024-07-31 05:39:30,630:INFO:           wurlitzer: Not installed
2024-07-31 05:39:30,631:INFO:PyCaret optional dependencies:
2024-07-31 05:39:30,631:INFO:                shap: Not installed
2024-07-31 05:39:30,631:INFO:           interpret: Not installed
2024-07-31 05:39:30,631:INFO:                umap: Not installed
2024-07-31 05:39:30,631:INFO:     ydata_profiling: 4.9.0
2024-07-31 05:39:30,631:INFO:  explainerdashboard: Not installed
2024-07-31 05:39:30,631:INFO:             autoviz: Not installed
2024-07-31 05:39:30,631:INFO:           fairlearn: Not installed
2024-07-31 05:39:30,631:INFO:          deepchecks: Not installed
2024-07-31 05:39:30,631:INFO:             xgboost: Not installed
2024-07-31 05:39:30,631:INFO:            catboost: Not installed
2024-07-31 05:39:30,631:INFO:              kmodes: Not installed
2024-07-31 05:39:30,631:INFO:             mlxtend: Not installed
2024-07-31 05:39:30,631:INFO:       statsforecast: Not installed
2024-07-31 05:39:30,631:INFO:        tune_sklearn: Not installed
2024-07-31 05:39:30,634:INFO:                 ray: Not installed
2024-07-31 05:39:30,634:INFO:            hyperopt: Not installed
2024-07-31 05:39:30,634:INFO:              optuna: Not installed
2024-07-31 05:39:30,635:INFO:               skopt: Not installed
2024-07-31 05:39:30,635:INFO:              mlflow: Not installed
2024-07-31 05:39:30,635:INFO:              gradio: Not installed
2024-07-31 05:39:30,636:INFO:             fastapi: Not installed
2024-07-31 05:39:30,636:INFO:             uvicorn: Not installed
2024-07-31 05:39:30,636:INFO:              m2cgen: Not installed
2024-07-31 05:39:30,637:INFO:           evidently: Not installed
2024-07-31 05:39:30,637:INFO:               fugue: Not installed
2024-07-31 05:39:30,637:INFO:           streamlit: 1.37.0
2024-07-31 05:39:30,637:INFO:             prophet: Not installed
2024-07-31 05:39:30,637:INFO:None
2024-07-31 05:39:30,637:INFO:Set up data.
2024-07-31 05:39:32,877:INFO:Set up folding strategy.
2024-07-31 05:39:32,877:INFO:Set up train/test split.
2024-07-31 05:39:33,373:INFO:Set up index.
2024-07-31 05:39:33,412:INFO:Assigning column types.
2024-07-31 05:39:33,491:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-07-31 05:39:33,894:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-31 05:39:33,905:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 05:39:34,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:34,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:34,658:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-07-31 05:39:34,658:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 05:39:34,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:34,847:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:34,847:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-07-31 05:39:35,134:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 05:39:35,322:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:35,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:35,683:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-07-31 05:39:35,789:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:35,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:35,794:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-07-31 05:39:36,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:36,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:36,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:36,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:36,514:INFO:Preparing preprocessing pipeline...
2024-07-31 05:39:36,516:INFO:Set up label encoding.
2024-07-31 05:39:36,516:INFO:Set up simple imputation.
2024-07-31 05:39:36,546:INFO:Set up encoding of categorical features.
2024-07-31 05:39:36,546:INFO:Set up column name cleaning.
2024-07-31 05:39:37,199:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:39:37,474:INFO:Finished creating preprocessing pipeline.
2024-07-31 05:39:37,514:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Lenovo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Strike Price', 'Call-Price',
                                             'Call-Change in Price (%)',
                                             'Call-Open Interest',
                                             'Call-Volume',
                                             'Call-Implied V...
                 TransformerWrapper(exclude=None, include=['Underlying Name'],
                                    transformer=OneHotEncoder(cols=['Underlying '
                                                                    'Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2024-07-31 05:39:37,514:INFO:Creating final display dataframe.
2024-07-31 05:39:37,744:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:39:38,808:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py:289: UserWarning: Persisting input arguments took 0.75s to run.If this happens often in your code, it can cause performance problems (results will be correct in all cases). The reason for this is probably some large input arguments for a wrapped function.
  X, y = self._memory_full_transform(

2024-07-31 05:39:38,964:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:39:39,614:INFO:Setup _display_container:                     Description             Value
0                    Session id              6130
1                        Target   Expiration Date
2                   Target type        Multiclass
3                Target mapping     29-08-2024: 0
4           Original data shape          (16, 24)
5        Transformed data shape          (16, 22)
6   Transformed train set shape          (11, 22)
7    Transformed test set shape           (5, 22)
8              Numeric features                22
9          Categorical features                 1
10     Rows with missing values            100.0%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              6bf3
2024-07-31 05:39:40,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:40,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:41,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:41,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-07-31 05:39:41,265:INFO:setup() successfully completed in 11.78s...............
2024-07-31 05:39:43,370:INFO:Initializing compare_models()
2024-07-31 05:39:43,371:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-07-31 05:39:43,372:INFO:Checking exceptions
2024-07-31 05:39:43,442:INFO:Preparing display monitor
2024-07-31 05:39:43,606:INFO:Initializing Logistic Regression
2024-07-31 05:39:43,606:INFO:Total runtime is 0.0 minutes
2024-07-31 05:39:43,606:INFO:SubProcess create_model() called ==================================
2024-07-31 05:39:43,660:INFO:Initializing create_model()
2024-07-31 05:39:43,661:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:39:43,662:INFO:Checking exceptions
2024-07-31 05:39:43,663:INFO:Importing libraries
2024-07-31 05:39:43,664:INFO:Copying training dataset
2024-07-31 05:39:43,684:INFO:Defining folds
2024-07-31 05:39:43,684:INFO:Declaring metric variables
2024-07-31 05:39:43,691:INFO:Importing untrained model
2024-07-31 05:39:43,692:INFO:Logistic Regression Imported successfully
2024-07-31 05:39:43,694:INFO:Starting cross validation
2024-07-31 05:39:43,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:40:58,610:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:58,611:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:58,620:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:58,624:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,074:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,080:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,084:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,112:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,236:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,236:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,347:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 05:40:59,360:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_logistic.py", line 1246, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


2024-07-31 05:40:59,362:INFO:Initializing create_model()
2024-07-31 05:40:59,362:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:40:59,363:INFO:Checking exceptions
2024-07-31 05:40:59,363:INFO:Importing libraries
2024-07-31 05:40:59,363:INFO:Copying training dataset
2024-07-31 05:40:59,455:INFO:Defining folds
2024-07-31 05:40:59,455:INFO:Declaring metric variables
2024-07-31 05:40:59,458:INFO:Importing untrained model
2024-07-31 05:40:59,460:INFO:Logistic Regression Imported successfully
2024-07-31 05:40:59,462:INFO:Starting cross validation
2024-07-31 05:40:59,465:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:40:59,634:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,634:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,645:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,657:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,797:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,804:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,804:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,827:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,955:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:40:59,961:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:00,083:ERROR:create_model() for lr raised an exception or returned all 0.0:
2024-07-31 05:41:00,084:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_logistic.py", line 1246, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_logistic.py", line 1246, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


2024-07-31 05:41:00,084:INFO:Initializing K Neighbors Classifier
2024-07-31 05:41:00,088:INFO:Total runtime is 1.2747130195299785 minutes
2024-07-31 05:41:00,089:INFO:SubProcess create_model() called ==================================
2024-07-31 05:41:00,089:INFO:Initializing create_model()
2024-07-31 05:41:00,089:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:00,089:INFO:Checking exceptions
2024-07-31 05:41:00,089:INFO:Importing libraries
2024-07-31 05:41:00,089:INFO:Copying training dataset
2024-07-31 05:41:00,116:INFO:Defining folds
2024-07-31 05:41:00,117:INFO:Declaring metric variables
2024-07-31 05:41:00,117:INFO:Importing untrained model
2024-07-31 05:41:00,117:INFO:K Neighbors Classifier Imported successfully
2024-07-31 05:41:00,117:INFO:Starting cross validation
2024-07-31 05:41:00,127:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:00,269:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:00,278:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:00,289:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:00,299:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:00,464:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:00,469:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:00,484:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:00,502:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:02,226:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:02,226:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:02,226:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:02,235:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:02,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,252:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,269:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,284:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,284:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,284:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,284:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,305:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,306:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,315:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,325:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,392:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:02,395:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:02,409:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:02,410:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:02,435:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:02,435:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:02,445:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:02,445:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:02,445:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:02,445:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:02,476:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:02,505:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:02,524:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:02,554:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:02,585:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:02,607:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:02,708:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:02,719:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:02,719:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:02,746:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:02,792:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:02,798:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,808:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,811:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:02,818:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,818:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,823:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:02,824:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,828:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,830:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:02,831:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:02,841:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:02,841:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,850:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:02,854:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,855:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,858:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,863:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:02,864:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:02,864:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,864:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:02,868:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:02,868:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:02,870:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:02,874:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:02,880:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:02,881:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:02,885:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(


2024-07-31 05:41:02,893:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:02,993:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:03,084:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:03,086:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:03,086:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:03,095:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:03,095:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:03,111:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:03,113:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:03,118:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:03,121:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:03,122:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:03,123:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:03,125:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:03,125:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:03,129:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:03,131:INFO:Calculating mean and std
2024-07-31 05:41:03,160:INFO:Creating metrics dataframe
2024-07-31 05:41:03,205:INFO:Uploading results into container
2024-07-31 05:41:03,205:INFO:Uploading model into container now
2024-07-31 05:41:03,213:INFO:_master_model_container: 1
2024-07-31 05:41:03,214:INFO:_display_container: 2
2024-07-31 05:41:03,214:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-31 05:41:03,214:INFO:create_model() successfully completed......................................
2024-07-31 05:41:03,704:INFO:SubProcess create_model() end ==================================
2024-07-31 05:41:03,704:INFO:Creating metrics dataframe
2024-07-31 05:41:03,735:INFO:Initializing Naive Bayes
2024-07-31 05:41:03,735:INFO:Total runtime is 1.3354869961738587 minutes
2024-07-31 05:41:03,736:INFO:SubProcess create_model() called ==================================
2024-07-31 05:41:03,736:INFO:Initializing create_model()
2024-07-31 05:41:03,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:03,736:INFO:Checking exceptions
2024-07-31 05:41:03,736:INFO:Importing libraries
2024-07-31 05:41:03,736:INFO:Copying training dataset
2024-07-31 05:41:03,768:INFO:Defining folds
2024-07-31 05:41:03,769:INFO:Declaring metric variables
2024-07-31 05:41:03,770:INFO:Importing untrained model
2024-07-31 05:41:03,770:INFO:Naive Bayes Imported successfully
2024-07-31 05:41:03,770:INFO:Starting cross validation
2024-07-31 05:41:03,790:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:03,945:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:03,945:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:03,945:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:03,995:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,087:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,094:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,128:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,145:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,166:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:04,177:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,187:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,192:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:04,197:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,198:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

s is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:04,203:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,207:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,207:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:04,207:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,216:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,217:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,219:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,230:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,236:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,237:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:04,240:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,240:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:04,240:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,244:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,246:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:04,249:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,259:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,268:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,276:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,278:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,299:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,305:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,306:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:04,310:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,340:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,413:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,424:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,463:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,472:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,518:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:04,523:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:04,527:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,527:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,537:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,537:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,544:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,544:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,553:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:04,557:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,566:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,568:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:04,569:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,572:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:04,573:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,574:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:04,573:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,577:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,577:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,585:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,585:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,585:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,591:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:04,595:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,596:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,605:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,616:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:04,616:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,647:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,667:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,778:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,788:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:04,846:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:04,847:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,855:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,865:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:04,865:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,865:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,874:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,874:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:04,874:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,886:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,887:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:04,894:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,895:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:04,897:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:04,905:INFO:Calculating mean and std
2024-07-31 05:41:04,907:INFO:Creating metrics dataframe
2024-07-31 05:41:04,917:INFO:Uploading results into container
2024-07-31 05:41:04,917:INFO:Uploading model into container now
2024-07-31 05:41:04,917:INFO:_master_model_container: 2
2024-07-31 05:41:04,917:INFO:_display_container: 2
2024-07-31 05:41:04,917:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-07-31 05:41:04,917:INFO:create_model() successfully completed......................................
2024-07-31 05:41:05,146:INFO:SubProcess create_model() end ==================================
2024-07-31 05:41:05,146:INFO:Creating metrics dataframe
2024-07-31 05:41:05,162:INFO:Initializing Decision Tree Classifier
2024-07-31 05:41:05,163:INFO:Total runtime is 1.3592861771583558 minutes
2024-07-31 05:41:05,163:INFO:SubProcess create_model() called ==================================
2024-07-31 05:41:05,164:INFO:Initializing create_model()
2024-07-31 05:41:05,164:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:05,164:INFO:Checking exceptions
2024-07-31 05:41:05,164:INFO:Importing libraries
2024-07-31 05:41:05,164:INFO:Copying training dataset
2024-07-31 05:41:05,176:INFO:Defining folds
2024-07-31 05:41:05,176:INFO:Declaring metric variables
2024-07-31 05:41:05,176:INFO:Importing untrained model
2024-07-31 05:41:05,176:INFO:Decision Tree Classifier Imported successfully
2024-07-31 05:41:05,176:INFO:Starting cross validation
2024-07-31 05:41:05,176:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:05,264:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,264:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,276:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,286:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,454:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,454:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,476:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,544:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:05,559:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,566:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,566:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:05,566:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,566:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

s is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:05,575:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:05,580:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,581:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,581:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:05,581:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,584:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,584:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,591:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,591:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,594:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,601:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,604:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,610:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,611:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:05,616:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,616:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,616:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:05,616:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:05,616:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,626:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,626:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,638:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,650:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,660:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,660:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,792:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,794:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,794:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,794:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,874:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:05,876:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,883:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:05,889:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,892:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,897:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:05,897:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,897:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,905:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,907:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:05,908:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,908:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:05,908:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,908:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,917:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,926:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,927:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,935:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,937:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:05,937:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,944:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:05,947:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,947:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:05,948:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,948:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,948:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:05,948:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:05,955:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,958:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:05,969:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:06,059:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:06,083:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:06,135:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:06,140:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:06,153:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:06,164:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:06,164:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:06,172:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:06,174:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:06,174:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:06,182:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:06,184:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:06,191:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:06,199:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:06,201:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:06,208:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:06,221:INFO:Calculating mean and std
2024-07-31 05:41:06,223:INFO:Creating metrics dataframe
2024-07-31 05:41:06,226:INFO:Uploading results into container
2024-07-31 05:41:06,226:INFO:Uploading model into container now
2024-07-31 05:41:06,232:INFO:_master_model_container: 3
2024-07-31 05:41:06,232:INFO:_display_container: 2
2024-07-31 05:41:06,233:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6130, splitter='best')
2024-07-31 05:41:06,233:INFO:create_model() successfully completed......................................
2024-07-31 05:41:06,464:INFO:SubProcess create_model() end ==================================
2024-07-31 05:41:06,464:INFO:Creating metrics dataframe
2024-07-31 05:41:06,474:INFO:Initializing SVM - Linear Kernel
2024-07-31 05:41:06,474:INFO:Total runtime is 1.3811480283737183 minutes
2024-07-31 05:41:06,474:INFO:SubProcess create_model() called ==================================
2024-07-31 05:41:06,474:INFO:Initializing create_model()
2024-07-31 05:41:06,474:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:06,474:INFO:Checking exceptions
2024-07-31 05:41:06,474:INFO:Importing libraries
2024-07-31 05:41:06,474:INFO:Copying training dataset
2024-07-31 05:41:06,490:INFO:Defining folds
2024-07-31 05:41:06,494:INFO:Declaring metric variables
2024-07-31 05:41:06,494:INFO:Importing untrained model
2024-07-31 05:41:06,496:INFO:SVM - Linear Kernel Imported successfully
2024-07-31 05:41:06,496:INFO:Starting cross validation
2024-07-31 05:41:06,499:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:06,584:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:06,584:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:06,591:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:06,614:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:06,788:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:06,834:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:06,869:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:06,884:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:06,976:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:07,015:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:07,124:WARNING:create_model() for svm raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 05:41:07,125:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 658, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 05:41:07,126:INFO:Initializing create_model()
2024-07-31 05:41:07,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:07,126:INFO:Checking exceptions
2024-07-31 05:41:07,126:INFO:Importing libraries
2024-07-31 05:41:07,126:INFO:Copying training dataset
2024-07-31 05:41:07,143:INFO:Defining folds
2024-07-31 05:41:07,144:INFO:Declaring metric variables
2024-07-31 05:41:07,144:INFO:Importing untrained model
2024-07-31 05:41:07,144:INFO:SVM - Linear Kernel Imported successfully
2024-07-31 05:41:07,147:INFO:Starting cross validation
2024-07-31 05:41:07,152:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:07,225:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:07,234:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:07,234:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:07,254:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:07,398:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:07,408:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:07,408:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:07,408:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:07,570:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:07,573:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:07,681:ERROR:create_model() for svm raised an exception or returned all 0.0:
2024-07-31 05:41:07,683:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 658, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 917, in fit
    return self._fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 704, in _fit
    self._partial_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 658, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 05:41:07,684:INFO:Initializing Ridge Classifier
2024-07-31 05:41:07,684:INFO:Total runtime is 1.4013070980707805 minutes
2024-07-31 05:41:07,684:INFO:SubProcess create_model() called ==================================
2024-07-31 05:41:07,685:INFO:Initializing create_model()
2024-07-31 05:41:07,685:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:07,685:INFO:Checking exceptions
2024-07-31 05:41:07,685:INFO:Importing libraries
2024-07-31 05:41:07,685:INFO:Copying training dataset
2024-07-31 05:41:07,704:INFO:Defining folds
2024-07-31 05:41:07,704:INFO:Declaring metric variables
2024-07-31 05:41:07,704:INFO:Importing untrained model
2024-07-31 05:41:07,704:INFO:Ridge Classifier Imported successfully
2024-07-31 05:41:07,708:INFO:Starting cross validation
2024-07-31 05:41:07,712:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:07,775:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:07,805:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:07,805:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:07,823:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,182:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,185:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,191:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,196:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,388:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:08,388:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:08,388:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:08,394:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,394:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,394:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,408:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,408:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,414:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,415:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,426:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,433:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,434:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,436:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:08,436:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,437:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,443:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,444:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:08,445:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,445:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:08,451:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,451:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,454:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,454:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,466:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,466:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:08,476:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,484:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,485:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,504:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,517:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,643:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,648:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,650:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,667:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,724:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:08,736:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,745:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,745:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:08,751:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,752:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:08,756:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,758:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,760:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,762:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,763:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:08,763:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,763:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,763:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,773:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,775:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,775:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:08,775:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,784:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,784:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,784:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:08,793:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,793:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:08,794:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,794:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,794:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:08,794:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,806:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:08,816:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,961:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:08,998:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:09,045:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:09,048:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:09,059:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:09,067:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:09,074:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:09,078:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:09,078:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:09,078:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:09,086:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:09,089:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:09,096:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:09,100:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:09,100:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:09,104:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:09,114:INFO:Calculating mean and std
2024-07-31 05:41:09,117:INFO:Creating metrics dataframe
2024-07-31 05:41:09,125:INFO:Uploading results into container
2024-07-31 05:41:09,125:INFO:Uploading model into container now
2024-07-31 05:41:09,125:INFO:_master_model_container: 4
2024-07-31 05:41:09,125:INFO:_display_container: 2
2024-07-31 05:41:09,125:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6130, solver='auto',
                tol=0.0001)
2024-07-31 05:41:09,125:INFO:create_model() successfully completed......................................
2024-07-31 05:41:09,353:INFO:SubProcess create_model() end ==================================
2024-07-31 05:41:09,354:INFO:Creating metrics dataframe
2024-07-31 05:41:09,373:INFO:Initializing Random Forest Classifier
2024-07-31 05:41:09,373:INFO:Total runtime is 1.4294567743937174 minutes
2024-07-31 05:41:09,374:INFO:SubProcess create_model() called ==================================
2024-07-31 05:41:09,375:INFO:Initializing create_model()
2024-07-31 05:41:09,375:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:09,375:INFO:Checking exceptions
2024-07-31 05:41:09,375:INFO:Importing libraries
2024-07-31 05:41:09,375:INFO:Copying training dataset
2024-07-31 05:41:09,384:INFO:Defining folds
2024-07-31 05:41:09,384:INFO:Declaring metric variables
2024-07-31 05:41:09,384:INFO:Importing untrained model
2024-07-31 05:41:09,384:INFO:Random Forest Classifier Imported successfully
2024-07-31 05:41:09,384:INFO:Starting cross validation
2024-07-31 05:41:09,384:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:09,464:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:09,464:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:09,476:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:09,485:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:10,389:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:10,391:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:10,420:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:10,442:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:10,610:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:10,615:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:10,622:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:10,625:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:10,628:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:10,630:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:10,633:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:10,635:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:10,642:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:10,656:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:10,657:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:10,658:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:10,658:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:10,662:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:10,672:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:10,672:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:10,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:10,684:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:10,686:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:10,691:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:10,691:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:10,695:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:10,697:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:10,718:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:10,718:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:10,724:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:10,734:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:10,734:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:10,737:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:10,737:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:10,778:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:11,484:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:11,520:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:11,593:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:11,724:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:11,725:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:11,728:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:11,728:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:11,739:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:11,746:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:11,746:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:11,754:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:11,754:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:11,756:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:11,756:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:11,760:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:11,763:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:11,796:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:11,810:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:11,828:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:11,834:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:11,839:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:11,843:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:11,844:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:11,851:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:11,853:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:11,854:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:11,854:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:11,859:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:11,863:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:11,864:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:11,867:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:11,872:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:12,434:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:12,434:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:12,626:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:12,626:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:12,631:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:12,632:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:12,639:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:12,643:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:12,647:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:12,651:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:12,651:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:12,652:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:12,658:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:12,661:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:12,662:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:12,664:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:12,670:INFO:Calculating mean and std
2024-07-31 05:41:12,672:INFO:Creating metrics dataframe
2024-07-31 05:41:12,683:INFO:Uploading results into container
2024-07-31 05:41:12,685:INFO:Uploading model into container now
2024-07-31 05:41:12,685:INFO:_master_model_container: 5
2024-07-31 05:41:12,686:INFO:_display_container: 2
2024-07-31 05:41:12,689:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6130, verbose=0,
                       warm_start=False)
2024-07-31 05:41:12,689:INFO:create_model() successfully completed......................................
2024-07-31 05:41:12,988:INFO:SubProcess create_model() end ==================================
2024-07-31 05:41:12,988:INFO:Creating metrics dataframe
2024-07-31 05:41:13,032:INFO:Initializing Quadratic Discriminant Analysis
2024-07-31 05:41:13,032:INFO:Total runtime is 1.490436359246572 minutes
2024-07-31 05:41:13,033:INFO:SubProcess create_model() called ==================================
2024-07-31 05:41:13,033:INFO:Initializing create_model()
2024-07-31 05:41:13,034:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:13,034:INFO:Checking exceptions
2024-07-31 05:41:13,034:INFO:Importing libraries
2024-07-31 05:41:13,034:INFO:Copying training dataset
2024-07-31 05:41:13,045:INFO:Defining folds
2024-07-31 05:41:13,045:INFO:Declaring metric variables
2024-07-31 05:41:13,046:INFO:Importing untrained model
2024-07-31 05:41:13,047:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-31 05:41:13,048:INFO:Starting cross validation
2024-07-31 05:41:13,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:13,160:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,160:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,160:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,411:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,412:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,413:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,416:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,575:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,578:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,679:WARNING:create_model() for qda raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 05:41:13,681:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\discriminant_analysis.py", line 905, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 05:41:13,682:INFO:Initializing create_model()
2024-07-31 05:41:13,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:13,682:INFO:Checking exceptions
2024-07-31 05:41:13,682:INFO:Importing libraries
2024-07-31 05:41:13,682:INFO:Copying training dataset
2024-07-31 05:41:13,691:INFO:Defining folds
2024-07-31 05:41:13,691:INFO:Declaring metric variables
2024-07-31 05:41:13,692:INFO:Importing untrained model
2024-07-31 05:41:13,693:INFO:Quadratic Discriminant Analysis Imported successfully
2024-07-31 05:41:13,693:INFO:Starting cross validation
2024-07-31 05:41:13,698:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:13,764:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,764:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,777:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,794:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,945:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,959:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,959:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:13,999:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,085:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,107:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,212:ERROR:create_model() for qda raised an exception or returned all 0.0:
2024-07-31 05:41:14,230:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\discriminant_analysis.py", line 905, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\discriminant_analysis.py", line 905, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2024-07-31 05:41:14,231:INFO:Initializing Ada Boost Classifier
2024-07-31 05:41:14,231:INFO:Total runtime is 1.5104305585225424 minutes
2024-07-31 05:41:14,233:INFO:SubProcess create_model() called ==================================
2024-07-31 05:41:14,235:INFO:Initializing create_model()
2024-07-31 05:41:14,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:14,235:INFO:Checking exceptions
2024-07-31 05:41:14,235:INFO:Importing libraries
2024-07-31 05:41:14,235:INFO:Copying training dataset
2024-07-31 05:41:14,250:INFO:Defining folds
2024-07-31 05:41:14,250:INFO:Declaring metric variables
2024-07-31 05:41:14,250:INFO:Importing untrained model
2024-07-31 05:41:14,262:INFO:Ada Boost Classifier Imported successfully
2024-07-31 05:41:14,263:INFO:Starting cross validation
2024-07-31 05:41:14,276:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:14,405:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,450:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,450:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,614:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:41:14,615:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:41:14,617:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:41:14,638:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,643:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,645:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,653:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,731:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:14,730:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:14,738:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:14,741:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:14,741:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:14,749:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:14,750:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:14,754:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:14,756:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:14,761:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:14,763:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:14,764:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:14,764:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:14,766:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:14,767:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:14,767:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:14,767:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:14,772:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:14,777:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:14,780:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:14,780:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:14,787:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:14,787:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:14,787:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:14,795:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:14,796:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:14,796:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:14,807:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:14,805:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,807:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,838:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,854:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,936:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:41:14,943:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:41:14,962:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,967:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,971:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:41:14,981:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:41:14,996:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:14,998:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:15,056:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:15,058:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:15,060:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,060:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,067:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,073:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,078:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,081:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,089:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:15,089:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:15,090:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:15,090:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:15,090:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:15,094:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:15,096:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:15,099:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,100:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:15,110:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,115:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,120:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,125:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,128:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:15,129:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,130:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:15,132:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:15,134:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:15,135:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:15,137:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:15,140:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:15,141:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:15,225:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:41:15,231:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-07-31 05:41:15,243:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:15,243:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:15,317:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:15,318:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:15,325:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,333:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,351:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,364:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,382:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,385:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:15,396:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:15,396:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:15,396:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:15,402:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:15,407:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:15,412:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:15,418:INFO:Calculating mean and std
2024-07-31 05:41:15,422:INFO:Creating metrics dataframe
2024-07-31 05:41:15,454:INFO:Uploading results into container
2024-07-31 05:41:15,457:INFO:Uploading model into container now
2024-07-31 05:41:15,458:INFO:_master_model_container: 6
2024-07-31 05:41:15,458:INFO:_display_container: 2
2024-07-31 05:41:15,458:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6130)
2024-07-31 05:41:15,458:INFO:create_model() successfully completed......................................
2024-07-31 05:41:15,695:INFO:SubProcess create_model() end ==================================
2024-07-31 05:41:15,699:INFO:Creating metrics dataframe
2024-07-31 05:41:15,707:INFO:Initializing Gradient Boosting Classifier
2024-07-31 05:41:15,713:INFO:Total runtime is 1.5351274251937868 minutes
2024-07-31 05:41:15,713:INFO:SubProcess create_model() called ==================================
2024-07-31 05:41:15,714:INFO:Initializing create_model()
2024-07-31 05:41:15,715:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:15,715:INFO:Checking exceptions
2024-07-31 05:41:15,715:INFO:Importing libraries
2024-07-31 05:41:15,715:INFO:Copying training dataset
2024-07-31 05:41:15,726:INFO:Defining folds
2024-07-31 05:41:15,735:INFO:Declaring metric variables
2024-07-31 05:41:15,735:INFO:Importing untrained model
2024-07-31 05:41:15,737:INFO:Gradient Boosting Classifier Imported successfully
2024-07-31 05:41:15,737:INFO:Starting cross validation
2024-07-31 05:41:15,745:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:15,814:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:15,819:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:15,824:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:15,861:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:16,095:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:16,104:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:16,105:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:16,114:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:16,264:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:16,268:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:16,384:WARNING:create_model() for gbc raised an exception or returned all 0.0, trying without fit_kwargs:
2024-07-31 05:41:16,386:WARNING:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 665, in fit
    y = self._encode_y(y=y, sample_weight=None)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 1520, in _encode_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


2024-07-31 05:41:16,387:INFO:Initializing create_model()
2024-07-31 05:41:16,387:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:16,387:INFO:Checking exceptions
2024-07-31 05:41:16,387:INFO:Importing libraries
2024-07-31 05:41:16,387:INFO:Copying training dataset
2024-07-31 05:41:16,408:INFO:Defining folds
2024-07-31 05:41:16,408:INFO:Declaring metric variables
2024-07-31 05:41:16,408:INFO:Importing untrained model
2024-07-31 05:41:16,408:INFO:Gradient Boosting Classifier Imported successfully
2024-07-31 05:41:16,408:INFO:Starting cross validation
2024-07-31 05:41:16,415:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:16,555:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:16,555:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:16,564:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:16,594:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:16,750:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:16,769:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:16,783:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:16,865:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:16,972:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:17,028:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:17,142:ERROR:create_model() for gbc raised an exception or returned all 0.0:
2024-07-31 05:41:17,145:ERROR:Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 665, in fit
    y = self._encode_y(y=y, sample_weight=None)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 1520, in _encode_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 665, in fit
    y = self._encode_y(y=y, sample_weight=None)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\ensemble\_gb.py", line 1520, in _encode_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


2024-07-31 05:41:17,146:INFO:Initializing Linear Discriminant Analysis
2024-07-31 05:41:17,147:INFO:Total runtime is 1.5590169906616211 minutes
2024-07-31 05:41:17,147:INFO:SubProcess create_model() called ==================================
2024-07-31 05:41:17,148:INFO:Initializing create_model()
2024-07-31 05:41:17,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:17,148:INFO:Checking exceptions
2024-07-31 05:41:17,148:INFO:Importing libraries
2024-07-31 05:41:17,148:INFO:Copying training dataset
2024-07-31 05:41:17,161:INFO:Defining folds
2024-07-31 05:41:17,161:INFO:Declaring metric variables
2024-07-31 05:41:17,162:INFO:Importing untrained model
2024-07-31 05:41:17,164:INFO:Linear Discriminant Analysis Imported successfully
2024-07-31 05:41:17,165:INFO:Starting cross validation
2024-07-31 05:41:17,168:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:17,245:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:17,253:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:17,258:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:17,272:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:18,766:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:18,801:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:18,802:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:18,808:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:18,910:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:18,925:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:18,926:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:18,934:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:18,935:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:18,940:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:18,940:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:18,942:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:18,944:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:18,945:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:18,951:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:18,952:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:18,953:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:18,954:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:18,955:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:18,959:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:18,963:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:18,963:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:18,970:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:18,970:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:18,971:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:18,982:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:18,982:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:18,982:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:18,982:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:18,984:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:18,984:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:18,984:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:19,013:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:19,016:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:19,020:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:19,135:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:19,158:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:19,162:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:19,164:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:19,248:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:19,250:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:19,250:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,250:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,257:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,261:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,263:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:19,264:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,266:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,267:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,271:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,272:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,273:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,278:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:19,278:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:19,279:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,279:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:19,279:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:19,279:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:19,284:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:19,287:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:19,291:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,296:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:19,301:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:19,301:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:19,308:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:19,312:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:19,312:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:19,448:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:19,448:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:19,516:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:19,516:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:19,526:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,527:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,538:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,544:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,544:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:19,560:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:19,560:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:19,561:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:19,561:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:19,566:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:19,576:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:19,590:INFO:Calculating mean and std
2024-07-31 05:41:19,596:INFO:Creating metrics dataframe
2024-07-31 05:41:19,634:INFO:Uploading results into container
2024-07-31 05:41:19,639:INFO:Uploading model into container now
2024-07-31 05:41:19,641:INFO:_master_model_container: 7
2024-07-31 05:41:19,641:INFO:_display_container: 2
2024-07-31 05:41:19,642:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-07-31 05:41:19,642:INFO:create_model() successfully completed......................................
2024-07-31 05:41:19,883:INFO:SubProcess create_model() end ==================================
2024-07-31 05:41:19,883:INFO:Creating metrics dataframe
2024-07-31 05:41:19,905:INFO:Initializing Extra Trees Classifier
2024-07-31 05:41:19,905:INFO:Total runtime is 1.604989775021871 minutes
2024-07-31 05:41:19,905:INFO:SubProcess create_model() called ==================================
2024-07-31 05:41:19,907:INFO:Initializing create_model()
2024-07-31 05:41:19,907:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:19,907:INFO:Checking exceptions
2024-07-31 05:41:19,907:INFO:Importing libraries
2024-07-31 05:41:19,908:INFO:Copying training dataset
2024-07-31 05:41:19,924:INFO:Defining folds
2024-07-31 05:41:19,924:INFO:Declaring metric variables
2024-07-31 05:41:19,933:INFO:Importing untrained model
2024-07-31 05:41:19,935:INFO:Extra Trees Classifier Imported successfully
2024-07-31 05:41:19,936:INFO:Starting cross validation
2024-07-31 05:41:19,939:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:20,030:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:20,036:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:20,041:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:20,044:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:20,604:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:20,631:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:20,639:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:20,641:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:20,823:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:20,824:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:20,828:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:20,828:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:20,837:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:20,837:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:20,849:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:20,849:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:20,849:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:20,853:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:20,858:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:20,858:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:20,860:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:20,862:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:20,867:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:20,870:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:20,870:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:20,875:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:20,876:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:20,876:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:20,878:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:20,886:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:20,909:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:20,913:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:20,941:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:20,947:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:20,959:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:20,964:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:20,966:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:20,975:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:20,977:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:21,018:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:21,456:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:21,465:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:21,511:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:21,696:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:21,702:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:21,703:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:21,707:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:21,712:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:21,723:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:21,739:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:21,740:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:21,760:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:21,766:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:21,768:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:21,774:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:21,798:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:21,800:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:21,807:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:21,838:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:21,865:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:21,928:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:21,936:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:21,944:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:21,950:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:21,960:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:21,961:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:21,965:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:22,018:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:22,024:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:22,033:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:22,056:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:22,072:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:22,074:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:22,088:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:22,508:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:22,526:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:22,718:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:22,726:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:22,728:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:22,730:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:22,740:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:22,740:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:22,740:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:22,740:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:22,757:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:22,758:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:22,759:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:22,759:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:22,760:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:22,760:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:22,775:INFO:Calculating mean and std
2024-07-31 05:41:22,778:INFO:Creating metrics dataframe
2024-07-31 05:41:22,801:INFO:Uploading results into container
2024-07-31 05:41:22,805:INFO:Uploading model into container now
2024-07-31 05:41:22,808:INFO:_master_model_container: 8
2024-07-31 05:41:22,808:INFO:_display_container: 2
2024-07-31 05:41:22,810:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6130, verbose=0,
                     warm_start=False)
2024-07-31 05:41:22,814:INFO:create_model() successfully completed......................................
2024-07-31 05:41:23,221:INFO:SubProcess create_model() end ==================================
2024-07-31 05:41:23,221:INFO:Creating metrics dataframe
2024-07-31 05:41:23,241:INFO:Initializing Light Gradient Boosting Machine
2024-07-31 05:41:23,241:INFO:Total runtime is 1.6605892618497213 minutes
2024-07-31 05:41:23,241:INFO:SubProcess create_model() called ==================================
2024-07-31 05:41:23,243:INFO:Initializing create_model()
2024-07-31 05:41:23,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:23,244:INFO:Checking exceptions
2024-07-31 05:41:23,244:INFO:Importing libraries
2024-07-31 05:41:23,244:INFO:Copying training dataset
2024-07-31 05:41:23,257:INFO:Defining folds
2024-07-31 05:41:23,258:INFO:Declaring metric variables
2024-07-31 05:41:23,258:INFO:Importing untrained model
2024-07-31 05:41:23,259:INFO:Light Gradient Boosting Machine Imported successfully
2024-07-31 05:41:23,259:INFO:Starting cross validation
2024-07-31 05:41:23,259:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:23,345:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:23,347:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:23,347:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:23,364:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:25,441:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:25,445:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:25,457:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:25,467:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:25,561:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:25,561:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:25,564:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:25,564:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:25,564:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:25,564:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:25,564:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:25,571:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:25,574:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:25,582:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:25,586:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:25,591:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:25,591:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:25,592:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:25,595:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:25,595:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:25,596:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:25,597:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:25,597:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:25,597:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:25,603:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:25,607:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:25,612:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:25,633:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:25,635:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:25,646:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:25,654:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:25,644:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:25,677:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:25,677:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:25,686:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:25,717:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:26,660:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:26,850:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:26,854:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:26,865:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:26,877:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:26,887:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:26,888:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:26,896:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:26,968:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:27,154:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:27,169:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:27,186:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:27,199:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:27,255:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:27,288:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:27,315:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:27,395:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:27,430:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:27,505:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:27,558:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:27,564:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:27,576:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:27,587:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:27,598:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:27,598:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:27,606:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:27,608:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:27,627:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:27,638:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:27,648:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:27,665:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:27,666:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:27,676:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:27,775:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:27,784:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:27,851:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:27,856:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:27,856:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 640, in roc_auc_score
    return _average_binary_score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_base.py", line 75, in _average_binary_score
    return binary_metric(y_true, y_score, sample_weight=sample_weight)
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_ranking.py", line 382, in _binary_roc_auc_score
    raise ValueError(
ValueError: Only one class present in y_true. ROC AUC score is not defined in that case.

  warnings.warn(

2024-07-31 05:41:27,859:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:27,866:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:27,871:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:27,875:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:27,881:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:27,883:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:27,883:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:27,889:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:27,889:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:27,890:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:27,895:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:27,904:INFO:Calculating mean and std
2024-07-31 05:41:27,907:INFO:Creating metrics dataframe
2024-07-31 05:41:27,922:INFO:Uploading results into container
2024-07-31 05:41:27,924:INFO:Uploading model into container now
2024-07-31 05:41:27,924:INFO:_master_model_container: 9
2024-07-31 05:41:27,924:INFO:_display_container: 2
2024-07-31 05:41:27,924:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6130, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-07-31 05:41:27,924:INFO:create_model() successfully completed......................................
2024-07-31 05:41:28,190:INFO:SubProcess create_model() end ==================================
2024-07-31 05:41:28,190:INFO:Creating metrics dataframe
2024-07-31 05:41:28,224:INFO:Initializing Dummy Classifier
2024-07-31 05:41:28,224:INFO:Total runtime is 1.7436479091644288 minutes
2024-07-31 05:41:28,224:INFO:SubProcess create_model() called ==================================
2024-07-31 05:41:28,224:INFO:Initializing create_model()
2024-07-31 05:41:28,224:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214EEB94580>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:28,224:INFO:Checking exceptions
2024-07-31 05:41:28,224:INFO:Importing libraries
2024-07-31 05:41:28,224:INFO:Copying training dataset
2024-07-31 05:41:28,248:INFO:Defining folds
2024-07-31 05:41:28,249:INFO:Declaring metric variables
2024-07-31 05:41:28,250:INFO:Importing untrained model
2024-07-31 05:41:28,251:INFO:Dummy Classifier Imported successfully
2024-07-31 05:41:28,251:INFO:Starting cross validation
2024-07-31 05:41:28,261:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-07-31 05:41:28,344:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:28,357:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:28,364:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:28,364:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:28,478:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:28,525:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:28,519:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:28,553:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:28,565:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (2, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:28,568:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:28,583:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:28,594:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:28,596:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:28,599:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:28,604:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:28,605:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:28,608:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:28,620:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:28,628:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:28,629:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:28,642:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:28,644:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:28,649:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:28,651:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:28,651:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:28,657:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:28,663:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:28,669:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:28,670:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:28,675:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:28,675:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:28,676:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:28,681:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:28,694:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:28,702:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:28,702:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:28,716:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:28,785:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:28,786:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:28,828:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:28,970:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:29,074:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:29,094:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:29,101:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:29,110:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:29,117:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,137:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,167:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,177:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:29,181:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,185:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:29,190:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,195:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:29,196:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:29,209:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:29,222:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:29,227:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,229:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,229:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,229:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,236:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,240:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:29,240:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:29,240:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,244:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:29,245:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:29,245:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:29,249:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:29,256:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:29,257:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:29,264:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:29,269:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:29,278:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:29,390:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:29,410:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:29,458:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:29,466:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,477:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,477:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 345, in _score
    y_pred = method_caller(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in _cached_call
    result, _ = _get_response_values(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 213, in _get_response_values
    y_pred = _process_predict_proba(
  File "D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\utils\_response.py", line 50, in _process_predict_proba
    raise ValueError(
ValueError: Got predict_proba of shape (1, 1), but need classifier with two classes.

  warnings.warn(

2024-07-31 05:41:29,490:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,495:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,511:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,514:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:29,514:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:29,525:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to '29-08-2024') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-07-31 05:41:29,525:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:29,525:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:29,525:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:708: RuntimeWarning: invalid value encountered in scalar divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2024-07-31 05:41:29,536:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\metrics\_classification.py:386: UserWarning: A single label was found in 'y_true' and 'y_pred'. For the confusion matrix to have the correct shape, use the 'labels' parameter to pass all known labels.
  warnings.warn(

2024-07-31 05:41:29,542:INFO:Calculating mean and std
2024-07-31 05:41:29,543:INFO:Creating metrics dataframe
2024-07-31 05:41:29,545:INFO:Uploading results into container
2024-07-31 05:41:29,545:INFO:Uploading model into container now
2024-07-31 05:41:29,545:INFO:_master_model_container: 10
2024-07-31 05:41:29,545:INFO:_display_container: 2
2024-07-31 05:41:29,554:INFO:DummyClassifier(constant=None, random_state=6130, strategy='prior')
2024-07-31 05:41:29,554:INFO:create_model() successfully completed......................................
2024-07-31 05:41:29,846:INFO:SubProcess create_model() end ==================================
2024-07-31 05:41:29,846:INFO:Creating metrics dataframe
2024-07-31 05:41:29,876:INFO:Initializing create_model()
2024-07-31 05:41:29,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214EE726B30>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-07-31 05:41:29,877:INFO:Checking exceptions
2024-07-31 05:41:29,879:INFO:Importing libraries
2024-07-31 05:41:29,879:INFO:Copying training dataset
2024-07-31 05:41:29,891:INFO:Defining folds
2024-07-31 05:41:29,891:INFO:Declaring metric variables
2024-07-31 05:41:29,892:INFO:Importing untrained model
2024-07-31 05:41:29,892:INFO:Declaring custom model
2024-07-31 05:41:29,896:INFO:K Neighbors Classifier Imported successfully
2024-07-31 05:41:29,899:INFO:Cross validation set to False
2024-07-31 05:41:29,900:INFO:Fitting Model
2024-07-31 05:41:29,917:WARNING:D:\Desktop\autoanalysis\autoanalysis\lib\site-packages\sklearn\impute\_base.py:577: UserWarning: Skipping features without any observed values: ['Greeks: Call Rho' 'Greeks: Put Rho']. At least one non-missing value is needed for imputation with strategy='mean'.
  warnings.warn(

2024-07-31 05:41:30,120:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-31 05:41:30,121:INFO:create_model() successfully completed......................................
2024-07-31 05:41:30,513:INFO:_master_model_container: 10
2024-07-31 05:41:30,513:INFO:_display_container: 2
2024-07-31 05:41:30,515:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-07-31 05:41:30,515:INFO:compare_models() successfully completed......................................
2024-07-31 05:41:30,573:INFO:Initializing save_model()
2024-07-31 05:41:30,573:INFO:save_model(model=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), model_name=trained_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Lenovo\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Strike Price', 'Call-Price',
                                             'Call-Change in Price (%)',
                                             'Call-Open Interest',
                                             'Call-Volume',
                                             'Call-Implied V...
                 TransformerWrapper(exclude=None, include=['Underlying Name'],
                                    transformer=OneHotEncoder(cols=['Underlying '
                                                                    'Name'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-07-31 05:41:30,573:INFO:Adding model into prep_pipe
2024-07-31 05:41:30,596:INFO:trained_model.pkl saved in current working directory
2024-07-31 05:41:30,694:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Strike Price', 'Call-Price',
                                             'Call-Change in Price (%)',
                                             'Call-Open Interest',
                                             'Call-Volume',
                                             'Call-Implied Volatility',
                                             'Greeks: Call Delta',
                                             'Greeks: Cal...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2024-07-31 05:41:30,695:INFO:save_model() successfully completed......................................
